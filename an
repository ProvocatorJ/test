!(function (
    e,
    t,
    a,
    r,
    n,
    i,
    o,
    l,
    s,
    u,
    d,
    c,
    m,
    p,
    g,
    h,
    f,
    v,
    y,
    b,
    k,
    w,
    C,
    x,
    T,
    _,
    I,
    S,
    A,
  ) {
    let O,
      E,
      P,
      q,
      R,
      D,
      F,
      N,
      M,
      B,
      L,
      G,
      U,
      H,
      Q,
      X,
      J,
      W,
      K,
      V,
      Y,
      j,
      z,
      Z,
      ee,
      te,
      ae,
      re;
    var ne,
      ie = () => H.createLabel(null, "gts-icon icon_gold"),
      oe = null,
      le = null,
      se = (e, t) => "true" == D(e, t || !1),
      ue = (e, t) => F(e, JSON.stringify(t)),
      de = (e, t) => F(e, new Date().getTime() + 1e3 * t),
      ce = (e, t, a) => {
        y(e).toggleClass(t, a);
      },
      me = (e) => n[a(g(o(e)))],
      pe = [],
      ge = [],
      he = 1;
    let fe,
      ve,
      ye,
      be,
      ke,
      we,
      Ce,
      xe,
      Te,
      _e,
      Ie,
      Se,
      Ae,
      Oe,
      Ee,
      Pe,
      qe,
      Re,
      De,
      Fe,
      Ne,
      Me,
      Be,
      Le,
      Ge,
      Ue,
      He,
      Qe,
      Xe;
    var Je = {
      buildHighQualityItemsInShop: function (e, t) {
        for (var a of (this.removeChildren(e),
        t || (t = N(X.shopHighQualityItems)),
        t.sort((e, t) => (t.isMercenary ? 1 : 0) - (e.isMercenary ? 1 : 0)),
        t)) {
          var r = this.createElement("div", null, "auction_item_div");
          ((e) => {
            r.onclick = () => {
              n.location.href = R.link(y.extend({ mod: "inventory" }, e));
            };
          })(a.params);
          var i = this.createElement("div");
          i.style = "position: relative";
          var o = [a.class.split(" ")[0]];
          void 0 !== a.quality &&
            o.push("item-quality-" + qualityMap[a.quality + 1]);
          var l = this.createElement("div", null, o.join(" "));
          void 0 !== n.tooltips && n.tooltips.set(r, a.tooltip),
            i.appendChild(l),
            r.appendChild(i),
            e.appendChild(r);
        }
        return e;
      },
      startStop: function (e) {
        if (e != E.isRunning())
          return (
            (n.isRunning = e),
            E.startAutoCurrentTab(n.isRunning),
            F(Z.paused, !n.isRunning),
            !0
          );
      },
      createMenuItem: function (e, t, a, r) {
        var n = b.createElement("li");
        if (e) {
          var i = this.createInput(e, "checkbox"),
            o = e == ae.enabled;
          (i.checked = "true" == D(e, !0)),
            o && B(ae.enableAutoTime, "0") > 0 && (i.checked = !0),
            y(i).on("change", function () {
              F(e, this.checked),
                o && F(ae.enableAutoTime, -1),
                e == j.enabled && F(j.disableHealUntil, 0);
            }),
            n.appendChild(i);
        }
        var l = this.createElement("label", null, null, t);
        return (
          n.appendChild(l),
          (n.onclick = function () {
            if (-1 == this.className.indexOf("active")) {
              var e = this.parentElement.querySelector(".active");
              e && e.classList.remove("active"),
                (this.className += " active"),
                a();
            }
            r.className = r.className.replace("close", "open");
          }),
          n
        );
      },
      buildMenu: function (e) {
        var t = b.createElement("ul");
        t.className = "tabs";
        var r = H._createElement("li", null, "center no-hover"),
          i = b.createElement("span");
        r.appendChild(i);
        var o = b.createElement("h4");
        (o.textContent = `GTS ${gtsVersion}`),
          (o.className = "collapsed"),
          r.appendChild(o),
          t.appendChild(r);
        var s = H._createElement("li", null, "center no-hover"),
          u = H._createElement("span", null, "gts-pause");
        s.appendChild(u),
          t.appendChild(s),
          E.isRunning() && (u.className += " pause");
        var p = void 0;
        y(u).on("click", () => {
          if (!1 === u.isPremium) return void (p && p.click());
          let e = E.isRunning();
          (n.isRunning = !e),
            E.startAutoCurrentTab(n.isRunning),
            F(Z.paused, !n.isRunning),
            $(u).toggleClass("pause", n.isRunning);
        });
        var g = this.createElement("span", null, "button");
        u.appendChild(g);
        for (
          var h,
            w,
            C,
            x = v((playerId + "").substr(0, 6)),
            A = [],
            O =
              ((h = D(a(l(f(k("fkPOYRC3UdXjgHXldNxdIPOu7"), 7))), "")
                .trim()
                .toLowerCase()),
              (w = (function (e) {
                if (((A = []), !e)) return null;
                var t = c(e, "-");
                if (3 != t.length && 4 != t.length) return null;
                var a = m(t[0], 2),
                  r = v(m(t[0], 0, 2)),
                  n = d(t[1], r),
                  i = I * x * (2 << S);
                return n != d(t[2], r) - i || i + _ * (3 << S) != d(a, r)
                  ? null
                  : (4 == t.length &&
                      d(t[3], r) == i &&
                      A.push((x * Je.server).toString(19)),
                    new Date(n));
              })(h)),
              (C = T()),
              w && w > C && [].indexOf(h) < 0),
            P = A.indexOf((x * Je.server).toString(19)) >= 0,
            q = function (t) {
              if (!O || (t && !P)) {
                var a = R.createElement("div");
                (a.className = "invalid-license"),
                  (a.textContent =
                    O && t
                      ? "Invalid Premium License".gts_translate()
                      : "Invalid License".gts_translate()),
                  e.appendChild(a);
              }
            },
            R = this,
            N = [
              {
                id: K.enabled,
                name: "Expedition".gts_translate(),
                onclick: function () {
                  R.buildExpeditionContent(e), q();
                },
              },
              {
                id: Y.enabled,
                name: "Underworld".gts_translate(),
                onclick: function () {
                  R.buildUnderworldContent(e), q();
                },
              },
              {
                id: z.enabled,
                name: "Event".gts_translate(),
                onclick: function () {
                  R.buildEventContent(e), q();
                },
              },
              {
                id: V.enabled,
                name: "Dungeon".gts_translate(),
                onclick: function () {
                  R.buildDungeonContent(e), q();
                },
              },
              {
                id: W.enabled,
                name: "Arena".gts_translate(),
                onclick: function () {
                  R.buildArenaContent(e, P), q();
                },
              },
              {
                id: J.enabled,
                name: "Circus".gts_translate(),
                onclick: function () {
                  R.buildCircusTumaContent(e, P), q();
                },
              },
              {
                id: j.enabled,
                name: "Heal".gts_translate(),
                onclick: function () {
                  R.buildHealthContent(e), q();
                },
              },
              {
                id: ae.enabled,
                name: "Pantheon".gts_translate(),
                onclick: function () {
                  R.buildQuestProContent(e, P), q();
                },
              },
              {
                name: "Premium".gts_translate(),
                onclick: function () {
                  R.buildPremiumContent(e), q(!0);
                },
              },
              {
                name: "General".gts_translate(),
                onclick: function () {
                  R.buildGeneralSettings(e);
                },
              },
            ],
            M = 0;
          M < N.length;
          M++
        ) {
          var B = N[M];
          if (!(this.level < 10 && B.name == "Dungeon".gts_translate())) {
            var L = this.createMenuItem(B.id, B.name, B.onclick, e);
            !B.id && (L.className = "center"),
              M == N.length - 1 && (p = L),
              t.appendChild(L);
          }
        }
        return t;
      },
      addMoreQuickActions: function () {
        var e = [
            {
              name: "Gladiator Amulets",
              icon: "item-i-9-9",
              url: R.link({ mod: "auction", itemType: "9" }),
            },
            {
              name: "Mercenaries Amulets",
              icon: "item-i-9-4",
              url: R.link({ mod: "auction", itemType: "9", ttype: "3" }),
            },
          ],
          t = b.getElementById("gca_shortcuts_bar");
        if (t)
          for (var a of e)
            (button = b.createElement("div")),
              (button.className = "icon-out"),
              (link = b.createElement("a")),
              (link.className = "icon " + a.icon),
              (link.href = a.url),
              (link.title = a.name),
              button.appendChild(link),
              t.appendChild(button);
      },
      buildQuestProContent: function (e, t) {
        this.removeChildren(e);
        let a = H.createLink(
          "Check this video".gts_translate(),
          "https://www.youtube.com/watch?v=uk6IoMVzmGs",
          "video-link margin-l-5",
        );
        e.appendChild(
          this.createRow("Description".gts_translate(), [
            b.createTextNode(
              "Configuration for picking quest automatically.".gts_translate(),
            ),
            a,
          ]),
        );
        let r = H.createToggle(ae.checkMissionBeforeAttack, "", !0);
        e.appendChild(
          this.createRow("Check mission before attack".gts_translate(), [r]),
        );
        let n = [0, 1, 2, 3, 4, 5].map((e) => ({ text: `${e}`, value: e })),
          i = H.createDropdown(ae.minFillupQuestCount, 3, n);
        e.appendChild(
          this.createRow(
            "Number of quest need to be filled up before attack".gts_translate(),
            [i],
          ),
        );
        var o = t
            ? this.createElement("div", null, "quest-rules")
            : this.createElement(
                "span",
                null,
                "red-text",
                "Buy premium license to make picking quests configurable.".gts_translate(),
              ),
          l = this.createRow(
            "Picking quest rules".gts_translate(),
            [o],
            "quest-rules-label",
          );
        e.appendChild(l);
        var s,
          u = N(ae.pickingRules),
          d = (e) =>
            unaryOperators.indexOf(e) > -1
              ? "unary-operator"
              : e == filterOperators.numberAttackLessThan
                ? "number-operator"
                : "",
          c = (e) => {
            (e = (e || []).filter((e) => e)),
              F(ae.pickingRules, JSON.stringify(e));
          },
          m = (e, t) => {
            var a = ["condition-item", d(e.operator)],
              r = this.createElement("div", null, a.join(" ")),
              n = E.buildDropDown(filterOperatorOptions, e.operator, (t) => {
                (e.operator = t.value), c(u);
                var a = y(r);
                a.removeClass("number-operator"),
                  a.removeClass("unary-operator"),
                  a.addClass(d(t.value));
              });
            r.append(n);
            var i = this.createInput(null, "textbox", "condition-value");
            (i.value = e.value),
              y(i).on("change", () => {
                s && clearTimeout(s),
                  (e.value = i.value),
                  (s = setTimeout(() => {
                    c(u);
                  }, 300));
              }),
              r.append(i);
            var o = this.createElement("span", null, "icon-trash");
            return (
              (o.title = "remove this condition"),
              (o.innerHTML = "&#x1F5D1;"),
              ((e, a, r) => {
                y(o).click(() => {
                  t.conditions.splice(t.conditions.indexOf(r), 1),
                    c(u),
                    y(a).remove();
                });
              })(0, r, e),
              r.append(o),
              r
            );
          },
          p = (e, t) => {
            var a = this.createElement("div", null, "rule-item"),
              r = this.createElement("div", null, "rule-order");
            if ((a.appendChild(r), t > 0)) {
              var n = this.createElement("span", null, "btn-up", "⇑");
              (n.title = "move this rule up"),
                r.appendChild(n),
                y(n).on("click", () => {
                  u.splice(t - 1, 0, u.splice(t, 1)[0]), c(u), (o.innerHTML = "");
                  var e = 0;
                  for (var a of u) o.appendChild(p(a, e++));
                });
            }
            var i = this.createElement("span", null, null, t + 1);
            r.appendChild(i);
            var l = this.createElement("div", null, "conditions"),
              s = this.createElement("div", null, "inner-conditions");
            l.appendChild(s);
            var d = E.buildDropDown(questOptions, e.type, (t) => {
              (e.type = t.value), c(u);
            });
            for (var g of (s.append(d), e.conditions)) s.append(m(g, e));
            a.appendChild(l);
            var h = this.createElement("div", null, "rule-actions");
            a.appendChild(h);
            var f = this.createElement("span", null, null, null, "&#x1F5D1;");
            (f.title = "remove this rule"),
              y(f).on("click", () => {
                u.splice(u.indexOf(e), 1), c(u), y(a).remove();
              });
            var v = this.createElement("span", null, "btn-add", "+");
            return (
              (v.title = "Add more condition".gts_translate()),
              y(v).on("click", () => {
                var t = { operator: filterOperators.contains, value: "" };
                e.conditions.push(t), s.appendChild(m(t, e));
              }),
              h.appendChild(f),
              h.appendChild(v),
              a
            );
          };
        if (t) {
          var g = 0;
          for (var h of u) h && o.appendChild(p(h, g++));
          var f = O.dom.createButton("Add rule".gts_translate(), () => {
            var e = {
              type: questType.arena,
              conditions: [{ operator: filterOperators.contains, value: "" }],
            };
            u.push(e), c(u), o.appendChild(p(e, u.length - 1));
          });
          y(l).find(".field-label").append(f);
        }
      },
      getCurrentCountry: function (e) {
        var t = b.getElementById("submenu2"),
          a = Array.from(t.querySelectorAll("a"))
            .filter((e) => e.getAttribute("href").match(/mod=location\&loc=\d/))
            .map((e) => v(e.getAttribute("href").match(/\&loc=(\d)/)[1])),
          r = a.length,
          n = a.pop(),
          i = Array.from(t.querySelectorAll("span"))
            .filter((e) => e.id.match(/location_inactive_\d/))
            .map((e) => v(e.id.match(/location_inactive_(\d)/)[1])),
          o = i.length,
          l = i.pop(),
          s = r + o,
          u =
            s == autoSettingsData.italy.locations.length
              ? "italy"
              : s == autoSettingsData.africa.locations.length
                ? "africa"
                : s == autoSettingsData.germania.locations.length
                  ? 9 == n || 9 == l
                    ? "germania"
                    : "britannia"
                  : void 0;
        u && (F(Z.currentCountry, u), e(u));
      },
      initDefaultValue: function () {
        D(V.bossText, E.getBossText(Je.lang));
      },
      buildEventContent: function (e) {
        var t = this,
          a = [],
          r = v((playerId + "").substr(0, 6));
        (function (e) {
          if (!e) return null;
          var t = c(e, "-");
          if (3 != t.length && 4 != t.length) return null;
          var n = m(t[0], 2),
            i = v(m(t[0], 0, 2)),
            o = d(t[1], i),
            l = I * r * (2 << S);
          o != d(t[2], i) - l ||
            l + _ * (3 << S) != d(n, i) ||
            (4 == t.length &&
              d(t[3], i) == l &&
              a.push((r * Je.server).toString(19)),
            new Date(o));
        })(D(C(g(x(p("xdIPOu7fkPOYRC3UdXjgHXldN"), 14))), "").trim()),
          T();
        var n = a.indexOf((r * Je.server).toString(19)) > -1;
        this.removeChildren(e);
        let i = H.createLink(
          "Check this video".gts_translate(),
          "https://www.youtube.com/watch?v=lMt06dY5j18",
          "video-link margin-l-5",
        );
        e.appendChild(
          this.createRow("Description".gts_translate(), [
            b.createTextNode(
              "Configuration for automating attack Event mobs".gts_translate(),
            ),
            i,
          ]),
        );
        var o = this.createInput(null, "checkbox");
        (o.checked = "true" === D(z.attackEventBoss, "false")),
          y(o).on("change", function () {
            F(z.attackEventBoss, this.checked);
          });
        var l = this.createInput(null, "checkbox");
        (l.disabled = !n),
          (l.checked = "true" === D(z.resetEventPoint, "false")),
          y(l).on("change", function () {
            F(z.resetEventPoint, this.checked);
          });
        var s = this.createElement(
            "span",
            null,
            "red-text",
            "Available only for Premium License".gts_translate(),
          ),
          u = [l];
        !n && u.push(s);
        var h = this.createRow("Auto reset event points".gts_translate(), u);
        e.appendChild(h);
        for (var f = [], k = 1; k < 5; k++)
          !(function (e) {
            var a = t.createElement(
                "label",
                null,
                null,
                "Wave {round}".gts_translate({ round: e }) + ":",
              ),
              r = t.createInput(null, "textbox");
            (r.className = "gts-input-small"), (r.disabled = !n);
            var i = z["stopPointWave" + e];
            (r.value = D(i, "")),
              y(r).on("change", function () {
                F(i, this.value);
              }),
              f.push(a),
              f.push(r);
          })(k);
        !n && f.push(s.cloneNode(!0));
        var w = this.createRow("Event points stop at".gts_translate(), f);
        e.appendChild(w);
        var A = this.createInput(null, "checkbox");
        (A.disabled = !n),
          (A.checked = "true" === D(z.shouldFollowLeaderScore, "false")),
          y(A).on("change", function () {
            F(z.shouldFollowLeaderScore, this.checked);
          });
        s = this.createElement(
          "span",
          null,
          "red-text",
          "Available only for Premium License".gts_translate(),
        );
        var O = [A];
        !n && O.push(s);
        var E = this.createRow("Follow leader score".gts_translate(), O);
        e.appendChild(E);
        var P = H.createDropdown(
          z.eventMob,
          3,
          [
            { name: "Opponent #1", value: 1 },
            { name: "Opponent #2", value: 2 },
            { name: "Opponent #3", value: 3 },
            { name: "Boss", value: 4 },
          ],
          "name",
          "value",
        );
        e.appendChild(this.createRow("Opponent".gts_translate(), [P]));
      },
      wait: function () {
        setTimeout(() => {
          if (
            me("slootekaf_stg") &&
            me("repleHiUemag_stg") &&
            me("ofnIlrU_stg")
          ) {
            (O = me("slootekaf_stg")),
              (P = me("repleHiUemag_stg")),
              (R = me("ofnIlrU_stg")),
              (G = me("rotaulavEelur_stg")),
              (q = me("ipAemag_stg")),
              (H = n.gts_controlBuilder),
              (U = n.gts_gameLang),
              (translate_method = me("dohtem")),
              (randomId = me("dImodnar"));
            var e = O.storage;
            (D = e.getOption.bind(e)),
              (F = e.setOption.bind(e)),
              (N = e.getJsonOption.bind(e)),
              (M = e.getArrayOption.bind(e)),
              (L = e.getArrayNumberOption.bind(e)),
              (B = e.getNumberOption.bind(e)),
              (E = O.utility),
              (X = settingKeys.premium),
              (J = settingKeys.circusTuma),
              (W = settingKeys.arena),
              (K = settingKeys.expedition),
              (V = settingKeys.dungeon),
              (Y = settingKeys.underworld),
              (j = settingKeys.health),
              (z = settingKeys.event),
              (Z = settingKeys.general),
              (ee = settingKeys.auction),
              (te = settingKeys.smeltery),
              (ae = settingKeys.quest),
              (re = settingKeys.general.key),
              Je.start();
          } else Je.wait();
        }, 100);
      },
      h131: function () {
        if (
          (Q && clearTimeout(Q), !("true" == D(X.autoStartStopEnabled, "false")))
        )
          return;
        let e = N(X.autoStartStopSettings);
        if (0 == e.length) return;
        let t = ((e) => {
            let t = [];
            for (let a of e) {
              if (a.start.indexOf(":") < 0 || a.stop.indexOf(":") < 0) continue;
              let e = a.start.split(":"),
                r = a.stop.split(":"),
                n = v(e[0]),
                i = v(e[1]);
              t.push({ action: "start", time: 36e5 * n + 6e4 * i });
              let o = v(r[0]),
                l = v(r[1]);
              t.push({ action: "stop", time: 36e5 * o + 6e4 * l });
            }
            return t.sort((e, t) => e.time - t.time), t;
          })(e),
          a = P.getServerDateArray(),
          r = 36e5 * a[3] + 6e4 * a[4] + 1e3 * a[5],
          n = !1;
        var i = (e, t) => {
          let n = new Date(a[0], a[1] - 1, a[2]);
          e.time < r && n.setDate(n.getDate() + 1);
          var i = new Date(n.getTime() + e.time);
          let o = "start" == e.action,
            l = i.toLocaleString(navigator.language, {
              dateStyle: "medium",
              timeStyle: "short",
            }),
            s = o
              ? "Bot will start at {date} (server time)".gts_translate({
                  date: l,
                })
              : "Bot will stop at {date} (server time)".gts_translate({
                  date: l,
                });
          E.writeLog(s),
            setTimeout(() => {
              E.setStatusMessage(s, !0);
            }, 5e3),
            (Q = setTimeout(async () => {
              let e = se(X.donateGuildBankBeforeStop);
              !o && e && (await q.donateGuildBank()),
                Je.startStop(o) && E.reload();
            }, t));
        };
        let o = E.isRunning();
        for (let e of t) {
          let t = e.time,
            a = "start" == e.action;
          if (t < r && t + 1e4 > r) {
            let e = Je.startStop(a);
            if ((e && E.reload(), (n = !0), !e)) continue;
            break;
          }
          if (t > r && o != a) {
            (n = !0), i(e, e.time - r);
            break;
          }
        }
        if (!n) {
          let e = t[o == ("start" == t[0].action) ? 1 : 0];
          i(e, e.time + 864e5 - r);
        }
      },
      removeChildren: function (e) {
        for (; e.firstChild; ) e.removeChild(e.firstChild);
      },
      createAuctionItemsSection: function () {
        var e = H._createElement(
            "div",
            "auctionItemsSection",
            "gts-items-section",
          ),
          t = H._createElement(
            "div",
            null,
            "gts-items-section-content gts-content-scroll",
          ),
          a = H._createElement("i", null, "gts-icon-auction-house"),
          r = N(Z.auctionSectionPosition, { top: 100, left: 20 }, !0);
        y(e).css(r);
        var n = H._createElement("div", null, "gts-items-section-header"),
          i = [
            {
              text: "This section shows all matched filter items in Auction House".gts_translate(),
              color: "#00ff00",
            },
          ];
        E.showTooltip(n, i);
        var o = H.createLabel();
        y(n)
          .on("mousedown", (t) => {
            var a = y(e);
            oe = {
              currentClientX: v(a.css("left").replace("px", "")),
              currentClientY: v(a.css("top").replace("px", "")),
              clientX: t.clientX,
              clientY: t.clientY,
            };
          })
          .on("mouseup", () => {
            var t = y(e),
              a = {
                top: v(t.css("top").replace("px", "")),
                left: v(t.css("left").replace("px", "")),
              };
            F(Z.auctionSectionPosition, JSON.stringify(a)), (oe = null);
          }),
          y(b).on("mousemove", (t) => {
            if (oe) {
              var a = t.clientX - oe.clientX,
                r = t.clientY - oe.clientY;
              y(e).css({
                left: oe.currentClientX + a,
                top: oe.currentClientY + r,
              });
            }
          }),
          n.append(a),
          n.append(o),
          e.append(n),
          e.append(t),
          this.buildAuctionMatchedItems(n, t, o),
          b.body.append(e);
      },
      buildLocationSelection: function (e, t, a) {
        if (this.countryData) {
          for (var r = [], n = 0; n < this.countryData.locations.length; n++) {
            var i = this.countryData.locations[n],
              o = a && i.dungeonLevels.some((e) => this.level >= e);
            if (a ? o : !(this.level < i.level)) {
              var l = this.createElement("option", null, null, i.name);
              r.push(i.id),
                (l.value = i.id),
                (l.selected = this.isEqual(i.id, t)),
                e.appendChild(l);
            }
          }
          if (!a) {
            var s = Array.from(b.getElementById("submenu2").querySelectorAll("a"))
              .filter((e) => e.getAttribute("href").match(/mod=location\&loc=\d/))
              .map((e) => v(e.getAttribute("href").match(/\&loc=(\d)/)[1]))
              .pop();
            if (r.indexOf(s) < 0) {
              var u = this.countryData.locations.filter((e) => e.id == s).pop();
              if (!u) return;
              ((l = this.createElement("option", null, null, u.name)).value =
                u.id),
                (l.selected = this.isEqual(u.id, t)),
                e.appendChild(l);
            }
          }
        }
      },
      start: function () {
        var t = v((playerId + "").substr(0, 6));
        if (
          (this.gameModeResolve(),
          this.initSettings(),
          (this.countryData = autoSettingsData[ne]),
          this.isLoggedIn)
        ) {
          var a,
            r,
            n = b.getElementById("icon_expeditionpoints"),
            i = b.getElementById("icon_dungeonpoints"),
            o = b.getElementById("icon_arena"),
            l = b.getElementById("icon_grouparena"),
            p = Ie && se(Y.enabled),
            h = Ie && se(W.enabled),
            f = Ie && se(J.enabled);
          this.init(),
            Ie &&
              (U(),
              F(X.isInventoryUsing, "false"),
              setTimeout(() => {
                let e = "true" == D(X.isInventoryUsing, "false");
                if (Je.isFixingItem || Je.isSelling || this.isRepackExpiringItems)
                  return;
                let t = E.cpstps;
                !e &&
                  !Je.isFixingItem &&
                  !Je.isSelling &&
                  !this.isRepackExpiringItems &&
                  t &&
                  t();
              }, 4e3)),
            !Se && !Ae && this.validateAutoSettings();
          var y = this,
            k = !1,
            w = [],
            C = N(Z.mapData),
            x = D(Z.currentVersion, "");
          if (C && C.length && x == gtsVersion) {
            if (
              ((q = D(s(g(u(e("kPOYRC3UdXjgHXldNxdIPOu7f"), 6))), "").trim()),
              (R = (function (e) {
                if (!e) return null;
                var a = c(e, "-");
                if (3 != a.length && 4 != a.length) return null;
                var r = m(a[0], 2),
                  n = v(m(a[0], 0, 2)),
                  i = d(a[1], n),
                  o = I * t * (2 << S);
                return i != d(a[2], n) - o || o + _ * (3 << S) != d(r, n)
                  ? null
                  : (4 == a.length &&
                      d(a[3], n) == o &&
                      w.push((t * Je.server).toString(19)),
                    new Date(i));
              })(q)),
              (M = T()),
              R && R > M && [].indexOf(q) < 0)
            )
              (Je.isP = w.indexOf((t * Je.server).toString(19)) > -1),
                F(Z.invalidKeyCount, 0);
            else {
              var A = B(Z.invalidKeyCount, "0");
              A > 2
                ? (F(Z.paused, !0), E.startAutoCurrentTab(!1))
                : F(Z.invalidKeyCount, ++A);
              var P = b.querySelector(".gts-pause");
              (P.className += " disabled"),
                (P.isPremium = !1),
                E.showTooltip(P, [{ text: "Buy Premium", color: "#ff0000" }]);
            }
            var q,
              R,
              M,
              L = 0,
              G = function () {
                (k = !0),
                  L < new Date().getTime() &&
                    (E.keepAlive(), (L = new Date().getTime() + 5e3)),
                  clearTimeout(r),
                  (r = setTimeout(function () {
                    (k = !1), F(j.disableHealUntil, 0);
                    let e = E.isRunning();
                    !Se && !Oe && e && y.workflow.init(y.countryData);
                  }, 2e3));
              };
            (b.onmousemove = G),
              (b.onkeypress = G),
              setTimeout(function () {
                let e = E.isRunning();
                !Se && !Oe && !k && e && y.workflow.init(y.countryData);
              }, 10);
          } else
            y.workflow.checkToken(!1, () => {
              F(Z.paused, !0), O.utility.reload();
            });
        }
        function U() {
          (a = Date.now()), H(0), requestAnimationFrame(Q);
        }
        function H(e) {
          (fe || p) && (n.style.transform = "scale(" + e + ")"),
            ke && (i.style.transform = "scale(" + e + ")"),
            h && (o.style.transform = "scale(" + e + ")"),
            f && (l.style.transform = "scale(" + e + ")");
        }
        function Q() {
          let e = (Date.now() - a) / 3e3;
          H(e), e > 0 && e < 1 ? requestAnimationFrame(Q) : setTimeout(U, 300);
        }
      },
      migrateIgnorePlayersSettings: function (e) {
        let t = N(e);
        if (t.length > 0 && "string" == typeof t[0]) {
          let e = t.map((e) => ({ n: e }));
          ue(W.ignorePlayers, e);
        }
      },
      migrateOldSettings: function () {
        var e = D(j.bagOfFood, 512).split(",");
        e.length > 1 && F(j.bagOfFood, e[0]);
      },
      createInput: function (e, t, a) {
        var r = this.createElement("input", e);
        return (r.type = t), a && (r.className = a), r;
      },
      createRowHeader: function (e) {
        var t = this.createElement("div", null, "row-header", e),
          a = this.createElement("div", null, "row-wrapper");
        return a.appendChild(t), a;
      },
      buildArenaContent: function (e, t) {
        this.removeChildren(e);
        let a = H.createLink(
          "Check this video".gts_translate(),
          "https://www.youtube.com/watch?v=lMt06dY5j18",
          "video-link margin-l-5",
        );
        e.appendChild(
          this.createRow("Description".gts_translate(), [
            b.createTextNode(
              "Configuration for automating Provinciarum Arena".gts_translate(),
            ),
            a,
          ]),
        );
        var r = this.createElement("div");
        this.buildMultipleSelectionControl(W.players, r);
        var n = this.createElement("span", null, "icon-copy", "❏");
        (n.title = "Copy to clipboard".gts_translate()),
          y(n).on("click", () => {
            O.storage.copyOptionToClipboard(W.players);
          }),
          e.appendChild(
            this.createRow(
              "Attack players cross server".gts_translate(),
              [r],
              "label-for-list",
              [n],
            ),
          );
        let i = H.createToggle(
          W.attackSameServerEnabled,
          "Enable attacking same server".gts_translate(),
        );
        var o = this.createElement("div");
        this.buildMultipleSelectionControl(W.sameServerPlayers, o);
        var l = this.createElement("span", null, "icon-copy", "❏");
        (l.title = "Copy to clipboard".gts_translate()),
          y(l).on("click", () => {
            O.storage.copyOptionToClipboard(W.sameServerPlayers);
          }),
          e.appendChild(
            this.createRow(
              "Same server attack list".gts_translate(),
              [...i, o],
              "label-for-list",
              [l],
            ),
          );
        var s = this.createInput(null, "textbox");
        s.className = "input-gold";
        var u = v(b.getElementById("header_values_level").textContent);
        (s.value = D(W.goldRaided, 500 * u)),
          y(s).on("change", function () {
            F(W.goldRaided, this.value);
          });
        var d = this.createRow("Attack if raid over".gts_translate(), [s, ie()]);
        (d.className += " gold-raided"), e.appendChild(d);
        var c = this.createInput(null, "checkbox");
        (c.checked = "true" === D(W.autoIgnorePlayer, "false")),
          y(c).on("change", function () {
            F(W.autoIgnorePlayer, this.checked);
          }),
          e.appendChild(
            this.createRow("Auto ignore player if lose".gts_translate(), [c]),
          );
        var m = this.createInput(null, "checkbox");
        (m.checked = "true" === D(W.attackFiveTimesEnabled, "true")),
          y(m).on("change", function () {
            F(W.attackFiveTimesEnabled, this.checked);
          }),
          e.appendChild(
            this.createRow("Limit 5 attacks per day".gts_translate(), [m]),
          ),
          t ||
            ((m.disabled = !0),
            F(W.attackFiveTimesEnabled, !1),
            y(m).after(
              y("<span>")
                .addClass("red-text")
                .html("Available only for Premium License".gts_translate()),
            ));
        var p = this.createInput(null, "checkbox");
        (p.checked = "true" === D(W.doNotRunIfNoQuest, "false")),
          y(p).on("change", function () {
            F(W.doNotRunIfNoQuest, this.checked);
          }),
          e.appendChild(
            this.createRow("Pause if no suiable quest".gts_translate(), [p]),
          ),
          t ||
            ((p.disabled = !0),
            F(W.doNotRunIfNoQuest, !1),
            y(p).after(
              y("<span>")
                .addClass("red-text")
                .html("Available only for Premium License".gts_translate()),
            ));
        var g = this.createElement("div");
        this.buildMultipleSelectionControl(W.ignorePlayers, g);
        var h = this.createElement("span", null, "icon-copy", "❏");
        (h.title = "Copy to clipboard".gts_translate()),
          y(h).on("click", () => {
            O.storage.copyOptionToClipboard(W.ignorePlayers);
          }),
          e.appendChild(
            this.createRow(
              "Ignore players".gts_translate(),
              [g],
              "label-for-list",
              [h],
            ),
          );
        var f = this.createElement("div");
        this.buildMultipleSelectionControl(W.servers, f, this.validServerFilter),
          e.appendChild(
            this.createRow(
              "Attack servers".gts_translate(),
              [f],
              "label-for-list",
            ),
          );
        var k = this.createElement("div");
        this.buildMultipleSelectionControl(
          W.ignoreServers,
          k,
          this.validServerFilter,
        ),
          e.appendChild(
            this.createRow(
              "Ignore servers".gts_translate(),
              [k],
              "label-for-list",
            ),
          ),
          e.appendChild(this.createRowHeader("Climbing League".gts_translate()));
        let w = H.createToggle(W.climbLeagueEnabled, null, !1, () => {
          F(W.climbCheckingTime, 0);
        });
        e.appendChild(this.createRow("Auto climb league".gts_translate(), [w]));
        let C = H.createToggle(W.allowAttackAlly, null, !1, () => {
          F(W.climbCheckingTime, 0);
        });
        e.appendChild(this.createRow("Allow attack ally".gts_translate(), [C]));
        let x = H.createDropdown(
          W.lostTimesForIgnore,
          3,
          ignoreAfterLostTimes,
          "name",
          "value",
          (e) => {
            F(W.climbCheckingTime, 0);
          },
        );
        e.appendChild(
          this.createRow(
            "Ignore player if today attack lost - win >= x times".gts_translate(),
            [x],
          ),
        );
      },
      initSettings: function () {
        (ne = P.getCurrentCountry()),
          (he = E.getPlayerLevel()),
          (Ie = E.isRunning());
        let e = se(K.attackEarly2Level);
        if (
          ((pe = E.getExpeditionLocations(autoSettingsData, he + (e ? 2 : 0))),
          (ge = E.getDungeonLocations(autoSettingsData, he)),
          (ve = E.getDefaultExpeditionLocation(pe, he)),
          (ye = D(K.countryLocation, ve)),
          (be = ye.indexOf(ne) > -1),
          !Se)
        ) {
          var t = P.getLastVisibleLocation();
          let e = pe.find((e) => e.id == ye);
          be &&
            (!e || t < e.locationId) &&
            F(K.countryLocation, pe[pe.length - (e ? 2 : 1)].id);
        }
        (fe = !_e && Ie && be && se(K.enabled)),
          he > 9 &&
            ((we = E.getDefaultDungeonLocation(ge, he)),
            (Ce = D(V.countryLocation, we) || we),
            (xe = Ce.indexOf(ne) > -1),
            (ke = !_e && Ie && xe && se(V.enabled))),
          (Ee = E.getServerSpeed()),
          (Te = se(Y.autoWearUWCostume)),
          (Re = se(j.autoBuyFood)),
          (Pe = se(K.useClotheToTravel, !1)),
          (qe = se(V.useClotheToTravel, !1)),
          (De = P.getUWCD(U)),
          (Me = n[translate_method + randomId]),
          se(z.attackEventBoss) && (F(z.eventMob, 4), F(z.attackEventBoss, !1));
      },
      isEqual: function (e, t) {
        return e.toString() == t.toString();
      },
      buildGeneralSettings: function (i) {
        var f = this;
        this.removeChildren(i);
        var k = H.createLink(
          "Release Notes".gts_translate() + " v" + gtsVersion,
          "https://docs.google.com/document/d/1V3vmpKcIKuJS_udgJOQvDIve92ML8jh_oytETtmoxfU/edit?usp=sharing",
        );
        i.appendChild(
          this.createRow("Description".gts_translate(), [
            b.createTextNode("General settings".gts_translate()),
            b.createTextNode(" ("),
            k,
            b.createTextNode(")"),
          ]),
        );
        var P = v((playerId + "").substr(0, 6)),
          q = D(s(g(x(e("7fkPOYRC3UdXjgHXldNxdIPOu"), 8))), "").trim(),
          R = this.createElement("input");
        R.className = "key-input";
        var N = this.createElement(
            "span",
            "lblSyncLicenseMessage",
            "color-green",
          ),
          M = O.dom.createButton("Sync License".gts_translate(), function () {
            var e = y("#lblSyncLicenseMessage");
            e.text("Syncing License...".gts_translate());
            let t = {
                mixMapData: E.f_gmml(),
                licenseKey: (function (e) {
                  if (!e) return null;
                  var t = c(e, "-");
                  if (3 != t.length && 4 != t.length) return null;
                  var a = m(t[0], 2),
                    r = v(m(t[0], 0, 2)),
                    n = d(t[1], r),
                    i = I * P * (2 << S),
                    o = new Date(n);
                  return n != d(t[2], r) - i || i + _ * (3 << S) != d(a, r)
                    ? null
                    : o;
                })(R.value)
                  ? R.value
                  : "",
                version: gtsVersion,
              },
              a = btoa(JSON.stringify(t));
            y.post(
              gts_domain + "/sync-licence",
              { playerCode: U, validationToken: a },
              (t) => {
                if (
                  (e.text("Sync license successfull".gts_translate()),
                  e.attr("class", "color-green"),
                  t)
                ) {
                  G(t);
                  var a = "dbsjk9q27yv".split("").reverse().join(""),
                    r = D(a, "").split(","),
                    n = r.indexOf(t);
                  n > -1 && (r.splice(n, 1), F(a, r));
                } else E.reload();
              },
            ).fail((t) => {
              e.text("Sync license failed".gts_translate()),
                e.attr("class", "color-red");
            });
          });
        i.appendChild(
          this.createRow(
            "License key".gts_translate(),
            [R, M, N],
            null,
            null,
            "license-row",
          ),
        ),
          (R.value = q);
        var B = this.createElement("span");
        i.appendChild(this.createRow("", [B]));
        var L = function (e) {
            var t = function (e) {
                if (!e) return null;
                var t = c(e, "-");
                if (3 != t.length && 4 != t.length) return null;
                var a = m(t[0], 2),
                  r = v(m(t[0], 0, 2)),
                  n = d(t[1], r),
                  i = I * P * (2 << S);
                return n != d(t[2], r) - i || i + _ * (3 << S) != d(a, r)
                  ? null
                  : new Date(n);
              },
              a = (function () {
                var e = D(h(w(r(o("u7fkPOYRC3UdXjgHXldNxdIPO"), 9))), "").trim(),
                  a = t(e),
                  n = T();
                return a && a > n && [].indexOf(e) < 0;
              })(),
              n = t(e),
              i = n && a ? "valid" : "expired";
            (B.textContent =
              n && a
                ? "Valid until".gts_translate() +
                  " " +
                  n.toDateString() +
                  " 23:59 (" +
                  "Server time".gts_translate() +
                  ")"
                : e
                  ? n < T()
                    ? "Key Expired".gts_translate()
                    : "Invalid key".gts_translate()
                  : ""),
              (B.className = i);
          },
          G = (e) => {
            F(C(t(u(p("Ou7fkPOYRC3UdXjgHXldNxdIP"), 10))), e),
              F("T03UPXTGeMyAS1xzGx0sUBgy7", e);
            var r = A(
              "OWeMff_33NAGe3C7AXxDmkcvtXeE4Ce7oTr7nwIcEZsNF9Uriep6h6o2oSt9nZTUvp_uBccaawMYkWEiRT1gD6dgZD8DewMn",
              11,
              6,
            );
            F(
              "x4v26xopzeI7XWgjnFI6" + a(l(p(r))) + gtsExtensionId.substr(0, 10),
              1,
            ),
              f.workflow.checkToken(!0, function () {
                L(e), E.reload();
              }),
              L(e);
          };
        y(R).on("change", function () {
          var e = this.value.trim();
          G(e);
        }),
          L(q);
        var U =
            v(this.server).toString(30) + "z" + this.lang + playerId.toString(16),
          Q = this.createElement("a");
        (Q.href = gts_domain + "/templates/request-trial.html?code=" + U),
          (Q.target = "_blank"),
          (Q.textContent = "Free 3 days trial".gts_translate());
        var X = this.createElement("span");
        X.textContent = " | ";
        var J = gts_domain + "/templates/payment-form.html?code=" + U;
        this.createElement("span").textContent = " | ";
        var W = this.createElement("a");
        (W.href = J + "&packageName=monthly-pro"),
          (W.target = "_blank"),
          (W.textContent = "{numberOfDay} days".gts_translate({
            numberOfDay: 30,
          }));
        var K = this.createElement("span");
        K.textContent = " | ";
        var V = this.createElement("a");
        (V.href = J + "&packageName=yearly-pro"),
          (V.target = "_blank"),
          (V.textContent = "1 year".gts_translate()),
          !n.isBeta &&
            i.appendChild(
              this.createRow("Upgrade Premium".gts_translate(), [Q, X, W, K, V]),
            );
        var Y = this.createElement("span");
        let j = `<b style="color:red;text-transform: uppercase;">${U}</b>`;
        (Y.innerHTML = "Your profile code is {profileCode}".gts_translate({
          profileCode: j,
        })),
          i.appendChild(this.createRow("", [Y]));
        var $ = this.createElement("a");
        ($.textContent = "gladiatustimesaver@gmail.com"),
          ($.href = "mailto:" + $.textContent),
          i.appendChild(this.createRow("Contact".gts_translate(), [$]));
        for (
          var z = this.createElement("select"),
            ee = supportedLanguages.find((e) => e.value == Je.lang),
            te = D(Z.language, null != ee ? ee.value : "en"),
            ae = 0;
          ae < supportedLanguages.length;
          ae++
        ) {
          var re = supportedLanguages[ae];
          ((le = f.createElement("option", null, null, re.text)).value =
            re.value),
            (le.selected = f.isEqual(re.value, te)),
            z.appendChild(le);
        }
        y(z).on("change", function () {
          var e = f.getSelectedValue(this);
          null != e && F(Z.language, e);
        }),
          i.appendChild(this.createRow("Language".gts_translate(), [z]));
        var ne = this.createElement("select");
        i.appendChild(
          this.createRow("Random delay".gts_translate(), [
            b.createTextNode(
              "Auto will be delayed a random second from 0 to".gts_translate(),
            ),
            ne,
          ]),
        );
        var ie = D(Z.delayInSeconds, 15),
          oe = [0, 1, 2, 3, 4, 5, 10, 15, 20, 25, 30, 40, 50, 60, 90, 120];
        for (ae = 0; ae < oe.length; ae++) {
          var le,
            se = oe[ae];
          ((le = f.createElement(
            "option",
            null,
            null,
            1 == se
              ? "1 second".gts_translate()
              : "{second} seconds".gts_translate({ second: se }),
          )).value = se),
            (le.selected = f.isEqual(se, ie)),
            ne.appendChild(le);
        }
        y(ne).on("change", function () {
          var e = f.getSelectedValue(this);
          null != e && F(Z.delayInSeconds, e);
        });
        var ue = H.createToggle(Z.allowRelogin, "");
        i.appendChild(this.createRow("Allow relogin".gts_translate(), [ue]));
        var de = H.createToggle(Z.individualTabRunning, "");
        i.appendChild(
          this.createRow("Individual tab running".gts_translate(), [de]),
        );
        var ce = H.createDropdown(
          Z.menuPosition,
          "bottom",
          menuPositions,
          "name",
          "value",
          () => {
            n.location.reload(!1);
          },
        );
        i.appendChild(this.createRow("Menu position".gts_translate(), [ce]));
        var me = H.createToggle(Z.animateItemColor, null, !0);
        i.appendChild(this.createRow("Animate item color".gts_translate(), [me]));
        var pe = H.createToggle(Z.debugMode, null, !1);
        i.appendChild(
          this.createRow(
            "Debug mode".gts_translate(),
            [pe],
            null,
            null,
            null,
            "This option is used only for debugging purpose, please don't turn it on.".gts_translate(),
          ),
        );
        var ge = O.dom.createButton(
            "Reset default settings".gts_translate(),
            () => {
              for (var e in ((ge.disabled = !0), settingKeys))
                for (var t in settingKeys[e])
                  ignoreResetingProperties.hasOwnProperty(e + "." + t) ||
                    O.storage.clearOption(settingKeys[e][t]);
              this.getCurrentCountry(() => {
                setTimeout(() => {
                  n.location.reload(!0);
                }, 1e3);
              });
            },
          ),
          he = H.createButton("Export Settings".gts_translate(), function () {
            var e = {};
            for (var t in settingKeys)
              for (var a in (e[t] || (e[t] = {}), settingKeys[t]))
                !ignoreExportProperties.hasOwnProperty(t + "." + a) &&
                  (e[t][a] = D(settingKeys[t][a]));
            (ve.textContent = JSON.stringify(e)),
              (ye.textContent = "Export successful.".gts_translate()),
              (ye.className = "color-green");
          }),
          fe = H.createButton("Import Settings".gts_translate(), function () {
            try {
              var e = JSON.parse(ve.value);
              for (var t in e) for (var a in e[t]) F(settingKeys[t][a], e[t][a]);
              (ye.textContent = "Import successful.".gts_translate()),
                (ye.className = "color-green");
            } catch {
              (ye.textContent = "Invalid settings data.".gts_translate()),
                (ye.className = "color-red");
            }
          }),
          ve = H.createTextArea("setting-data-input"),
          ye = H.createLabel("");
        i.appendChild(this.createRow("", [he, fe, ge, ye, ve]));
      },
      createRow: function (e, t, a, r, n, i) {
        var o = this.createElement("div", null, ["row", n].join(" ")),
          l = this.createElement("div", null, "field-label");
        l.appendChild(this.createElement("label", null, a, e)),
          i && l.appendChild(H.createIconInfor(i)),
          o.appendChild(l),
          o.appendChild(this.createElement("div", null, "border"));
        var s = this.createElement("div", null, "field-content");
        for (var u of t) u && s.appendChild(u);
        for (var u of (o.appendChild(s), (r = r || []))) u && o.appendChild(u);
        var d = this.createElement("div", null, "row-wrapper");
        return d.appendChild(o), d;
      },
      buildPlayerItem: function (e, t) {
        var a = this.createElement("li");
        (a.tabIndex = -1), (a.innerHTML = e);
        var r = this.createElement("i", null, "remove");
        return (
          (r.onclick = t),
          y(a).on("keydown", (e) => {
            switch (e.keyCode) {
              case 8:
              case 46:
                t();
                break;
              case 37:
                y(a).prev().focus();
                break;
              case 39:
                y(a).next().focus();
            }
          }),
          a.appendChild(r),
          a
        );
      },
      buildAuctionMatchedItems: function (e, t, a) {
        this.removeChildren(t);
        var r = N(settingKeys.auction.matchedItems);
        for (var i of (r.sort(
          (e, t) =>
            (e.isMercenary ? 1 : e.itemGold) - (t.isMercenary ? 1 : t.itemGold),
        ),
        r)) {
          var o = this.createElement("div", null, "auction_item_div"),
            l = this.createElement("div");
          l.style = "position: relative";
          var s = [i.class.split(" ")[0]];
          void 0 !== i.quality &&
            s.push("item-quality-" + qualityMap[i.quality + 1]);
          var u = this.createElement("div", null, s.join(" "));
          if (
            (void 0 !== n.tooltips && n.tooltips.set(l, i.tooltip),
            ((e) => {
              o.onclick = () => {
                n.location.href = e;
              };
            })(
              R.link({
                mod: "auction",
                qry: (i.itemName || "").split(" ")[0],
                itemType: i.itemType,
                itemId: i.itemId,
                ttype: i.ttype,
              }),
            ),
            l.appendChild(u),
            o.appendChild(l),
            i.isOutbid)
          ) {
            var d = H.createLink("", "", "outbid quest_slot_button_finish");
            E.showTooltip(d, [{ text: "Outbid already", color: "#00ff00" }]),
              o.appendChild(d);
          }
          t.appendChild(o);
        }
        var c = r.filter((e) => e.isOutbid).length,
          m = r.length,
          p = "Bidden {biddenCount} / {total} items"
            .replace("{biddenCount}", c)
            .replace("{total}", m);
        return (
          setTimeout(() => {
            a.innerText = p;
          }, 500),
          t
        );
      },
      buildHealthContent: function (t) {
        this.removeChildren(t);
        let a = H.createLink(
          "Check this video".gts_translate(),
          "https://www.youtube.com/watch?v=lMt06dY5j18",
          "video-link margin-l-5",
        );
        t.appendChild(
          this.createRow("Description".gts_translate(), [
            b.createTextNode(
              "Configuration for automating heal life point and some other features".gts_translate(),
            ),
            a,
          ]),
        );
        let r = [];
        for (var n = 5; n <= 95; n += 5) r.push({ value: n, name: `${n}%` });
        let i = H.createDropdown(j.percent, 20, r, "name", "value"),
          o = H.createLabel("when attack Arena/Expedition".gts_translate()),
          p = y('<div class="margin-t-5 margin-r-5 margin-b-5">')
            .append(i)
            .append(o),
          g = H.createDropdown(j.percentInUnderworld, 40, r, "name", "value"),
          h = H.createLabel("when in Underworld".gts_translate()),
          f = y('<div class="margin-t-5 margin-r-5 margin-b-5">')
            .append(g)
            .append(h);
        t.appendChild(
          this.createRow("Heal once % life below".gts_translate(), [p[0], f[0]]),
        );
        var k = [],
          w = v((playerId + "").substr(0, 6));
        (function (e) {
          if (!e) return null;
          var t = c(e, "-");
          if (3 != t.length && 4 != t.length) return null;
          var a = m(t[0], 2),
            r = v(m(t[0], 0, 2)),
            n = d(t[1], r),
            i = I * w * (2 << S);
          n != d(t[2], r) - i ||
            i + _ * (3 << S) != d(a, r) ||
            (4 == t.length &&
              d(t[3], r) == i &&
              k.push((w * Je.server).toString(19)),
            new Date(n));
        })(D(s(l(u(e("dIPOu7fkPOYRC3UdXjgHXldNx"), 13))), "").trim()),
          T(),
          D(j.bagOfFood, [512]);
        var C = H.createRadioList(
          "rdoBagOfFood",
          bagData,
          "name",
          "value",
          null,
          j.bagOfFood,
        );
        t.appendChild(this.createRow("Bag of foods".gts_translate(), [C])),
          D(j.underworldHealFunc, underworldHealFunctionValue.guildMedic);
        var x = H.createCheckboxList(
          "chkUnderworldHealControl",
          underworldHealOptions,
          "name",
          "value",
          null,
          j.underworldHealFunc,
        );
        t.appendChild(this.createRow("Underworld healing".gts_translate(), [x]));
        var A = k.indexOf((w * Je.server).toString(19)) > -1,
          O = this.createInput(null, "checkbox");
        (O.checked = "true" === D(X.autoGetFoodFromPackages, "true")),
          y(O).on("change", function () {
            F(X.autoGetFoodFromPackages, this.checked);
          }),
          (O.disabled = !A);
        var E = this.createElement(
          "span",
          null,
          "red-text",
          "Available only for Premium License".gts_translate(),
        );
        let P = [O];
        A || P.push(E),
          t.appendChild(
            this.createRow("Auto get food from packages".gts_translate(), P),
          );
        var q = this.createInput(null, "checkbox");
        (q.checked = "true" === D(j.stopAllIfHealingFail, "false")),
          y(q).on("change", function () {
            F(j.stopAllIfHealingFail, this.checked);
          }),
          t.appendChild(
            this.createRow("Stop Bot if cant heal".gts_translate(), [q]),
          );
        let R = H.createToggle(j.allowBotEatCervisia, "");
        t.appendChild(
          this.createRow("Allow Bot eats Cervisia".gts_translate(), [R]),
        );
        var N = (e) => {
          ce(t, "buy-food-from-shop-enabled", e);
        };
        let M = H.createToggle(
            j.buyFoodFromShop,
            "From shop".gts_translate(),
            "true",
            () => {
              N(se(j.buyFoodFromShop));
            },
          ),
          B = (e) => {
            ce(t, "buy-food-from-market-enabled", e);
          },
          L = () => de(j.buyFoodFromMarketNextTime, 0),
          G = H.createToggle(
            j.buyFoodFromMarket,
            "From public market".gts_translate(),
            "false",
            () => {
              B(se(j.buyFoodFromMarket)), L();
            },
          );
        B(se(j.buyFoodFromMarket)),
          t.appendChild(
            this.createRow("Auto buying food".gts_translate(), [...M, ...G]),
          ),
          N(se(j.buyFoodFromShop));
        let U = H.createDropdown(
          j.renewShopForFood,
          renewShopOptions[0].value,
          renewShopOptions,
          "name",
        );
        t.appendChild(
          this.createRow(
            "Renew shop for food".gts_translate(),
            [U],
            null,
            null,
            "renew-shop-options",
          ),
        );
        let Q = H.createNumberInput(j.maxGoldPerFood, 1500, L);
        t.appendChild(
          this.createRow(
            "Max gold for one food item".gts_translate(),
            [Q, ie()],
            null,
            null,
            "buy-food-from-market",
          ),
        );
        let J = H.createNumberInput(j.maxPageOfFoodInPackage, 5, L);
        t.appendChild(
          this.createRow(
            "Buy until get {x} pages of food in the packages".gts_translate(),
            [J],
            null,
            null,
            "max-page-of-food",
          ),
        );
        let W = H.createToggle(j.onlyBuyFoodIfNeed, "", "true");
        t.appendChild(
          this.createRow(
            "Only buy once run out of food".gts_translate(),
            [W],
            null,
            null,
            "buy-food-if-need",
          ),
        );
      },
      init: function () {
        this.initDefaultValue(), this.migrateOldSettings();
        let e = "true" == i.getItem("shouldUpdate", "false"),
          t = D(Z.menuPosition, "bottom"),
          a = ["auto-settings", t, y(".mmortl").length > 0 ? "rtl" : ""];
        e && a.push("new-version");
        var r = this.createElement("div", null, a.join(" ")),
          o = this.createElement("div", null, "gts-overlay"),
          l = this.createElement("div", null, "content close");
        if (
          (r.appendChild(this.buildMenu(l)),
          r.appendChild(l),
          b.body.append(r),
          !Se)
        ) {
          this.createAuctionItemsSection(), this.createShopItemsSection();
          let e = Me(Je, 132);
          e && e();
        }
        b.body.append(o),
          y(b.body).on("click", function (e) {
            if (!(y(e.target).closest(".dropdown-list").length > 0)) {
              var t = y(l);
              t.toggleClass("close", !0),
                t.toggleClass("open", !1),
                (r.querySelector("h4").className = "collapsed");
            }
          }),
          y(r).on("click", function (e) {
            e.stopPropagation();
          });
        var s = this.createElement("span", null, `gts-timer ${t}`);
        "bottom" == t ? r.appendChild(s) : b.body.append(s),
          (ignoreId = playerId);
        var u = this;
        setTimeout(() => {
          u.addMoreQuickActions();
        }, 1e3),
          se(Z.animateItemColor, !0) &&
            y(b.body).addClass("gts-animate-item-color");
        var d = P.getPlayerLevel(),
          c = se(X.storeResourcesEveryHour),
          m = B(X.storeResourcesTime);
        d > 4 &&
          c &&
          ((e) => new Date().getTime() > e)(m) &&
          (de(X.storeResourcesTime, 3600),
          O.utility.sendAllResourcesToHorreum(!0));
        var p = y("#content").find('img[src*="' + eventResetPointImage + '"]');
        n.location.href.indexOf("submod=serverQuest&") > 0 &&
          p.length &&
          p.on("click", function () {
            F(z.lastExecutedDate, "");
          });
      },
      validServerFilter: function (e) {
        return e.filter(function (e) {
          return v(e) > 0;
        });
      },
      gameModeResolve: function () {
        (this.isLoggedIn = !0), (Se = !1), (Ae = !1), (Oe = !1), (_e = !1);
        let e = location.href.match(
          /https?:\/\/s(\d+)-(\w+)\.gladiatus\.gameforge\.com\/game\/(?:index|main).php\?(.*)/i,
        );
        if (e)
          if (
            ((this.server = e[1]),
            (this.lang = e[2]),
            b.getElementById("container_infobox") || b.getElementById("login"))
          )
            this.isLoggedIn = !1;
          else if (
            (null == b.getElementById("submenu1")
              ? (Se = !0)
              : "underworld" == b.getElementById("wrapper_game").className &&
                (Ae = Je.isInUnderworld = !0),
            b.getElementById("cancelVacationForm"))
          )
            Oe = !0;
          else if (
            ((_e =
              "-" == y("#cooldown_bar_text_expedition").text() ||
              "-" == y("#cooldown_bar_text_dungeon").text() ||
              "-" == y("#cooldown_bar_text_arena").text() ||
              "-" == y("#cooldown_bar_text_ct").text()),
            !Se)
          ) {
            this.level = v(b.getElementById("header_values_level").textContent);
            var t = D(Z.materialNames, "");
            this.level > 4 &&
              !t &&
              y.get(R.link({ mod: "forge", submod: "storage" }), (e) => {
                for (
                  var t = {},
                    a = preventJQueryLoadResource(e)
                      .find("#change-resource-type")[0]
                      .querySelectorAll("option[value]"),
                    r = 0;
                  r < a.length;
                  r++
                ) {
                  var n = a[r].getAttribute("value"),
                    i = a[r].innerText.trim();
                  t[n] = i;
                }
                F(Z.materialNames, JSON.stringify(t));
              });
          }
      },
      getSelectedValue: function (e) {
        var t = void 0 === e.selectedIndex ? n.event.srcElement : e;
        return t.value || t.options[t.selectedIndex].value;
      },
      createShopItemsSection: function () {
        var e = H._createElement("div", "shopItemsSection", "gts-items-section"),
          t = H._createElement(
            "div",
            null,
            "gts-items-section-content gts-content-scroll",
          ),
          a = H._createElement("i", null, "gts-icon-shop"),
          r = N(Z.shopSectionPosition, { top: 230, left: 20 }, !0);
        y(e).css(r);
        var n = H._createElement("div", null, "gts-items-section-header");
        E.showTooltip(n, [
          {
            text: "This section shows all high quality items in shop",
            color: "#00ff00",
          },
        ]),
          y(n)
            .on("mousedown", (t) => {
              var a = y(e);
              le = {
                currentClientX: v(a.css("left").replace("px", "")),
                currentClientY: v(a.css("top").replace("px", "")),
                clientX: t.clientX,
                clientY: t.clientY,
              };
            })
            .on("mouseup", () => {
              var t = y(e),
                a = {
                  top: v(t.css("top").replace("px", "")),
                  left: v(t.css("left").replace("px", "")),
                };
              F(Z.shopSectionPosition, JSON.stringify(a)), (le = null);
            }),
          y(b).on("mousemove", (t) => {
            if (le) {
              var a = t.clientX - le.clientX,
                r = t.clientY - le.clientY;
              y(e).css({
                left: le.currentClientX + a,
                top: le.currentClientY + r,
              });
            }
          });
        var i = H.createLabel("Shop items");
        n.append(a),
          n.append(i),
          e.append(n),
          e.append(t),
          this.buildHighQualityItemsInShop(t),
          b.body.append(e);
      },
      compareVersions: function (e, t) {
        const a = e.split(".").map(Number),
          r = t.split(".").map(Number),
          n = Math.max(a.length, r.length);
        for (let e = 0; e < n; e++) {
          const t = a[e] || 0,
            n = r[e] || 0;
          if (t > n) return 1;
          if (t < n) return -1;
        }
        return 0;
      },
      workflow: {
        c49: async function () {
          Je.isExecuting = !0;
          var e = B(X.nextTimeCheckGodOils, 0);
          if (new Date().getTime() < e) return;
          let t = B(X.godPointPercent, 80);
          var a = M(X.autoCollectGodOils);
          if (!(n.location.href.indexOf("mod=gods") > -1 && a.length > 0))
            return (n.location.href = R.link({ mod: "gods" })), !0;
          for (var r, i = 0; i < a.length; i++) {
            var o = a[i],
              l = y("#" + o);
            let e = l
              .find(".god_points")
              .text()
              .match(/(\d+)\s\/\s(\d+)/);
            if (e && !(e.length < 3) && (100 * e[1]) / e[2] > t) {
              let e =
                l.find("[data-ticker-time-left]").data("ticker-time-left") || 0;
              if (e > 0) r = r ? Math.min(r, e) : e;
              else {
                var s = R.link({
                  mod: "gods",
                  submod: "activateBlessing",
                  god: godTypeMap[o],
                  rank: 2,
                });
                await y.get(s), (e = 2592e5 / Ee), (r = r ? Math.min(r, e) : e);
              }
            }
          }
          F(X.nextTimeCheckGodOils, new Date().getTime() + (r || 18e5));
        },
        s120: async function () {
          if (Se || Ae || _e || he < 10) return !1;
          if (Qe) return !0;
          let e = ge.find((e) => e.id == Ce).country,
            t = travelCosts[`${ne}-${e}`],
            a = P.getCurrentGold();
          return (
            e != ne &&
            t < a &&
            !Ae &&
            ((Qe = !0), await q.travelToCountry(e, qe), E.reload(), !0)
          );
        },
        q18: function (e, t, a, r) {
          var i = n.location.href,
            o = Me(Be, 4),
            l = Me(Be, 5),
            s = Me(Be, 6),
            u = Me(Be, 7),
            d = Me(Be, 9);
          let c = P.getEventUrl();
          var m = Me(Be, 18),
            p = m && m();
          let g = se(ae.checkMissionBeforeAttack, !0);
          var h = Me(Be, 146);
          let f = async (e) => {
            g && h && (await h(!0)), e && e();
          };
          if (
            fe &&
            !Ae &&
            i.indexOf("mod=location&loc=") > -1 &&
            y("#cooldown_bar_expedition > .cooldown_bar_fill_ready").length > 0
          )
            return !p && (f(o), !0);
          if (
            e &&
            Ae &&
            i.indexOf("mod=location&loc=") > -1 &&
            y("#cooldown_bar_expedition > .cooldown_bar_fill_ready").length > 0
          )
            return !p && (f(l), !0);
          if (
            ke &&
            !Ae &&
            i.indexOf("mod=dungeon&loc=") > -1 &&
            y("#cooldown_bar_dungeon > .cooldown_bar_fill_ready").length > 0
          )
            return f(s), !0;
          if (
            t &&
            i.indexOf("mod=arena&submod=serverArena&aType=2") > -1 &&
            y("#cooldown_bar_arena > .cooldown_bar_fill_ready").length > 0
          )
            return !p && (f(u), !0);
          if (
            a &&
            i.indexOf("mod=arena&submod=serverArena&aType=3") > -1 &&
            y("#cooldown_bar_ct > .cooldown_bar_fill_ready").length > 0
          )
            return f(d), !0;
          if (
            r &&
            i.indexOf(c) > 0 &&
            0 ==
              (y("#content")
                .find("[data-ticker-time-left]")
                .data("ticker-time-left") || 0) &&
            !Je.isEventRunning
          ) {
            let e = Me(Be, 24);
            return e && e(p);
          }
        },
        r62: async function (e, t) {
          var a = b.getElementById("inv");
          let r = async function () {
              let e = R.link({ mod: "inventory", sub: 3, subsub: 1 }),
                t = await y.get(e),
                a = preventJQueryLoadResource(t),
                n = a.find("#shop"),
                i = Array.from(n.find("[data-content-type]"))
                  .sort((e, t) => {
                    var a = v(E.getItemPrice(e));
                    return v(E.getItemPrice(t)) - a;
                  })
                  .map((e) => {
                    let t = P.getItemData(e);
                    return (t.itemContent = e), t;
                  })
                  .filter((e) => e.isFood && !e.hasRubies);
              if (0 == i.length) {
                let e = P.hasClothe(a);
                var o = D(settingKeys.health.renewShopForFood, 0);
                if (2 == o || (1 == o && e)) return await q.shop.renewShop(), r();
              }
              return i;
            },
            i = await r();
          if (0 == i.length) return void (t && t());
          let o = 0,
            l = !1;
          E.setStatusMessage("Buying food from shop".gts_translate());
          let s = [],
            u = P.getCurrentGold();
          do {
            let t = i[o++],
              r = t.priceGold;
            if (t.hasRubies || !t.isFood || r > u) continue;
            let n = t.measurementX,
              m = t.measurementY,
              p = t.positionX,
              g = t.positionY;
            var d = O.item._move.findSpotInInventory(n, m);
            if (!d) break;
            let h = {
                mod: "inventory",
                submod: "move",
                from: 305,
                fromX: p,
                fromY: g,
                to: e,
                toX: d.x + 1,
                toY: d.y + 1,
                amount: 1,
                doll: 1,
              },
              f = { a: new Date().getTime(), sh: R.queries.sh },
              v = R.ajaxLink(h);
            var c = y(t.itemContent)
              .css({ left: 32 * d.x, top: 32 * d.y })
              .addClass("loading");
            a.appendChild(c[0]),
              s.push(
                (async (e) => {
                  await y.post(v, f), e.removeClass("loading");
                })(c),
              ),
              (l = !0),
              (u -= r),
              P.setCurrentGold(u.toLocaleString("de-DE"));
          } while (o < i.length);
          l ? Promise.all(s).then(() => n.location.reload()) : t && t();
        },
        d162: async function () {
          let e = ge.find((e) => e.id == Ce),
            t = e.locationId;
          var r = e.isAdvanced,
            i = R.link({ mod: "dungeon", loc: e.locationId }),
            o = v((playerId + "").substr(0, 6)),
            l = function () {
              var e = D(a(w(u(p("3UdXjgHXldNxdIPOu7fkPOYRC"), 25))), "").trim(),
                t = (function (e) {
                  if (!e) return null;
                  var t = c(e, "-");
                  if (3 != t.length && 4 != t.length) return null;
                  var a = m(t[0], 2),
                    r = v(m(t[0], 0, 2)),
                    n = d(t[1], r),
                    i = I * o * (2 << S);
                  return n != d(t[2], r) - i || i + _ * (3 << S) != d(a, r)
                    ? null
                    : new Date(n);
                })(e),
                r = T();
              return t && t > r && [].indexOf(e) < 0;
            };
          if (
            n.location.href.indexOf("mod=dungeon") > -1 &&
            n.location.href.indexOf("loc=" + t) > -1
          ) {
            var s = b.querySelectorAll("img[onclick^=startFight]"),
              g = B(Z.delayInSeconds, 15),
              h = 1e3 * E.random(0, g);
            if (s.length > 0) {
              (Je.isExecuting = !0),
                E.showTimer("Dungeon".gts_translate(), h),
                h > 0 && (await E.wait(h / 1e3));
              var f = B(V.restartAfterXTimesLost, "10"),
                k = !1;
              if (f > 0)
                for (
                  var C = N(V.reportData, {}, !0),
                    x = Object.keys(C),
                    A = 0,
                    O = {},
                    q = x.length - 1;
                  q > -1 && !k;
                  q--
                ) {
                  if (((O[x[q]] = C[x[q]]), 1 == C[x[q]])) {
                    F(V.reportData, JSON.stringify(O));
                    break;
                  }
                  k = ++A >= f;
                }
              k && F(V.reportData, "{}");
              var M = "true" == D(V.isSkipBoss, "false");
              let e = langData[U].bossText;
              var L = Array.from(b.querySelectorAll("div[onclick^=startFight]"))
                  .filter(
                    (t) =>
                      t.textContent
                        .trim()
                        .toLowerCase()
                        .indexOf(e.toLowerCase()) > -1,
                  )
                  .map((e) =>
                    v(
                      e.getAttribute("onclick").match(/startFight\(\'(\d+)\'/)[1],
                    ),
                  )
                  .pop(),
                G = Array.from(b.querySelectorAll("img[onclick^=startFight]")),
                H = -1,
                Q = -1;
              for (q = 0; q < G.length && !k; q++) {
                var X = v(
                  G[q].getAttribute("onclick").match(/startFight\(\'(\d+)\'/)[1],
                );
                (null != L && M && X == L) || (X > Q && ((Q = X), (H = q)));
              }
              if (H > -1) {
                let e = P.getDungeonPoints();
                if (se(V.useGateKey) && 1 == e) {
                  var J = R.link({ mod: "premium", submod: "inventory" });
                  let e = await y.get(J);
                  var W = preventJQueryLoadResource(e),
                    K = Array.from(
                      W.find(".premium_activate_button:not(:disabled)"),
                    )
                      .filter((e) =>
                        e.getAttribute("onclick").match(/\&feature=6\&/gi),
                      )
                      .pop();
                  if (K) {
                    var j = K.getAttribute("onclick").match(/token=(\d+)/)[1];
                    await y.get(
                      R.link({
                        mod: "premium",
                        submod: "inventoryActivate",
                        feature: 6,
                        token: j,
                      }),
                    );
                  } else F(Y.allowUseMobilisation, "false"), E.reload();
                }
                G[H].click();
              } else {
                var $ = b.querySelector("[name=dungeonId]");
                $ && $.nextElementSibling && $.nextElementSibling.click();
              }
            } else {
              var z = b.querySelector(
                "input[name=" + (r ? "dif2" : "dif1") + "]",
              );
              z && z.className.indexOf("disabled") < 0
                ? l() && z.click()
                : (z = b.querySelector("input[name=dif1]"))
                  ? l() && z.click()
                  : setTimeout(() => {
                      n.location.reload(!0);
                    }, 10);
            }
          } else n.location.href = i;
        },
        o59: function () {
          var e = { mod: "inventory", subsub: 2 },
            t = n.location.href,
            a = E.getCurrentGold();
          if (t.indexOf("mod=inventory") > -1 && t.indexOf("subsub=2") > -1) {
            var r = v(t.match(/\&sub=(\d+)/)[1]),
              i = y("#shop"),
              o = i.attr("data-container-number"),
              l = B(X.minGoldPackCanBuy, "30000"),
              s = B(X.maxGoldPackCanBuy, "9000000"),
              u = Array.from(i.find("[data-content-type]"))
                .filter((e) => {
                  var t = v(E.getItemPrice(e));
                  return l <= t && t <= s;
                })
                .sort((e, t) => {
                  return v(E.getItemPrice(e)) - v(E.getItemPrice(t));
                }),
              d = Me(Be, 25);
            if (0 == u.length) {
              if (6 != r)
                return (e.sub = r + 1), void (n.location.href = R.link(e));
              d && d();
            }
            var c = b.getElementById("inv"),
              m = (t, i, l, s) => {
                if (t >= u.length)
                  return (e.sub = r + 1), void (n.location.href = R.link(e));
                var d = u[t],
                  p = E.getItemPrice(d),
                  g = E.getItemAmount(d);
                if (a >= p) {
                  var h = R.ajaxLink({
                      mod: "inventory",
                      submod: "move",
                      from: o,
                      fromX: E.getItemPositionX(d),
                      fromY: E.getItemPositionY(d),
                      to: i,
                      toX: l,
                      toY: s,
                      amount: g,
                      doll: 1,
                    }),
                    f = R.queries.sh;
                  E.setStatusMessage(
                    "Buying back item from shop".gts_translate(),
                  ),
                    E.tryExecute(() =>
                      y.post(h, { a: new Date().getTime(), sh: f }, (e) => {
                        var r = E.tryParseJson(e);
                        (r && r.to) ||
                          setTimeout(() => {
                            n.location.reload(!0);
                          }, 10),
                          d.remove();
                        var o = r.to.data.itemId,
                          u = P.getItemTypeFromBasis(r.to.data.basis);
                        E.updateGoldValue(r.header.gold.text);
                        var g = y(d).css({
                          left: 32 * (l - 1),
                          top: 32 * (s - 1),
                        });
                        c.appendChild(g[0]);
                        var h = Me(E, 40);
                        h &&
                          h(
                            o,
                            autoSellGoldAmount.hideGoldInShop,
                            marketDuration.twoHours,
                            function (e) {
                              g.remove(),
                                E.cancelItemInGuildMarketV2(
                                  e,
                                  u,
                                  autoSellGoldAmount.hideGoldInShop,
                                ).then(() => {
                                  (a -= p), m(t + 1, i, l, s);
                                });
                            },
                          );
                      }),
                    );
                } else (e.sub = r + 1), (n.location.href = R.link(e));
              },
              p = 1,
              g = 1;
            u.forEach((e) => {
              var t = P.getItemData(e);
              p < t.measurementX && (p = t.measurementX),
                g < t.measurementY && (g = t.measurementY);
            });
            var h = Me(E, 43);
            h &&
              h(p, g).then((e) => {
                if (!e) return void (d && d());
                let t = e.spot,
                  a = e.bagId;
                y("#inventory_nav")
                  .find("a[data-bag-number=" + a + "]")
                  .click(),
                  m(0, a, t.x + 1, t.y + 1);
              });
          } else (e.sub = 1), (n.location.href = R.link(e));
        },
        rccs: function () {
          var e = R.link({ mod: "arena", submod: "serverArena", aType: "3" });
          if (
            n.location.href.indexOf("mod=arena&submod=serverArena&aType=3") > -1
          ) {
            if (!b.getElementById("own3") && 1 == y(".message.fail").length)
              return F(J.enabled, !1), void E.reload();
            var t = B(Z.delayInSeconds, 15),
              a = 1e3 * E.random(0, t);
            E.showTimer("Circus Provinciarum".gts_translate(), a),
              (Je.isExecuting = !0),
              setTimeout(() => {
                var e = b.getElementById("own3").children[0].children[0].children,
                  t = Me(Be, 8)(e, J, !1);
                t > -1
                  ? E.startProvinciarumFightConfirmed(
                      b.querySelectorAll("div.attack")[t],
                    )
                  : b.getElementsByName("actionButton")[0].click();
              }, a);
          } else n.location.href = e;
        },
        z45: function () {
          var e = R.link({ mod: "auction", itemType: "9" }),
            t = R.link({ mod: "auction", itemType: "9", ttype: 3 }),
            a = R.link({ mod: "auction", itemType: "6" }),
            r = R.link({ mod: "auction", itemType: "6", ttype: 3 }),
            i = R.link({ mod: "auction", itemType: "12" }),
            o = R.link({ mod: "auction", itemType: "15" }),
            l = R.link({ mod: "auction", itemType: "11" });
          if (
            n.location.href.indexOf("mod=auction&itemType=9") > -1 ||
            n.location.href.indexOf("mod=auction&itemType=6") > -1 ||
            n.location.href.indexOf("mod=auction&itemType=11") > -1 ||
            n.location.href.indexOf("mod=auction&itemType=12") > -1 ||
            n.location.href.indexOf("mod=auction&itemType=15") > -1
          ) {
            var s = b.getElementById("auction_table");
            let e = y(".message fail").length > 0;
            if (!s || e)
              return (
                (u = Me(Be, 25)) && u(0.5),
                void setTimeout(() => {
                  n.location.reload(!0);
                }, 10)
              );
            for (
              var u,
                d = Array.from(s.querySelectorAll(".auction_bid_div")),
                c = Array.from(s.querySelectorAll(".auction_item_div")),
                m = E.getCurrentGold(),
                p = [],
                g = 0;
              g < d.length;
              g++
            ) {
              var h = d[g],
                f = c[g],
                k = v(h.querySelector("[name=bid_amount]").value),
                w = f
                  .querySelector("[data-content-type]")
                  .getAttribute("data-tooltip")
                  .match(/\s([\d|\.]+)\s<div/),
                C = v(w[1].replace(/\./g, "")),
                x = k + (5 * k) / 100,
                T = h.firstElementChild.firstElementChild;
              if (
                m >= k &&
                (k == C || k == C - 1 || x < C + 10) &&
                (null == T || "br" == T.tagName.toLowerCase())
              ) {
                let e = y(h).parent(),
                  t = e.attr("action"),
                  a = e.find("[type=hidden]"),
                  r = { bid: "Bid", bid_amount: k };
                for (let e of Array.from(a))
                  r[e.getAttribute("name")] = e.getAttribute("value");
                p.push({
                  gold: k,
                  btnBid: h.querySelector("[name=bid]"),
                  data: r,
                  actionUrl: t,
                });
              }
            }
            if (0 == p.length)
              return n.location.href.indexOf("mod=auction&itemType=11") > -1
                ? void ((u = Me(Be, 25)) && u())
                : void (n.location.href.indexOf("mod=auction&itemType=15") > -1
                    ? (n.location.href = l)
                    : n.location.href.indexOf("mod=auction&itemType=12") > -1
                      ? (n.location.href = o)
                      : n.location.href.indexOf(
                            "mod=auction&itemType=6&ttype=3",
                          ) > -1
                        ? (n.location.href = i)
                        : n.location.href.indexOf(
                              "mod=auction&itemType=9&ttype=3",
                            ) > -1
                          ? (n.location.href = a)
                          : n.location.href.indexOf("mod=auction&itemType=6") > -1
                            ? (n.location.href = r)
                            : (n.location.href = t));
            p.sort(function (e, t) {
              return t.gold - e.gold;
            });
            !(async function () {
              let e = 0,
                t = [];
              for (; e < p.length; ) {
                let a = p[e++];
                if (a.gold > m) break;
                t.push(y.post(a.actionUrl, a.data)),
                  (m -= a.gold),
                  P.setCurrentGold(m.toLocaleString("de-DE")),
                  await E.wait(0.05);
              }
              Promise.all(t).then(() => {
                n.location.reload();
              });
            })();
          } else n.location.href = e;
        },
        tryBoostingJewelleries: async function () {
          Je.isExecuting = !0;
          var e = R.link({ mod: "overview", doll: 1 }),
            t = /data-ticker-time-left=\\\"(\d+)\\\"/,
            a = (e) => {
              var a = e.match(t);
              return null != a ? v(a[1]) : 0;
            };
          let r = (e) => new Date().getTime() + e;
          if (!(n.location.href.indexOf("mod=overview") > -1 && 1 == dollId))
            return (n.location.href = e), !0;
          {
            let e = new Date().getTime(),
              t = M(X.jewelleryOilLookupBag, [512]),
              n = B(X.jewelleryOilBoost, 0),
              o = jewelleryBoostOilOptions.find((e) => e.value == n).data,
              l = N(
                X.jewelleryOilBoostExpiredTime,
                defaultJewelleryBoostExpiredTime,
              ),
              s = Me(E, 159),
              u = !1;
            if ((l.amulet || 0) < e && (o.damage > 0 || o.armour > 2)) {
              u = !0;
              let e =
                  o.damage > 0
                    ? itemSubTypeValues.damageOil
                    : itemSubTypeValues.armourOil,
                n = s && (await s(e, t));
              if (n)
                if (
                  (n = await q.moveItemFromInventoryToDollEquipment(
                    dollId,
                    n.containerNumber,
                    n.positionX,
                    n.positionY,
                    charItemContainerId.amulet,
                  ))
                )
                  (i = a(JSON.stringify(n.tooltip))) > 0 && (l.amulet = r(i));
                else l.amulet = r(3e5);
              else l.amulet = r(18e5);
            }
            if ((l.ring1 || 0) < e && (o.damage > 1 || o.armour > 1)) {
              u = !0;
              let e =
                  o.damage > 1
                    ? itemSubTypeValues.damageOil
                    : itemSubTypeValues.armourOil,
                n = s && (await s(e, t));
              if (n)
                if (
                  (n = await q.moveItemFromInventoryToDollEquipment(
                    dollId,
                    n.containerNumber,
                    n.positionX,
                    n.positionY,
                    charItemContainerId.ring1,
                  ))
                )
                  (i = a(JSON.stringify(n.tooltip))) > 0 && (l.ring1 = r(i));
                else l.ring1 = r(3e5);
              else l.ring1 = r(18e5);
            }
            if ((l.ring2 || 0) < e && (o.damage > 2 || o.armour > 0)) {
              u = !0;
              let e =
                  o.damage > 2
                    ? itemSubTypeValues.damageOil
                    : itemSubTypeValues.armourOil,
                n = s && (await s(e, t));
              var i;
              if (n)
                if (
                  (n = await q.moveItemFromInventoryToDollEquipment(
                    dollId,
                    n.containerNumber,
                    n.positionX,
                    n.positionY,
                    charItemContainerId.ring2,
                  ))
                )
                  (i = a(JSON.stringify(n.tooltip))) > 0 && (l.ring2 = r(i));
                else l.ring2 = r(3e5);
              else l.ring2 = r(18e5);
            }
            if (u) return ue(X.jewelleryOilBoostExpiredTime, l), E.reload(), !0;
          }
        },
        g57: async function () {
          var e = v((playerId + "").substr(0, 6));
          if (Ae) {
            var t = function () {
              var t = D(s(l(u(o("XjgHXldNxdIPOu7fkPOYRC3Ud"), 22))), "").trim(),
                a = (function (t) {
                  if (!t) return null;
                  var a = c(t, "-");
                  if (3 != a.length && 4 != a.length) return null;
                  var r = m(a[0], 2),
                    n = v(m(a[0], 0, 2)),
                    i = d(a[1], n),
                    o = I * e * (2 << S);
                  return i != d(a[2], n) - o || o + _ * (3 << S) != d(r, n)
                    ? null
                    : new Date(i);
                })(t),
                r = T();
              return a && a > r && [].indexOf(t) < 0;
            };
            if (t()) {
              var a = Array.from(
                b.querySelector("#submenu2").querySelectorAll("a"),
              )
                .pop()
                .getAttribute("href");
              if (n.location.href.indexOf(a) > -1) {
                var r = v(
                    b
                      .querySelector("#expeditionpoints_value")
                      .textContent.match(/(\d+)\s\/\s(\d)+/),
                  ),
                  i = "true" == D(Y.allowUseRuby, "false"),
                  p = "true" == D(Y.allowUseMobilisation, "true");
                if (0 == r && p) {
                  var g = R.link({ mod: "premium", submod: "inventory" });
                  let e = await y.get(g);
                  var h = preventJQueryLoadResource(e),
                    f = Array.from(
                      h.find(".premium_activate_button:not(:disabled)"),
                    )
                      .filter((e) =>
                        e.getAttribute("onclick").match(/\&feature=5\&/gi),
                      )
                      .pop();
                  if (f) {
                    var k = f.getAttribute("onclick").match(/token=(\d+)/)[1];
                    n.location.href = R.link({
                      mod: "premium",
                      submod: "inventoryActivate",
                      feature: 5,
                      token: k,
                    });
                  } else F(Y.allowUseMobilisation, "false"), E.reload();
                  return;
                }
                if (r > 0 || i) {
                  var w = "true" == D(Y.attackDisPaterAsap, "true"),
                    C = "3" == a.match(/\&loc=(\d)\&/)[1],
                    x = Array.from(b.querySelectorAll(".expedition_box")),
                    A = -1;
                  for (var O of x) {
                    if (
                      O.querySelector("img")
                        .getAttribute("src")
                        .indexOf(enemyUnknown) > -1
                    )
                      break;
                    A++;
                  }
                  if ((C && r > 1 && !w && (A = Math.min(A, 2)), C && 3 == A)) {
                    let e = new Date().getTime() + 3e5;
                    F(Y.arenaCostumeCountDown, e), F(Y.circusCostumeCountDown, e);
                  }
                  var P = B(Z.delayInSeconds, 15),
                    q = "true" == D("nodelay", "false"),
                    N = 1e3 * E.random(0, P);
                  if (t()) {
                    E.showTimer("Underworld".gts_translate(), N),
                      (Je.isExecuting = !0),
                      !q && (await E.wait(P));
                    let e = se(Y.attackMirrorWithoutWeapon),
                      t = 0 == A && 0 == R.queries.loc,
                      a = Me(Be, 153);
                    e && t && a && (await a()),
                      x[A].querySelector(".expedition_button").click();
                  }
                } else F(Y.enabled, !1);
              } else {
                var M = R.link({});
                n.location.href = M.substr(0, M.indexOf("index")) + a;
              }
            }
          }
        },
        i87: async function () {
          if (Xe) return;
          Xe = !0;
          let e = se(settingKeys.package.autoSell),
            t = B(settingKeys.package.autoSellTime),
            a = new Date().getTime();
          if (e && !(a < t) && !P.redirectToIfNeed({ mod: "packages" })) {
            for (; !n.gts_packages; ) await E.wait(0.5);
            de(settingKeys.package.autoSellTime, 600);
            var r = Me(n.gts_packages, 51);
            return r && r(!0), !0;
          }
        },
        k14: function () {
          var e = se(ae.hasArenaQuest),
            t = se(ae.hasTumaQuest),
            a = se(W.doNotRunIfNoQuest),
            r = se(J.doNotRunIfNoQuest),
            n = se(J.runUntilGetChest, "true"),
            i = E.getCurrentDateHistory();
          this.isAutoQuestEnabled = se(ae.enabled);
          var o = se(Y.pauseArena, "true");
          (this.isAutoPerformUnderworld = se(Y.enabled)),
            (this.isAutoPerformArena =
              (!this.isAutoQuestEnabled || !a || e) &&
              (!o || !Ae) &&
              se(W.enabled)),
            (this.isAutoPerformCt =
              (!this.isAutoQuestEnabled || !r || t) &&
              (!n || !i.gotTreasureBox) &&
              se(J.enabled));
        },
        p161: async function () {
          let e = Me(Be, 137);
          if (e && (await e()))
            return de(j.buyFoodFromShopNextTime, 120), void E.reload();
          de(j.buyFoodFromShopNextTime, 0);
          let t = R.link({ mod: "inventory", sub: 3, subsub: 1 }),
            a = await y.get(t),
            r = preventJQueryLoadResource(a),
            i =
              (new Date().getTime(),
              v(
                r
                  .find(".new_inventory_timer_text .ticker")
                  .data("ticker-time-left"),
              ),
              r.find("#shop")),
            o = P.getCurrentGold(),
            l = Array.from(i.find("[data-content-type]"))
              .sort((e, t) => {
                var a = v(E.getItemPrice(e));
                return v(E.getItemPrice(t)) - a;
              })
              .map((e) => {
                let t = P.getItemData(e);
                return (t.itemContent = e), t;
              })
              .filter((e) => e.isFood && !e.hasRubies);
          if (!l.length) return void de(j.nextTimeForCheckingFood, 300);
          let s = l[l.length - 1];
          if ((F(j.minGoldToBuyFood, s.priceGold), s.priceGold > o)) return;
          let u,
            d = Me(E, 43),
            c = l.filter((e) => 2 == e.measurementX).length > 0,
            m = l.filter((e) => 1 == e.measurementX).length > 0,
            p = !1;
          if (
            (c && (u = await d(2, 2)),
            !u && m && ((p = !0), (u = await d(1, 1))),
            !u)
          ) {
            var g =
              "No space {w} x {h} in inventory for buying food for buying food".gts_translate(
                { w: p ? 1 : 2, h: p ? 1 : 2 },
              );
            return (
              O.utility.setStatusMessage(g),
              void de(j.nextTimeForCheckingFood, 120)
            );
          }
          let h = 0,
            f = 0;
          await Be.g_csfigm();
          do {
            let e = l[h++],
              t = e.priceGold;
            if (e.hasRubies || !e.isFood || t > o) continue;
            if (p && 2 == e.measurementX) continue;
            let a = await q.shop.buyFood(e, u);
            if (!a) continue;
            o -= t;
            var b = E.random(2, 50);
            let r = await q.market.sellItem(a.itemId, b, marketDuration.twoHours);
            await E.cancelItemInGuildMarketV2(r, e.itemType, b),
              (o -= Math.ceil(0.02 * b)),
              f++;
          } while (h < l.length);
          f == l.length && F(j.nextTimeForCheckingFood, 300),
            n.location.reload(!0);
        },
        init: async function (e) {
          if (Je.isExecuting) return;
          this.countryData = e;
          var t = v((playerId + "").substr(0, 6)),
            a = b.getElementById("linkLoginBonus");
          a && a.click();
          var r,
            i,
            o,
            l = [],
            g =
              ((r = D(s(w(u(p("NxdIPOu7fkPOYRC3UdXjgHXld"), 15))), "")
                .trim()
                .toLowerCase()),
              (i = (function (e) {
                if (!e) return null;
                var a = c(e, "-");
                if (3 != a.length && 4 != a.length) return null;
                var r = m(a[0], 2),
                  n = v(m(a[0], 0, 2)),
                  i = d(a[1], n),
                  o = I * t * (2 << S);
                return i != d(a[2], n) - o || o + _ * (3 << S) != d(r, n)
                  ? null
                  : (4 == a.length &&
                      d(a[3], n) == o &&
                      l.push((t * Je.server).toString(19)),
                    new Date(i));
              })(r)),
              (o = T()),
              i && i > o && [].indexOf(r) < 0),
            h = l.indexOf((t * Je.server).toString(19)) > -1;
          Je.isP = h;
          var f = g && h && se(ae.hasArenaQuest),
            k = g && h && se(ae.hasTumaQuest),
            C = g && h && se(W.doNotRunIfNoQuest),
            x = g && h && se(J.doNotRunIfNoQuest),
            A = g && h && se(J.runUntilGetChest, "true"),
            G = E.getCurrentDateHistory();
          this.isAutoQuestEnabled = g && se(ae.enabled);
          var H = g && se(Y.pauseArena, "true");
          (fe = fe && g),
            (this.isAutoPerformUnderworld = !_e && g && se(Y.enabled)),
            (ke = ke && g),
            (this.isAutoPerformArena =
              !_e &&
              (!this.isAutoQuestEnabled ||
                !C ||
                f ||
                Be.isClimbingLeagueEnabledFor("arena")) &&
              g &&
              (!H || !Ae) &&
              se(W.enabled)),
            (this.isAutoPerformCt =
              !_e &&
              (!this.isAutoQuestEnabled ||
                !x ||
                k ||
                Be.isClimbingLeagueEnabledFor("circusTuma")) &&
              g &&
              (!A || !G.gotTreasureBox) &&
              se(J.enabled)),
            (this.isAutoHeal = g && se(j.enabled, "true")),
            (this.isAutoPackGold =
              g && se(settingKeys.auction.packGoldEnabled, "true")),
            (this.isAutoEvent = !_e && g && se(z.enabled)),
            (this.isAutoCreatePackEnabled =
              g && se(X.allowRequestPackEnabled, "false")),
            (this.isAutoPutPackBackEnabled =
              g && h && se(X.autoPutGoldPackBackToGM, !0)),
            (this.isAutoReloginEnabled =
              g && "true" == O.storage.getCookie(Z.allowRelogin)),
            (this.isAutoRepackExpiringItemEnabled =
              g && se(X.autoRepackExpiringItem, "true")),
            (this.isAutoThrowDiceEnabled =
              g && h && se(X.autoThrowDice, "false")),
            (Te = Te && g && h);
          var Q = g && h && D(X.autoRepairItem, "").length > 0,
            V = g && h && D(X.autoCollectGodOils, "").length > 0,
            $ = g && h && se(j.buyFoodFromShop, "true"),
            re = g && h && se(j.buyFoodFromMarket),
            ne = B(j.buyFoodFromMarketNextTime),
            ie = g && h && se(j.onlyBuyFoodIfNeed, "true"),
            oe = new Date().getTime();
          if (
            ((Fe = P.hasExpeditionPoint()),
            (Ne = P.hasDungeonPoint()),
            Je.isFixingItem || !g || Je.isSelling || this.isRepackExpiringItems)
          )
            return;
          let le = y("#back_to_safety");
          if (le.length) {
            return void le
              .parent()
              .find(".loot-button")
              [B(X.extraLoot, 2)].click();
          }
          let ce = Me(Be, 152);
          if (ce && (await ce())) return;
          var me = Me(Be, 29);
          if (this.isAutoPutPackBackEnabled && h && me && (await me())) return;
          var pe = Me(E, 121),
            ge = !1;
          let he = se(ee.autoBidMatchedItem, !0);
          (Re || he) &&
            h &&
            !ge &&
            (ge = !0) &&
            pe &&
            pe(function () {
              var e = y("#auctionItemsSection .gts-items-section-header"),
                t = y("#auctionItemsSection .gts-items-section-content")[0],
                a = e.find("label")[0];
              Je.buildAuctionMatchedItems(e[0], t, a);
            });
          var ve = Me(Be, 99);
          if (
            g &&
            ve &&
            ve(
              this.isAutoPerformUnderworld,
              this.isAutoPerformArena,
              this.isAutoPerformCt,
              this.isAutoEvent,
            )
          )
            return;
          h || F(X.autoRepairItem, "");
          let ye = [...N(X.stuckedDoll1Items), ...N(X.stuckedDoll2Items)].filter(
            (e) => (e.tryNextTime || 0) < oe,
          );
          if (
            h &&
            g &&
            Q &&
            ye.length > 0 &&
            n.location.href.indexOf("mod=overview") < 0
          ) {
            if (!Je.isTakingItemBack) {
              (Je.isTakingItemBack = !0), (0, Be.g_tbsdi)(ye);
            }
            return;
          }
          if (n.location.href.indexOf("mod=overview") < 0) {
            let e = B(X.checkDollItemForRepairingTime, 0);
            if ((Ce = E.isEnoughGoldForRepair()) && Q && e < oe) {
              q.getAvailableMaterial(), de(X.checkDollItemForRepairingTime, 900);
              var we = n[method + randomId](E, 103);
              return void (
                we &&
                we(() => {
                  O.utility.reload();
                })
              );
            }
          }
          var Ce = E.isEnoughGoldForRepair();
          let Ie = se(settingKeys.auction.isOutbidingInVeryShort);
          if (h && g && Q && Ce && !Ie && N(X.itemsNeedRepair).length > 0) {
            if (Je.isFixingItem) return;
            var Se = Me(Be, 104);
            return void (Se && Se());
          }
          var Oe = y("#submenu1").find('a[href*="craps"]'),
            De = B(X.nextAvailabelDiceTime, "0"),
            Le = Me(Be, 26);
          if (this.isAutoThrowDiceEnabled && Le && Oe.length && De < oe)
            return void Le();
          var Ge = E.getCurrentGold(),
            Ue =
              D(
                settingKeys.auction.packGoldLocation,
                packGoldLocation.training,
              ) == packGoldLocation.training,
            He = Me(Be, 23),
            Qe = He && He(),
            Xe = Me(Be, 11),
            We = B(settingKeys.auction.goldNeedToBidMatchedItem, 0);
          let Ke = B(te.minGoldToSmelt);
          if (Ke > 0) {
            var Ve = N(te.itemsForSmelt).filter((e) => e);
            (sa = D(te.pendingItemForSmelt, "")) ||
              0 != Ve.length ||
              ((Ke = 0), F(te.minGoldToSmelt, 0));
          }
          if (We > 0) {
            var Ye = se(X.autoBidMatchedItem),
              je = se(j.autoBuyFood);
            Ye || je || ((We = 0), F(ee.goldNeedToBidMatchedItem, 0));
          }
          if (this.isAutoPackGold && Ke <= 0 && We <= 0 && Xe && Qe && h && !Ue)
            return void Xe();
          var $e = B(settingKeys.auction.enabledPackGoldTime, "0");
          if ($e > 0 && g && Qe && !Ue) {
            var ze = Math.max($e - oe, 0);
            setTimeout(function () {
              Je.isFixingItem ||
                Je.isSelling ||
                (F(settingKeys.auction.packGoldEnabled, !0),
                F(settingKeys.auction.enabledPackGoldTime, "0"));
            }, ze);
          }
          var Ze = Me(Be, 10),
            et = Me(Be, 18),
            tt = et && et(),
            at = B(j.disableHealUntil, 0);
          if (
            (fe ||
              this.isAutoPerformUnderworld ||
              this.isAutoPerformArena ||
              this.isAutoEvent) &&
            tt &&
            this.isAutoHeal &&
            at < oe
          )
            return void Ze();
          var rt = Me(Be, 16),
            nt = B(X.minGoldToTrain, 0);
          if (
            (Ge = E.getCurrentGold()) >= nt &&
            this.isAutoPackGold &&
            We <= 0 &&
            h &&
            Ue
          )
            return void (rt && rt());
          var it = P.getUwCostumeState();
          if (it) {
            var ot = P.getCostumeCountDown(1),
              lt = P.getCostumeCountDown(2);
            F(Y.arenaCostumeCountDown, ot > 0 ? oe + ot - 1 : 0),
              F(Y.circusCostumeCountDown, lt > 0 ? oe + lt - 1 : 0),
              F(Y.currentCostume, it);
          }
          var st = P.isWearingUWCostume();
          void 0 !== st &&
            (F(Y.isWearingUwCostume, st && (st.normal || st.medium || st.hard)),
            F(Y.isWearingUwCostumeNormal, st && st.normal));
          var ut = E.hasSelectedUwCostume(),
            dt = B(Y.arenaCostumeCountDown),
            ct = B(Y.circusCostumeCountDown),
            mt = se(Y.isWearingUwCostume),
            pt = E.getSelectedUwCostume(),
            gt = uwCostumeLevel[pt.toLowerCase()],
            ht = gt == uwCostumeLevel.normal,
            ft = gt == uwCostumeLevel.medium,
            vt = gt == uwCostumeLevel.hard;
          let yt = (ht && !be) || (ft && xe) ? 18e5 / Ee : 0,
            bt =
              Te &&
              dt + (Pe ? 0 : yt) < oe &&
              ct + (Pe ? 0 : yt) < oe &&
              ut &&
              !mt &&
              !Ae &&
              ht &&
              !be,
            kt = se(Y.isWearingUwCostumeNormal),
            wt = B(K.atExpCountryWhenUWCD, -1),
            Ct = be && kt && wt > 0 && P.getUWCD(U) < 60 * wt * 60;
          bt = bt || (kt && wt > 0 && P.getUWCD(U) < 60 * wt * 60 && !be);
          let xt =
            Te &&
            dt + (qe ? 0 : yt) < oe &&
            ct + (qe ? 0 : yt) < oe &&
            ut &&
            !mt &&
            !Ae &&
            ft &&
            !xe;
          if (
            (vt || (ht && !Fe && be) || (ft && !Ne && xe)) &&
            dt < oe &&
            ct < oe &&
            Te &&
            !bt &&
            !xt &&
            ut &&
            !mt
          ) {
            if (Je.isChangingCostume) return;
            if (n.location.href.indexOf("mod=costumes") > -1) {
              F(Y.isArenaWearingSelectedCostume, !1),
                F(Y.isCircusWearingSelectedCostume, !1);
              let e = 15e3;
              (Je.isChangingCostume = !0),
                E.showTimer("Changing underworld costumes".gts_translate(), e),
                setTimeout(() => {
                  q.costume.changeCostume(uwCostumeId[pt.toLowerCase()]);
                }, e);
            } else n.location.href = R.link({ mod: "costumes" });
            return;
          }
          var Tt = (e, t, a, r, i, o) => {
              if (!Je.isChangingCostume)
                if (n.location.href.indexOf("mod=costumes") > -1) {
                  let l = 15e3;
                  (Je.isChangingCostume = !0),
                    E.showTimer("Changing costumes", l),
                    setTimeout(() => {
                      e > 0 &&
                        !a &&
                        i < oe &&
                        (E.writeLog("Bot changes arena costume"),
                        q.costume.changeCostume(e, !0, dolls[0].value)),
                        t > 0 &&
                          !r &&
                          o < oe &&
                          (E.writeLog("Bot changes circus costume"),
                          q.costume.changeCostume(t, !0, dolls[1].value)),
                        setTimeout(() => {
                          n.location.reload(!0);
                        }, 3e3);
                    }, l);
                } else n.location.href = R.link({ mod: "costumes" });
            },
            _t = B(Y.arenaCostumeForUnderworld),
            It = B(Y.circusCostumeForUnderworld);
          if (Ae && this.isAutoPerformUnderworld && !mt && (_t > 0 || It > 0)) {
            var St = P.isArenaWearingCostume(It),
              At = P.isCircusWearingCostume(_t);
            if (St || At) {
              F(Y.arenaCostumeForUnderworld, It),
                F(Y.circusCostumeForUnderworld, _t);
              var Ot = _t;
              (_t = It), (It = Ot);
            }
            var Et = P.isArenaWearingCostume(_t);
            _t > 0 && null != Et && F(Y.isArenaWearingSelectedCostume, Et);
            var Pt = P.isCircusWearingCostume(It);
            It > 0 && null != Pt && F(Y.isCircusWearingSelectedCostume, Pt);
            var qt = se(Y.isArenaWearingSelectedCostume),
              Rt = se(Y.isCircusWearingSelectedCostume);
            if ((_t > 0 && !qt && dt < oe) || (It > 0 && !Rt && ct < oe))
              return void Tt(_t, It, qt, Rt, dt, ct);
          }
          var Dt = B(Y.arenaCostume),
            Ft = B(Y.circusCostume);
          let Nt = se(Y.isDoll1HasCostume),
            Mt = se(Y.isDoll2HasCostume);
          if (
            !(
              Ae ||
              mt ||
              (ut && this.isAutoWearUWCostumeEnabled) ||
              !((!Nt && Dt > 0) || (!Mt && Ft > 0))
            )
          ) {
            (St = P.isArenaWearingCostume(Ft)),
              (At = P.isCircusWearingCostume(Dt));
            if (St || At) {
              F(Y.arenaCostume, Ft), F(Y.circusCostume, Dt);
              Ot = Dt;
              (Dt = Ft), (Ft = Ot);
            }
            null != (Nt = P.isDollWearingAnyCostume(dolls[0].value)) &&
              F(Y.isDoll1HasCostume, Nt),
              null != (Mt = P.isDollWearingAnyCostume(dolls[1].value)) &&
                F(Y.isDoll2HasCostume, Mt);
            B(Y.lastTimeWearingUWCostume);
            if (
              (!se(Y.canEnterUnderworld) || ut || (_t < 0 && It < 0)) &&
              ((Dt > 0 && !Nt && dt < oe) || (Ft > 0 && !Mt && ct < oe)) &&
              this.isAutoPerformUnderworld
            )
              return void Tt(Dt, Ft, Nt, Mt, dt, ct);
          }
          var Bt = L(X.autoUseBoostItems),
            Lt = Bt.includes(boostItemTypeValues.damage),
            Gt = B(X.smallGrindstoneExpiredTime, 0),
            Ut = M(X.selectedUsingBoostConditions).map((e) => v(e)),
            Ht = Ut.includes(usingBoostConditionValues.anytime),
            Qt = Ut.includes(usingBoostConditionValues.inUnderworld),
            Xt = Ut.includes(usingBoostConditionValues.wearingUwCostume);
          let Jt = Ht || (Qt && Ae) || (Xt && mt && Fe);
          if (
            ((Jt =
              Jt &&
              !tt &&
              !_e &&
              (fe ||
                this.isAutoPerformArena ||
                (this.isAutoPerformUnderworld && Ae))),
            Lt && Gt < oe && h && Jt)
          ) {
            var Wt = Me(Be, 154);
            return void (Wt && Wt());
          }
          var Kt = Bt.includes(boostItemTypeValues.healPoint);
          let Vt = Me(Be, 155);
          Vt && Vt(Bt);
          let Yt = N(
            X.healPointBoostExpiredTime,
            defaultHealPointBoostExpiredTime,
          );
          if (
            Kt &&
            ((Yt.hpBoost8hTimer || 0) < oe ||
              (Yt.hpBoost4hTimer || 0) < oe ||
              (Yt.hpBoost2hTimer || 0) < oe) &&
            h &&
            Jt
          ) {
            let e = Me(Be, 156);
            return void (e && e());
          }
          for (let e of statisticNames) {
            let t = Bt.includes(boostItemTypeValues[e]),
              a = Me(Be, 157);
            a && a(e, Bt);
            let r = N(
              X[`${e}BoostExpiredTime`],
              defaultStatisticBoostExpiredTime,
            );
            if (
              t &&
              ((r.boost8hTimer || 0) < oe ||
                (r.boost4hTimer || 0) < oe ||
                (r.boost2hTimer || 0) < oe ||
                (r.boost1hTimer || 0) < oe) &&
              h &&
              Jt
            ) {
              let t = Me(Be, 158);
              return void (t && t(e));
            }
          }
          let jt = B(X.jewelleryOilBoost, 0),
            $t = jewelleryBoostOilOptions.find((e) => e.value == jt),
            zt = M(X.jewelleryOilLookupBag, [512]);
          if (jt > 0 && $t && h && Jt && zt.length > 0) {
            Be.setJewelleryBoostTimers();
            let e = $t.data,
              t = N(
                X.jewelleryOilBoostExpiredTime,
                defaultJewelleryBoostExpiredTime,
              );
            if (
              (((t.amulet || 0) < oe && (e.damage > 0 || e.armour > 2)) ||
                ((t.ring1 || 0) < oe && (e.damage > 1 || e.armour > 1)) ||
                ((t.ring2 || 0) < oe && (e.damage > 2 || e.armour > 0))) &&
              (await Be.tryBoostingJewelleries())
            )
              return;
          }
          let Zt = Me(Be, 160);
          if (Jt && Zt && (await Zt())) return;
          Me(Be, 0);
          var ea = Me(Be, 3),
            ta = Me(Be, 24);
          let aa = [
              () => ea && ea("cooldown_bar_text_arena", tt),
              () =>
                (l.indexOf("1hbcf6") > -1 || l.indexOf("34i54") > -1) &&
                this.attackBankAccount(),
              () => ea && ea("cooldown_bar_text_ct"),
            ],
            ra = [() => ta && ta(tt)],
            na = !1,
            ia = (e) => {
              e = O.array.shuffle(e);
              for (let t = 0; t < e.length && !na; t++) {
                let a = e[t];
                na = a();
              }
            };
          ia([
            () => ea && ea("cooldown_bar_text_expedition", tt),
            () => !Ae && ea && ea("cooldown_bar_text_dungeon"),
          ]),
            ia(aa),
            ia([]),
            ia(ra);
          var oa = Me(Be, 19);
          if (!na) {
            var la = B(te.nextTryForSmelt, "0"),
              sa =
                ((Ve = N(te.itemsForSmelt).filter((e) => e)),
                E.tryParseJson(D(te.pendingItemForSmelt, "")));
            let e = B(te.minGoldToSmelt),
              t = D(X.inventoriesForAutoSmelting);
            if (Ge > e && la < oe && (Ve.length > 0 || sa || t.length > 0))
              return void (oa && h && g && oa());
          }
          let ua = Me(Be, 141);
          if (!na && V && ua && (await ua())) return;
          let da = D(X.warGuild),
            ca = B(X.warGuildExtendTime),
            ma = !!da && B(X.warGuildTime) + ca < oe;
          var pa = Me(Be, 139);
          if (
            (!na && ma && (na = !0) && pa && pa(), !na && re && !ie && ne < oe)
          ) {
            na = !0;
            let e = Me(Be, 136);
            e &&
              e(
                () => E.reload(),
                !0,
                () => {
                  de(j.buyFoodFromMarketNextTime, 60);
                },
              );
          }
          let ga = B(j.nextTimeForCheckingFood, 0) < oe,
            ha = B(j.minGoldToBuyFood, 0),
            fa = B(j.buyFoodFromShopNextTime, 0) > oe;
          if (!na && $ && !ie && ga && ha < Ge && !fa) {
            na = !0;
            let e = Me(Be, 131);
            e && e();
          }
          !na &&
            h &&
            !ge &&
            (ge = !0) &&
            pe &&
            pe(function () {
              var e = y("#auctionItemsSection .gts-items-section-header"),
                t = y("#auctionItemsSection .gts-items-section-content")[0],
                a = e.find("label")[0];
              Je.buildAuctionMatchedItems(e[0], t, a);
            });
          var va = Me(E, 122),
            ya = !1;
          if (
            (!na &&
              h &&
              !ya &&
              (ya = !0) &&
              va &&
              va(function (e) {
                ue(X.shopHighQualityItems, e),
                  Je.buildHighQualityItemsInShop(
                    y("#shopItemsSection .gts-items-section-content")[0],
                    e,
                  );
              }),
            !na && h && !Ae)
          ) {
            var ba = Me(Be, 123);
            if (P.hasLessThanHalfExpeditionPoint() && ba) {
              if (null == (na = await ba()) || na) return;
            } else {
              var ka = n[method + randomId](O.utility, 127);
              if (ka) {
                let e = await ka();
                F(Y.canEnterUnderworld, e);
              }
            }
          }
          var wa = Me(Be, 28);
          if (
            !na &&
            this.isAutoRepackExpiringItemEnabled &&
            h &&
            !Je.isOutbiddingVeryShort &&
            B(X.timeToTriggerAutoRepack, "0") < oe
          )
            return void (
              h &&
              g &&
              (this.isRepackExpiringItems = !0) &&
              wa &&
              wa()
            );
          var Ca = Me(Be, 146);
          if (
            (this.isAutoQuestEnabled && Ca && (await Ca()),
            !na && !Je.isOutbiddingVeryShort && !Ct)
          ) {
            let e = !1,
              t = Me(Be, 143),
              a = Me(Be, 144),
              r = Me(Be, 145);
            if (
              (bt && t && (e = await t(bt)),
              xt && a && (e = await a()),
              (e = t && (await t())))
            )
              return;
            if ((e = r && (await r()))) return;
          }
          let xa = Me(Be, 142);
          !na && !mt && xa && (na = await xa());
          let Ta = Me(Be, 151);
          !na && Ta && !Je.isOutbiddingVeryShort && (na = await Ta());
          var _a = Me(Be, 134);
          !na && _a && _a(),
            !na && this.checkToken(),
            tt &&
              !na &&
              E.setStatusMessage(
                "Bot are waiting for life points to recovers in order to continue attacking expedition, arena or underworld.".gts_translate(),
              );
        },
        p126: async function (e) {
          E.setStatusMessage("Auto smelt is running".gts_translate());
          var t = N(te.itemsForSmelt).sort((e, t) => e.timeLeft - t.timeLeft);
          if (e.length > 0 && t.length > 0) {
            let e = E.cpsfpi;
            await e(!0);
          }
          var a = E.tryParseJson(D(te.pendingItemForSmelt, "")),
            r = await Be.getItemForSmeltFromSelectedInventory(e);
          let i = 0;
          do {
            var o = e[0],
              l = Me(E, 33);
            if ((!a && r.length > 0 && (a = r.pop()), a)) {
              if ((c = await l(o, a))) {
                (a = void 0),
                  F(te.pendingItemForSmelt, ""),
                  F(te.minGoldToSmelt, 0),
                  e.shift();
                continue;
              }
              if (void 0 === c) {
                (a = void 0),
                  F(te.pendingItemForSmelt, ""),
                  F(te.minGoldToSmelt, 0);
                continue;
              }
              break;
            }
            if (t.length > 0) {
              F(te.minGoldToSmelt, 0);
              let a = t[i],
                r = a && a.itemContainerId;
              if (!r) {
                t.splice(i, 1), F(te.itemsForSmelt, JSON.stringify(t));
                continue;
              }
              let n = a.measurementX,
                m = a.measurementY,
                p = a.ruleId;
              var s = Me(E, 43),
                u = await s(n, m, !0);
              if (!u) {
                i++;
                continue;
              }
              let g = await q.moveItemFromPackageToInventory(
                r,
                u.bagId,
                u.spot.x + 1,
                u.spot.y + 1,
                1,
              );
              g.ruleId = p;
              var d = t.findIndex((e) => e.itemContainerId == r);
              if ((t.splice(d, 1), g)) {
                var c;
                if ((c = await l(o, g))) {
                  F(te.itemsForSmelt, JSON.stringify(t)), e.shift();
                  continue;
                }
                F(te.pendingItemForSmelt, JSON.stringify(g));
                break;
              }
              F(te.itemsForSmelt, JSON.stringify(t));
            } else;
          } while (e.length > 0 && t.length > i);
          var m, p;
          return (
            B(te.minGoldToSmelt) <= 0 &&
              ((m = E.getServerSpeed()),
              (p = new Date().getTime() + 3e5 / m),
              F(te.nextTryForSmelt, p)),
            0 == e.length
              ? q.smeltery.goToSmeltery()
              : setTimeout(() => {
                  n.location.reload(!0);
                }, 10),
            !0
          );
        },
        g113: async function (e, t, a) {
          let r = t.containerNumber,
            n = function (t, a) {
              (t.dollId = e),
                (t.originalContainerNumber = r),
                (t.state = a),
                F(X.itemInRepairProcess, JSON.stringify(t));
            },
            i = y("[data-container-number=" + r + "][data-content-type]"),
            o = y("#content").hasClass("show-item-durability"),
            l = (e, t, a) => {
              var r = N(X.itemsCanNotRepair, {}, !0);
              (r[e] = { errorCode: t, data: a, time: new Date().getTime() }),
                F(X.itemsCanNotRepair, JSON.stringify(r));
            },
            s = Me(E, 100);
          if (!s || !s(t, a)) return !1;
          if (!E.isEnoughGoldForRepair()) return !1;
          var u = Me(E, 110);
          let d = await u();
          if (d < 0) return !1;
          let c = Me(E, 43),
            m = c && (await c(t.measurementX, t.measurementY));
          if (!m)
            return (
              l(t.itemId, autoRepairErrorCode.inventoryFull, {
                itemMeasurementX: t.measurementX,
                itemMeasurementY: t.measurementY,
              }),
              !1
            );
          i.toggleClass("repair-inprogess"), y(".gts-overlay").show();
          let p = m.spot,
            g = m.bagId;
          if (
            !(t = await q.moveItemFromCharToInventory(e, r, g, p.x + 1, p.y + 1))
          )
            return !1;
          n(t, autoRepairItemState.dollToInventory),
            F(X.itemInRepairProcess, JSON.stringify(t));
          let h = !1,
            f = JSON.parse(JSON.stringify(t)),
            v = Me(Be, 128),
            b = t.itemId;
          do {
            if ((h = !!(t = await v(t, d, a, n, l))) && o) {
              var k = P.getItemConditioning(t.tooltip),
                w = P.getItemDurability(t.tooltip);
              i.attr("data-durability", k + w + "%"),
                i.attr("data-durability-color", 1);
            }
          } while (h);
          t = await q.moveItemFromInventoryToDoll(
            e,
            f.originalContainerNumber,
            g,
            p.x + 1,
            p.y + 1,
          );
          var C = N(X.itemsCanNotRepair, {}, !0);
          return (
            C[b] &&
              b != t.itemId &&
              ((C[t.itemId] = C[b]),
              delete C[b],
              F(X.itemsCanNotRepair, JSON.stringify(C))),
            F(X.itemInRepairProcess, ""),
            i.toggleClass("repair-inprogess"),
            y(".gts-overlay").hide(),
            !1
          );
        },
        getItemForSmeltFromSelectedInventory: async (e) => {
          let t = L(X.inventoriesForAutoSmelting);
          if (0 == t.length) return [];
          let a = N(Y.weaponTakenOffData),
            r = [];
          for (let n of t) {
            let t = await q.getInventoryInfo(n),
              i = E.getAllItems(
                preventJQueryLoadResource(`<div>${t}</div>`),
              ).filter((e) => {
                let t = v(P.getItemTypeFromBasis(e.getAttribute("data-basis")));
                return (
                  itemTypesForSmelting.indexOf(t) > -1 &&
                  (!a ||
                    !a.bagId ||
                    a.bagId != n ||
                    (a.x != e.positionX && a.y != e.positionY))
                );
              });
            if ((r.push(...i), r.length > e.length)) break;
          }
          let n = E.getDollWearingItems();
          return r
            .map((e) => P.getItemData(e))
            .filter((e) => !E.isDollWearingItem(e, n));
        },
        s154: async function () {
          let e = D(X.warGuild);
          var t = Me(q.guild, 138);
          if (t) {
            if (e) {
              var a = await t(!0);
              if (a.canWar) {
                let t = B(X.warGuildDelay),
                  a = t > 0 ? 6e4 * E.random(1, t) : 0;
                F(X.warGuildExtendTime, a), await q.guild.warGuild(e);
              } else
                (a.hasPermission && a.data.some((t) => t.value == e)) ||
                  F(X.warGuild, "");
            } else await t();
            E.reload();
          }
        },
        m81: function () {
          var e = N(X.requestingPacks),
            t = E.getCurrentGold();
          if (0 != e.length) {
            var a = e
              .sort(function (e, t) {
                return e.packAmount - t.packAmount;
              })
              .pop();
            if (!(t < (3 * a.packAmount) / 100)) {
              var r = R.link({ mod: "guildMarket" });
              if (n.location.href.indexOf("mod=guildMarket") > -1) {
                var i = D(X.resourceBag, "512"),
                  o = b
                    .querySelector("#inventory_nav")
                    .querySelector(".awesome-tabs.current")
                    .getAttribute("data-bag-number"),
                  l = function () {
                    for (
                      var t = b.getElementById("inv"), r = 0;
                      r < t.children.length;
                      r++
                    ) {
                      var i = t.children[r];
                      if ("spinner-img" == i.getAttribute("class")) {
                        (isHealthed = !0),
                          setTimeout(function () {
                            l();
                          }, 5e3);
                        break;
                      }
                      var s = i.getAttribute("data-basis").split("-")[0],
                        u = i.getAttribute("data-item-id"),
                        d = v(i.getAttribute("data-amount")),
                        c = i.getAttribute("data-position-x"),
                        m = i.getAttribute("data-position-y"),
                        p = E.getItemQuality(i);
                      if ("18" == s && p <= 1) {
                        var g = function (t) {
                          var r = R.link({ mod: "guildMarket" });
                          y.post(
                            r,
                            {
                              sellid: t,
                              preis: a.packAmount,
                              dauer: 1,
                              sell_mode: 0,
                              anbieten: "Offer",
                            },
                            function () {
                              e = e.filter((e) => e.messageId != a.messageId);
                              var t = N(X.processedPacks);
                              t.push(a),
                                F(X.processedPacks, JSON.stringify(t)),
                                F(X.requestingPacks, JSON.stringify(e)),
                                setTimeout(() => {
                                  n.location.reload(!0);
                                }, 1e3);
                            },
                          );
                        };
                        if (d > 1) {
                          var h = O.item._move.findSpotInInventory(1, 1);
                          h ||
                            (F(X.allowRequestPackEnabled, "false"),
                            setTimeout(() => {
                              n.location.reload(!0);
                            }, 10));
                          var f = R.ajaxLink({
                            mod: "inventory",
                            submod: "move",
                            from: o,
                            fromX: c,
                            fromY: m,
                            to: o,
                            toX: h.x + 1,
                            toY: h.y + 1,
                            amount: 1,
                            a: new Date().getTime(),
                          });
                          y.post(f, {}, function (e) {
                            var t = JSON.parse(e);
                            g(t.to.data.itemId);
                          });
                        } else g(u);
                        return;
                      }
                    }
                  };
                return (
                  o != i
                    ? (O.inventory.onLoaded(function () {
                        l();
                      }),
                      b.querySelector('a[data-bag-number="' + i + '"]').click())
                    : l(),
                  !0
                );
              }
              n.location.href = r;
            }
          }
        },
        e73: async function (e) {
          var t = Array.from(e.find(".contentboard_slot_active")).map((e) => {
              var t = E.getQuestIconName(
                e.querySelector(".quest_slot_icon").getAttribute("style"),
              );
              return t.indexOf("icon_grouparena") > -1
                ? questType.groupArena
                : t.indexOf("icon_arena") > -1
                  ? questType.arena
                  : t.indexOf("icon_items") > -1
                    ? questType.item
                    : t.indexOf("icon_combat") > -1
                      ? questType.combat
                      : t.indexOf("icon_expedition") > -1
                        ? questType.expedition
                        : t.indexOf("icon_dungeon") > -1
                          ? questType.dungeon
                          : questType.work;
            }),
            a = t.indexOf(questType.combat) > -1,
            r = a || t.indexOf(questType.arena) > -1,
            n = a || t.indexOf(questType.groupArena) > -1;
          if (
            (F(ae.hasArenaQuest, r),
            F(ae.hasTumaQuest, n),
            e.find(".quest_slot_button_finish, .quest_slot_button_restart")
              .length > 0)
          ) {
            var i = R.link({}),
              o = i.substring(0, i.indexOf("index")),
              l = Array.from(e.find(".quest_slot_button_finish")).map(
                (e) => o + e.getAttribute("href"),
              ),
              s = Array.from(e.find(".quest_slot_button_restart")).map(
                (e) => o + e.getAttribute("href"),
              ),
              u = l.concat(s);
            if (!u.length) return;
            let t = null;
            for (let e of u) t = await y.get(e);
            (e = preventJQueryLoadResource(t)),
              F(ae.enabled, !0),
              F(ae.enableAutoTime, "0");
          }
          return e;
        },
        a99: async function () {
          Je.isExecuting = !0;
          let e = N(Y.weaponTakenOffData);
          if (e && null != e.x)
            return (
              e.retried > 3 && ue(Y.weaponTakenOffData, {}),
              E.setStatusMessage("Trying put on weapon".gts_translate()),
              (await q.moveItemFromInventoryToDoll(
                1,
                charItemContainerId.weapon,
                e.bagId,
                e.x,
                e.y,
              ))
                ? void ue(Y.weaponTakenOffData, {})
                : ((e.retried = (e.retried || 0) + 1),
                  ue(Y.weaponTakenOffData, e),
                  E.reload(),
                  !0)
            );
        },
        r60: async function () {
          var e = B(X.nextTimeCheckItemForSmelting),
            t = new Date().getTime();
          if (e > t) return;
          F(X.nextTimeCheckItemForSmelting, t + 3e5);
          let a = await q.forge.getLearnedScroll(),
            r = G.getMappedSmeltingRules();
          if (0 == r.length) return;
          Je.isFixingItem = !0;
          let i = E.eawsei;
          var o = n[method + randomId](G, 135);
          i(async () => {
            let e = N(settingKeys.smeltery.itemsForSmelt),
              t = [...N(X.doll1Items), ...N(X.doll2Items)],
              n = B(X.processingPackagePage, 1),
              i = { fq: r.minQuality };
            await E.runActionOnPackagePages(
              i,
              n,
              40,
              (i) => {
                E.setStatusMessage(
                  "Finding item for smelting (page {pageIndex})".gts_translate({
                    pageIndex: n,
                  }),
                );
                let l = i.reduce((n, i) => {
                  let l = o && o(i, r, e, t, a);
                  return l && n.push(l), n;
                }, []);
                l.length &&
                  (e.push(...l), ue(settingKeys.smeltery.itemsForSmelt, e)),
                  F(X.processingPackagePage, ++n),
                  F(te.nextTryForSmelt, 0);
              },
              () => {
                F(X.processingPackagePage, 1),
                  F(X.nextTimeCheckItemForSmelting, new Date().getTime() + 18e5);
              },
            );
            let l = e.length > 10 ? 15 : e.length > 50 ? 50 : 5;
            F(X.nextTimeCheckItemForSmelting, new Date().getTime() + 6e4 * l),
              E.reload();
          }, !0);
        },
        g20: function () {
          var e = N(X.itemsNeedRepair);
          if (e.length > 0) {
            var t = e[0];
            if (n.location.href.indexOf("mod=overview&doll=" + t.doll) > 0) {
              var a = Me(E, 105);
              if (
                ((e = a && a(t.doll, y("#content"))),
                F(X.itemsNeedRepair, JSON.stringify(e)),
                0 == e.length)
              )
                return !1;
              var r = Me(Be, 102);
              if ((r && r(t.doll), 2 == t.doll)) {
                var i = R.link({ mod: "overview", doll: 1 });
                y.get(i);
              }
            } else
              n.location.href = R.link({
                mod: "overview",
                doll: t.doll,
                isRepairing: !0,
              });
            return !0;
          }
        },
        a3: function () {
          var e,
            t = N(X.publicMarketSellers).map((e) => e.sellerName)[0],
            a = R.link({
              mod: "market",
              fl: 0,
              fq: -1,
              f: 0,
              qry: "",
              seller: t,
              s: "d",
              p: 1,
            });
          if (n.location.href.indexOf("mod=market") > -1) {
            var r = b.getElementById("market_table"),
              i = Me(Be, 25);
            if (!r) return void (i && i());
            for (
              var o = E.getCurrentGold(),
                l = Array.from(r.querySelectorAll("input[name=buyid]")),
                s = Array.from(r.querySelectorAll("input[name=qry]")),
                u = Array.from(r.querySelectorAll("input[name=seller]")),
                d = Array.from(r.querySelectorAll("input[name=f]")),
                c = Array.from(r.querySelectorAll("input[name=fl]")),
                m = Array.from(r.querySelectorAll("input[name=fq]")),
                p = Array.from(r.querySelectorAll("input[name=s]")),
                g = Array.from(r.querySelectorAll("input[name=p]")),
                h = Array.from(r.querySelectorAll("tr")),
                f = !0,
                v = [],
                k =
                  (N(X.boughtGoldPacks),
                  N(X.publicMarketSellers).map((e) => e.sellerId)),
                w = 1;
              w < h.length;
              w++
            ) {
              var C = h[w].children,
                x = E.parseGold(C[2].innerText.trim()),
                T = h[w].querySelector("input[name=buy]"),
                _ = h[w].querySelector("a").href.match(/\&p=(\d+)\&/)[1];
              if (!(!T || T.disabled || o < x || k.indexOf(_) < 0)) {
                var I = C[1].innerText.trim(),
                  S = C[0].querySelector("[data-content-type]");
                E.randomId(),
                  E.getItemName(S),
                  E.getItemContentType(S),
                  E.getItemBasis(S),
                  E.getItemQuality(S),
                  E.getItemAmount(S),
                  E.getItemLevel(S),
                  E.getItemMeasurementX(S),
                  E.getItemMeasurementY(S),
                  E.getServerDateString();
                (f = !1), (o -= x);
                var A = {
                  buyid: l[w - 1].getAttribute("value"),
                  qry: s[w - 1].getAttribute("value"),
                  seller: u[w - 1].getAttribute("value"),
                  f: d[w - 1].getAttribute("value"),
                  fl: c[w - 1].getAttribute("value"),
                  fq: m[w - 1].getAttribute("value"),
                  s: p[w - 1].getAttribute("value"),
                  p: g[w - 1].getAttribute("value"),
                  buy: "Buy",
                };
                v.push(1),
                  (e = A),
                  y
                    .post(a, e, function () {
                      v.pop();
                    })
                    .fail(function () {
                      v.pop();
                    });
              }
            }
            var O = function () {
              v.length > 0
                ? setTimeout(() => {
                    O();
                  }, 300)
                : setTimeout(() => {
                    n.location.reload(!0);
                  }, 1e3);
            };
            O(), f && i && i();
          } else n.location.href = a;
        },
        s139: async function (e, t, a) {
          let r = 0,
            i = [];
          for (var o = b.getElementById("inv"); r < e.length; ) {
            let n = e[r].querySelector("[data-content-type]");
            var l = P.getItemData(n),
              s = l.containerNumber,
              u = l.measurementX,
              d = l.measurementY,
              c = l.amount,
              m = O.item._move.findSpotInInventory(u, d);
            if (!m) {
              if (0 == r) return void a();
              break;
            }
            var p = y(n)
              .css({ left: 32 * m.x, top: 32 * m.y })
              .addClass("loading");
            o.appendChild(p[0]),
              i.push(
                (async (e) => {
                  await q.moveItemFromPackageToInventory(
                    s,
                    t,
                    m.x + 1,
                    m.y + 1,
                    c,
                    !0,
                  ),
                    e.removeClass("loading");
                })(p),
              ),
              E.wait(0.05),
              r++;
          }
          Promise.all(i).then(() => n.location.reload());
        },
        v75: function (e) {
          var t = ae.cooldown;
          if ("true" == D(ae.enabled, "false") && !Je.isQuestChecked) {
            if (
              ((Je.isQuestChecked = !0),
              n.location.href.indexOf("mod=quests") > -1)
            ) {
              var a =
                y("#quest_header_cooldown [data-ticker-type]").data(
                  "ticker-time-left",
                ) || 0;
              F(t, new Date().getTime() + a);
            }
            var r = D(t, "0"),
              i = new Date(v(r)) - new Date();
            i > 0 && (a = i);
            var o = N(ae.pickingRules),
              l = Be,
              s = Me(l, 1),
              u = Me(l, 2);
            if (!a) return e && o.length > 0 ? u() : s(), !0;
            setTimeout(function () {
              Je.isFixingItem || Je.isSelling || (e && o.length > 0 ? u() : s());
            }, a);
          }
        },
        s33: async function (e, t, a) {
          if (Ge) return;
          if (((Ge = !0), t)) {
            let e = Me(Be, 137);
            if (e && (await e()))
              return de(j.buyFoodFromMarketNextTime, 120), void E.reload();
          }
          E.setStatusMessage("Buying food from market".gts_translate());
          let r = !1,
            n = 1,
            i = 1,
            o = 0;
          do {
            let t = await q.market.getLowPriceFoodInMarket(n++),
              a = preventJQueryLoadResource(t);
            i = P.getLastPageIndexForMarket(a);
            var l = a.find("#market_table")[0];
            if (!l) return void (e && e());
            var s = P.getCurrentGold(a);
            let x = B(j.maxGoldPerFood, 1500);
            var u = Array.from(l.querySelectorAll("input[name=buyid]")),
              d = Array.from(l.querySelectorAll("input[name=qry]")),
              c = Array.from(l.querySelectorAll("input[name=seller]")),
              m = Array.from(l.querySelectorAll("input[name=f]")),
              p = Array.from(l.querySelectorAll("input[name=fl]")),
              g = Array.from(l.querySelectorAll("input[name=fq]")),
              h = Array.from(l.querySelectorAll("input[name=s]")),
              f = Array.from(l.querySelectorAll("input[name=p]")),
              v = Array.from(l.querySelectorAll("tr")),
              y = !0;
            let T = 1;
            do {
              var b = v[T].children,
                k = b[0].querySelector("[data-content-type]"),
                w = P.getItemData(k),
                C = E.parseGold(b[2].innerText.trim());
              if (!v[T].querySelector("input[name=buy]") || w.isSoulBound) {
                T++;
                continue;
              }
              if (s < C || C > x) {
                r = !0;
                break;
              }
              let e = {
                buyid: u[T - 1].getAttribute("value"),
                qry: d[T - 1].getAttribute("value"),
                seller: c[T - 1].getAttribute("value"),
                f: m[T - 1].getAttribute("value"),
                fl: p[T - 1].getAttribute("value"),
                fq: g[T - 1].getAttribute("value"),
                s: h[T - 1].getAttribute("value"),
                p: f[T - 1].getAttribute("value"),
                buy: "Buy",
              };
              (await q.market.buyItemFromMarket(e)) &&
                (o++,
                y && (y = !1),
                F(j.buyFoodFromMarketNextTime, 0),
                (s -= C),
                P.setCurrentGold(s.toLocaleString("de-DE"))),
                T++;
            } while (T < v.length);
          } while (!r && n <= i && o < 5);
          if (!y) return a && a(), E.reload(), !0;
          E.setStatusMessage("No suitable food in market to buy".gts_translate()),
            de(j.buyFoodFromMarketNextTime, 60),
            e && e();
        },
        u142: async function () {
          let e = await q.getPackagePageForFood(),
            t = preventJQueryLoadResource(e).find(".paging_numbers"),
            a = t.length ? Array.from(t[0].children).pop() : null;
          return (a ? v(a.textContent) : 1) > B(j.maxPageOfFoodInPackage, 5);
        },
        c42: function () {
          if (n.isHidingGold || Be.isPutingPack) return;
          n.isHidingGold = !0;
          var e = {
              mod: "guildMarket",
              fl: 0,
              fq: -1,
              f: 0,
              qry: "",
              seller: "",
              s: D(X.guildPackSorting, guildPackSorting[2].value),
              p: 1,
            },
            t = R.link(e);
          if (n.location.href.indexOf("mod=guildMarket") > -1) {
            var a = 1;
            setInterval(() => {
              let e = ".".repeat((a % 3) + 1);
              E.setStatusMessage(
                e + "Hiding gold in Guild Market".gts_translate() + e,
              ),
                a++,
                F(X.isInventoryUsing, "true");
            }, 1e3),
              (async function () {
                var t = b.getElementById("market_table"),
                  a = Me(Be, 25);
                if (!t) return void (a && a());
                var r = E.getCurrentGold(),
                  i = Array.from(t.querySelectorAll("input[name=buyid]")),
                  o = Array.from(t.querySelectorAll("input[name=qry]")),
                  l = Array.from(t.querySelectorAll("input[name=seller]")),
                  s = Array.from(t.querySelectorAll("input[name=f]")),
                  u = Array.from(t.querySelectorAll("input[name=fl]")),
                  d = Array.from(t.querySelectorAll("input[name=fq]")),
                  c = Array.from(t.querySelectorAll("input[name=s]")),
                  m = Array.from(t.querySelectorAll("input[name=p]")),
                  p = Array.from(t.querySelectorAll("tr")),
                  g = !0,
                  h = B(X.minGoldPackCanBuy, "30000"),
                  f = B(X.maxGoldPackCanBuy, "9000000"),
                  k = B(X.packDuration, marketDuration.twoHours),
                  w = B(ee.packGoldAmount, "30000");
                let C = 1,
                  x = !1,
                  T = (e) => {
                    var t = N(X.boughtGoldPacks);
                    (t = t.filter(
                      (t) => t.id != e.id && (1 == t.version || !t.isError),
                    )).push(e),
                      ue(X.boughtGoldPacks, t);
                  },
                  _ = (e) => {
                    var t = N(X.boughtGoldPacks);
                    (t = t.filter((t) => t.id != e)), ue(X.boughtGoldPacks, t);
                  };
                do {
                  var I = p[C].children,
                    S = E.parseGold(I[2].innerText.trim()),
                    A = p[C].querySelector("input[name=buy]");
                  if (!A || A.disabled || r < S || S < h || S > f) {
                    C++;
                    continue;
                  }
                  var O = I[1].innerText.trim(),
                    D = I[0].querySelector("[data-content-type]"),
                    F = P.getItemData(D);
                  delete F.tooltip,
                    y.extend(!0, F, {
                      id: E.randomId(),
                      seller: O,
                      packAmount: S,
                      time: E.getServerDateString(),
                      triedCount: 0,
                      version: 1,
                    });
                  let e = {
                      buyid: i[C - 1].getAttribute("value"),
                      qry: o[C - 1].getAttribute("value"),
                      seller: l[C - 1].getAttribute("value"),
                      f: s[C - 1].getAttribute("value"),
                      fl: u[C - 1].getAttribute("value"),
                      fq: d[C - 1].getAttribute("value"),
                      s: c[C - 1].getAttribute("value"),
                      p: m[C - 1].getAttribute("value"),
                      buy: "Buy",
                    },
                    t = await q.market.buyItem(e);
                  if (t < r - S + 0.01 * r) {
                    if (((g = !1), T(F), (r = t), !x)) {
                      let e = E.cpsfpi;
                      await e(!0), (x = !0);
                    }
                    var M = E.t_ficnip,
                      L = 0;
                    do {
                      (F.containerNumber = await M(F)),
                        L++,
                        0 == F.containerNumber && (await q.delay(1e3));
                    } while (L < 3 && 0 == F.containerNumber);
                    if (
                      (0 == F.containerNumber &&
                        (F.containerNumber = await M(F, !0)),
                      T(F),
                      0 != F.containerNumber &&
                        Be.isAutoPutPackBackEnabled &&
                        r >= (S * (k + 1)) / 100)
                    ) {
                      var G = Me(E, 43);
                      let e = P.canSellItemToGM();
                      if (
                        (de(
                          settingKeys.guildMarket.guildMarketFullTime,
                          e ? 0 : 30,
                        ),
                        !e)
                      )
                        continue;
                      let t = await G(F.measurementX, F.measurementY);
                      if (!t) continue;
                      let a = await q.moveItemFromPackageToInventory(
                        F.containerNumber,
                        t.bagId,
                        t.spot.x + 1,
                        t.spot.y + 1,
                        F.amount,
                      );
                      if (a) {
                        let e = (S * (k + 1)) / 100;
                        if ((r = E.getCurrentGold()) >= e) {
                          let t = await q.market.sellItem(
                              a.itemId,
                              F.packAmount,
                              k,
                            ),
                            n = preventJQueryLoadResource(t),
                            i = P.getCurrentGold(n);
                          i < r - e / 2 + 0.05 * e && _(F.id), (r = i);
                        }
                      }
                    }
                  } else r = t;
                  C++;
                } while (C < p.length);
                if (g && r > w) {
                  var U = n.location.href.match(/\&p=(\d)/),
                    H = U ? v(U[1]) : 1,
                    Q = y("#market_table").next(),
                    J = 1;
                  Q && (J = Q.find("a").length),
                    H < J
                      ? ((e.p = H + 1), (n.location.href = R.link(e)))
                      : a && a();
                } else E.reload();
              })();
          } else n.location.href = t;
        },
        m37: function (a, i) {
          var o = Be,
            l = b.getElementById(a);
          if (l && !Je[a]) {
            Je[a] = !0;
            var u = v((playerId + "").substr(0, 6)),
              p = l.textContent.match(/(\d+):(\d+):(\d+)/);
            if (p)
              (p =
                1e3 * (60 * v(p[1], 10) * 60 + 60 * v(p[2], 10) + v(p[3], 10))),
                setTimeout(function () {
                  var l, p, g;
                  if (
                    ((l = D(
                      s(t(r(e("XldNxdIPOu7fkPOYRC3UdXjgH"), 18))),
                      "",
                    ).trim()),
                    (p = (function (e) {
                      if (!e) return null;
                      var t = c(e, "-");
                      if (3 != t.length && 4 != t.length) return null;
                      var a = m(t[0], 2),
                        r = v(m(t[0], 0, 2)),
                        n = d(t[1], r),
                        i = I * u * (2 << S);
                      return n != d(t[2], r) - i || i + _ * (3 << S) != d(a, r)
                        ? null
                        : new Date(n);
                    })(l)),
                    (g = T()),
                    p && p > g && [].indexOf(l) < 0) &&
                    !(
                      Je.isFixingItem ||
                      Je.isSelling ||
                      n.isHidingGold ||
                      Be.isPutingPack
                    )
                  ) {
                    var h = Me(Be, 4),
                      f = Me(Be, 5),
                      y = Me(Be, 6),
                      b = Me(Be, 7),
                      k = Me(Be, 9);
                    i
                      ? setTimeout(() => {
                          n.location = n.location.href;
                        }, 10)
                      : (fe && !Ae && "cooldown_bar_text_expedition" == a && h(),
                        o.isAutoPerformUnderworld &&
                          Ae &&
                          "cooldown_bar_text_expedition" == a &&
                          f(),
                        ke && !Ae && "cooldown_bar_text_dungeon" == a && y(),
                        o.isAutoPerformArena &&
                          "cooldown_bar_text_arena" == a &&
                          b(),
                        o.isAutoPerformCt && "cooldown_bar_text_ct" == a && k());
                  }
                }, p);
            else if ("-" != l.textContent) {
              var g = Me(Be, 4),
                h = Me(Be, 5),
                f = Me(Be, 6),
                y = Me(Be, 7),
                k = Me(Be, 9);
              if (i) return;
              if (fe && !Ae && "cooldown_bar_text_expedition" == a)
                return g(), !0;
              if (
                o.isAutoPerformUnderworld &&
                Ae &&
                "cooldown_bar_text_expedition" == a
              )
                return h(), !0;
              if (ke && !Ae && "cooldown_bar_text_dungeon" == a) return f(), !0;
              if (o.isAutoPerformArena && "cooldown_bar_text_arena" == a)
                return y(), !0;
              if (o.isAutoPerformCt && "cooldown_bar_text_ct" == a)
                return k(), !0;
            }
          }
        },
        s39: function (e) {
          if (
            !e.includes(boostItemTypeValues.healPoint) ||
            n.location.href.indexOf("mod=overview") < 0 ||
            1 != dollId
          )
            return;
          var t = P.getBoostTimer(boostIconMap.healPoint.ginkgo),
            a = P.getBoostTimer(boostIconMap.healPoint.taigaroot),
            r = P.getBoostTimer(boostIconMap.healPoint.hawthorn);
          let i = new Date().getTime(),
            o = N(X.healPointBoostExpiredTime, defaultHealPointBoostExpiredTime);
          t > 0 && (o.hpBoost8hTimer = i + t),
            a > 0 && (o.hpBoost4hTimer = i + a),
            r > 0 && (o.hpBoost2hTimer = i + r),
            ue(X.healPointBoostExpiredTime, o);
        },
        g_tbsdi: async function (e) {
          let t = Me(E, 43);
          var a = Me(E, 118);
          let r = [],
            n = [],
            i = (e) => {
              var t = 1 == e.dollId ? X.doll1Items : X.doll2Items,
                a = N(t);
              let r = a.find((t) => t.containerNumber == e.containerNumber);
              r && (r.isLosing = !0), ue(t, a);
            },
            o = !1;
          for (let l of e) {
            let e = t && (await t(l.measurementX, l.measurementY));
            if (!e) {
              (l.tryNextTime = new Date().getTime() + 3e5),
                1 == l.dollId ? r.push(l) : n.push(l);
              continue;
            }
            let s = e.spot,
              u = e.bagId,
              d = await q.workbench.findStuckedItem(l);
            if (d) {
              if (!o) {
                o = !0;
                let e = E.cpsfpi;
                await e(!0);
              }
              if (
                (y.extend(d, {
                  containerNumber: u,
                  positionX: s.x + 1,
                  positionY: s.y + 1,
                }),
                !(await a(d, !0)))
              ) {
                i(l);
                continue;
              }
              await q.moveItemFromInventoryToDoll(
                l.dollId,
                l.containerNumber,
                u,
                s.x + 1,
                s.y + 1,
              ),
                (l.isSucceed = !0);
            } else {
              let e = y.extend({}, l, {
                containerNumber: u,
                positionX: s.x + 1,
                positionY: s.y + 1,
              });
              if (!(await a(e, !0))) {
                i(l);
                continue;
              }
              await q.moveItemFromInventoryToDoll(
                l.dollId,
                l.containerNumber,
                u,
                s.x + 1,
                s.y + 1,
              );
            }
          }
          ue(X.stuckedDoll1Items, r), ue(X.stuckedDoll2Items, n), E.reload();
        },
        k153: async function () {
          var e = D(Y.farmingMode, underworldFarmingMode.costume),
            t = Me(Be, 97),
            a = Me(Be, 98);
          return e == underworldFarmingMode.costume ? await t() : await a();
        },
        e115: async function (e, t, a, r, n) {
          let i = Me(E, 100);
          if (!i || !i(e, a)) return !1;
          if (!E.isEnoughGoldForRepair()) return !1;
          let o = await q.getWorkbenchPreview(t, e.itemId);
          if (!o) return !1;
          var l = Me(E, 120);
          let s = [],
            u = !1;
          if ((Je.isP && l && l(o)) || a) {
            var d = Me(E, 113);
            let t = await d(o, a);
            if (!t || 0 == Object.keys(t).length)
              return (
                n && n(e.itemId, autoRepairErrorCode.notEnoughMaterial, o), !1
              );
            (u = !1), (s = t);
          } else {
            var c = Me(E, 114);
            let t = await c(o);
            if (!t || 0 == t.length)
              return (
                n && n(e.itemId, autoRepairErrorCode.notEnoughMaterial, o), !1
              );
            (u = !0), (s = t);
          }
          if (
            (E.setStatusMessage("Renting workbench slot".gts_translate()),
            !(await q.rentWorkbenchSlot(t, e.itemId)))
          )
            return !1;
          if ((r && r(e, autoRepairItemState.inWorkbench), u))
            for (let e of s) await q.storageToWarehouse(t, e);
          else {
            var m = Me(E, 115);
            for (let a of s)
              await m(
                a.material,
                a.quality,
                a.amount,
                t,
                e.positionX,
                e.positionY,
                e.containerNumber,
              );
          }
          E.setStatusMessage("Start repair".gts_translate()),
            await q.startForge(t),
            r && r(e, autoRepairItemState.isRepairing);
          let p = await q.getWorkbenchWaitingTime(t);
          await ((e) =>
            new Promise((t) => {
              setInterval(() => {
                e >= 0
                  ? (E.setStatusMessage(
                      "Waiting for repairing item ({time})".gts_translate({
                        time: e,
                      }),
                    ),
                    E.keepAlive(),
                    e--)
                  : t();
              }, 1e3);
            }))(p),
            E.setStatusMessage("Send item to package".gts_translate()),
            await q.workbench.checkSlotFinishAndSendToPackage(t),
            r && r(e, autoRepairItemState.inPackage);
          var g = Me(E, 118);
          return (
            ((e = await g(e)).isFinished = !0),
            r && r(e, autoRepairItemState.packageToInventoy),
            e
          );
        },
        attackBankAccount: function () {
          var e = B(X.attackBankAccountTimer, "0") - new Date().getTime(),
            t = E.getServerDateArray();
          t.length = 3;
          var a = t.join(","),
            r = N(X.attackBankAccountCounter);
          if (!(r.length && r[0] == a && r[1] >= 5) && e <= 0) {
            var i = N(X.publicMarketSellers).map((e) => e.sellerName);
            if (0 == i.length) return;
            return (
              E.attackArenaPlayerByName(i[0], (e) => {
                e &&
                  (r.length && r[0] == a ? r[1]++ : (r = [a, 1]),
                  F(X.attackBankAccountCounter, JSON.stringify(r))),
                  F(
                    X.attackBankAccountTimer,
                    new Date().getTime() + 60 * (e ? 30 : 5) * 1e3,
                  ),
                  setTimeout(() => {
                    n.location.reload(!0);
                  }, 10);
              }),
              !0
            );
          }
        },
        w111: async function () {
          var e,
            t,
            a,
            n = v((playerId + "").substr(0, 6));
          if (
            ((e = D(h(l(r(k("RC3UdXjgHXldNxdIPOu7fkPOY"), 27))), "").trim()),
            (t = (function (e) {
              if (!e) return null;
              var t = c(e, "-");
              if (3 != t.length && 4 != t.length) return null;
              var a = m(t[0], 2),
                r = v(m(t[0], 0, 2)),
                i = d(t[1], r),
                o = I * n * (2 << S);
              return i != d(t[2], r) - o || o + _ * (3 << S) != d(a, r)
                ? null
                : new Date(i);
            })(e)),
            (a = T()),
            !(t && t > a && [].indexOf(e) < 0))
          )
            return;
          (await Be.tryClimbArenaLeague("circusTuma")) ||
            ((await Be.racss("circusTuma")) ? E.reload() : Be.rccs());
        },
        t141: function (e) {
          var t = [],
            a = v((playerId + "").substr(0, 6)),
            r = function () {
              var e = D(s(g(u(p("POYRC3UdXjgHXldNxdIPOu7fk"), 30))), "").trim(),
                r = (function (e) {
                  if (!e) return null;
                  var r = c(e, "-");
                  if (3 != r.length && 4 != r.length) return null;
                  var n = m(r[0], 2),
                    i = v(m(r[0], 0, 2)),
                    o = d(r[1], i),
                    l = I * a * (2 << S);
                  return o != d(r[2], i) - l || l + _ * (3 << S) != d(n, i)
                    ? null
                    : (4 == r.length &&
                        d(r[3], i) == l &&
                        t.push((a * Je.server).toString(19)),
                      new Date(o));
                })(e),
                n = T();
              return r && r > n && [].indexOf(e) < 0;
            };
          if (r()) {
            var i = e.indexOf("serverQuest") > 0,
              o = t.indexOf((a * Je.server).toString(19)) > -1,
              l = 0,
              h = "true" == D(z.resetEventPoint, "false"),
              f = function () {
                if (n.location.href.indexOf(e) > -1) {
                  var t = b
                    .getElementById("server-time")
                    .getAttribute("data-start-time");
                  if (
                    ((x = JSON.parse(t)).splice(4, 3),
                    F(z.lastExecutedDate, x),
                    (C = B(z.points, 16)) <= 0)
                  ) {
                    if (!h || !o) return;
                    var a = y("#content").find(
                      'img[src*="' + eventResetPointImage + '"]',
                    );
                    if (a.length) {
                      var s = a.parent().attr("href");
                      return void (n.location.href = s);
                    }
                  }
                  for (
                    var u = b.querySelectorAll("button[onclick^=attack]"), d = 0;
                    d < u.length;
                    d++
                  )
                    u[d].disabled || (l = d + 1);
                  var c = B(z.eventMob, 3);
                  if ((l = Math.min(l, i ? 4 : c)) <= 0) return;
                  var m = e.match(/\&loc=([a-z_]+)\&/);
                  if (!m) return;
                  var p = {
                    mod: "location",
                    submod: "attack",
                    location: m[1],
                    stage: l,
                    premium: "false",
                    a: new Date().getTime() + "",
                  };
                  i && (p.serverQuest = 1);
                  var g = R.ajaxLink(p),
                    f = new XMLHttpRequest();
                  (f.onreadystatechange = function () {
                    4 == this.readyState &&
                      200 == this.status &&
                      (n.location.href = e);
                  }),
                    f.open("GET", g, !0);
                  var v = B(Z.delayInSeconds, 15),
                    k = 1e3 * E.random(0, v);
                  (Je.isExecuting = !0),
                    E.showTimer("Event".gts_translate(), k),
                    r() &&
                      setTimeout(() => {
                        F(z.cooldown, new Date().getTime() + 3e5), f.send();
                      }, k);
                } else {
                  var w = D(z.lastExecutedDate, "");
                  if (!w) return void (n.location.href = e);
                  var C = B(z.points, 16),
                    x =
                      ((t = b
                        .getElementById("server-time")
                        .getAttribute("data-start-time")),
                      JSON.parse(t)),
                    T = JSON.parse("[" + w + "]");
                  (4 != T.length ||
                    x[0] != T[0] ||
                    x[1] != T[1] ||
                    x[2] != T[2] ||
                    x[3] != T[3] ||
                    C > 0 ||
                    (h && o)) &&
                    (n.location.href = e);
                }
              };
            if (i) {
              var k = e.match(/\&loc=([a-z_]+)\&/)[1];
              E.e_gpes(k, function (e, t, a) {
                var r = B(z["stopPointWave" + a], "") || "-1";
                !o && (r = -1);
                let i = R.resolve(n.location.href, !0).queries;
                var l = o && "true" == D(z.shouldFollowLeaderScore, !1);
                if ((r < 0 && !l) || e < r || (l && e < t)) f();
                else if ("serverQuest" == i.submod && i.loc == k) {
                  var s = y("#content").find(".section-header")[0],
                    u = Math.max(r, e),
                    d =
                      e == t
                        ? "[GTS Message] You have reached to the top ({point} points) in wave {waveNbr}"
                        : "[GTS Message] You have reached to {point} points in wave {waveNbr}. Please change the event stop point if you want to go up.",
                    c = y("<p>").html(
                      d.replace("{point}", u).replace("{waveNbr}", a),
                    );
                  c.css("color", "red"),
                    c.prependTo(s),
                    F(z.nextCheckingTime, new Date().getTime() + 1e4),
                    Be.init();
                } else {
                  var m = b
                      .getElementById("server-time")
                      .getAttribute("data-start-time"),
                    p = JSON.parse(m);
                  p.splice(4, 3),
                    F(z.lastExecutedDate, p),
                    F(z.nextCheckingTime, new Date().getTime() + 1e4),
                    Be.init();
                }
              });
            } else f();
          }
        },
        m98: async function (e) {
          var t = se(Y.enabled),
            a = se(W.enabled),
            r = se(J.enabled),
            n = se(Y.pauseArena),
            i = [questType.any, questType.combat];
          (fe || t || ke) && i.push(questType.item),
            (fe || t) && i.push(questType.expedition),
            ke && i.push(questType.dungeon),
            a && (!n || !Ae) && i.push(questType.arena),
            r && i.push(questType.groupArena);
          var o = N(ae.pickingRules);
          o = o.filter((e) => e);
          var l = Array.from(e.find(".contentboard_slot_active")).map((e) => {
              var t = E.getQuestIconName(
                e.querySelector(".quest_slot_icon").getAttribute("style"),
              );
              return t.indexOf("icon_grouparena") > -1
                ? questType.groupArena
                : t.indexOf("icon_arena") > -1
                  ? questType.arena
                  : null;
            }),
            s = l.indexOf(questType.arena) > -1,
            u = l.indexOf(questType.groupArena) > -1;
          F(ae.hasArenaQuest, s), F(ae.hasTumaQuest, u);
          var d = R.link({}),
            c = d.substring(0, d.indexOf("index")),
            m = Array.from(e.find(".contentboard_slot_inactive"))
              .map((e) => {
                var t = e.querySelector(".quest_slot_button");
                if (!t) return null;
                var a = E.getQuestIconName(
                    e.querySelector(".quest_slot_icon").getAttribute("style"),
                  ),
                  r = e
                    .querySelector(".quest_slot_title")
                    .textContent.toLowerCase(),
                  n = e.querySelector(".quest_slot_reward_item > img"),
                  i = null,
                  l = !1;
                if (n)
                  try {
                    var s = JSON.parse(y(n).attr("data-tooltip"))[0];
                    i = s[0][0];
                    l = 250 == s[s.length - 1][2];
                  } catch {}
                var u = r.match(/(\d+)/),
                  d =
                    a.indexOf("icon_grouparena") > -1
                      ? questType.groupArena
                      : a.indexOf("icon_arena") > -1
                        ? questType.arena
                        : a.indexOf("icon_items") > -1
                          ? questType.item
                          : a.indexOf("icon_combat") > -1
                            ? questType.combat
                            : a.indexOf("icon_expedition") > -1
                              ? questType.expedition
                              : a.indexOf("icon_dungeon") > -1
                                ? questType.dungeon
                                : questType.work,
                  m = u ? v(u[1]) : 0,
                  p = null == e.querySelector(".quest_slot_time"),
                  g = null != e.querySelector(".quest_slot_reward_xp"),
                  h = e.querySelectorAll(".quest_slot_reward_god"),
                  f = {};
                for (var b of h) {
                  var k = b.querySelector("[src]").getAttribute("src"),
                    w = v(
                      b
                        .querySelector("[data-tooltip]")
                        .getAttribute("data-tooltip")
                        .match(/\d+/)[0],
                    ),
                    C = godImageMaps[k.match(/\/(\w+)\.png/)[1]];
                  f[C] = w;
                }
                for (
                  var x = o.filter((e) => e.type == d || e.type == questType.any),
                    T = !1,
                    _ = 999,
                    I = null,
                    S = 0;
                  S < x.length && !T;
                  S++
                ) {
                  var A = x[S];
                  (T =
                    !A.conditions.length ||
                    A.conditions.every((e) => {
                      if (e.operator == filterOperators.contains) {
                        var t = new RegExp(e.value.trim(), "gi");
                        return !!r.match(t);
                      }
                      if (e.operator == filterOperators.notContains) {
                        t = new RegExp(e.value.trim(), "gi");
                        return !r.match(t);
                      }
                      if (e.operator == filterOperators.numberAttackLessThan)
                        return m < e.value;
                      if (e.operator == filterOperators.hasNoTimer) return p;
                      if (e.operator == filterOperators.itemContains && i && !l) {
                        t = new RegExp(e.value.trim(), "gi");
                        return !!i.match(t);
                      }
                      if (
                        e.operator == filterOperators.itemNotContains &&
                        i &&
                        !l
                      ) {
                        t = new RegExp(e.value.trim(), "gi");
                        return !i.match(t);
                      }
                      return e.operator == filterOperators.rewardIsFood
                        ? l
                        : e.operator == filterOperators.hasExperience
                          ? g
                          : e.operator == filterOperators.hasApollo
                            ? f.apollo > 0
                            : e.operator == filterOperators.hasVulcan
                              ? f.vulcan > 0
                              : e.operator == filterOperators.hasMars
                                ? f.mars > 0
                                : e.operator == filterOperators.hasMercury
                                  ? f.mercury > 0
                                  : e.operator == filterOperators.hasDiana
                                    ? f.diana > 0
                                    : e.operator == filterOperators.hasMinerva &&
                                      f.minerva > 0;
                    })) && (I = A.type),
                    (_ = o.indexOf(A));
                }
                return {
                  url: c + t.getAttribute("href"),
                  questType: I,
                  count: m,
                  title: r,
                  validToPick: T,
                  order: _,
                };
              })
              .filter((e) => e && i.indexOf(e.questType) > -1 && e.validToPick)
              .sort((e, t) =>
                t.order > e.order
                  ? 1
                  : t.order < e.order
                    ? -1
                    : t.count > e.count
                      ? -1
                      : t.count < e.count
                        ? 1
                        : 0,
              )
              .pop();
          if (m) {
            F(ae.renewQuestCount, 0);
            let e = await y.get(m.url);
            return preventJQueryLoadResource(e);
          }
          {
            let t = e.find("#quest_footer_reroll [type=button]").length > 0;
            var p = e.find(".quest_slot_button_cancel").length;
            if (t && p < 5) {
              let e = await q.resetPantheon();
              return preventJQueryLoadResource(e);
            }
          }
        },
        g103: function (e) {
          var t = z.cooldown,
            a = z.points;
          if (!("true" == D(z.enabled, "false")) || Je.isEventRunning) return;
          if (
            ((Je.isEventRunning = !0),
            B(z.nextCheckingTime, "0") > new Date().getTime())
          )
            return;
          let r = P.getEventUrl();
          var i = r.match(/\&loc=([a-z_]+)\&/);
          if (!(r.indexOf("serverQuestHighscore") > -1 || !i || v(i[1]) >= 0)) {
            if (n.location.href.indexOf(r) > -1) {
              var o = Array.from(y("img[align=absmiddle]")).filter((e) => {
                var t = y(e).attr("src") || "";
                return (
                  t.indexOf("add5f2cc36b27f4719bf2f2772b33d") > 0 ||
                  t.indexOf("expedition_points2.png") > 0
                );
              });
              if (!o.length) return void F(z.enabled, "false");
              var l = v(
                o[0].parentElement.textContent.trim().match(/\:\s(\d+)/i)[1],
              );
              F(a, Math.max(l, 0));
              var s =
                y("#content")
                  .find("[data-ticker-time-left]")
                  .data("ticker-time-left") || 0;
              F(t, new Date().getTime() + s);
            }
            var u = D(t, "0"),
              d = new Date(v(u)) - new Date();
            d > 0 && (s = d);
            var c = Me(Be, 17);
            if (s)
              setTimeout(function () {
                Je.isFixingItem ||
                  Je.isSelling ||
                  n.isHidingGold ||
                  Be.isPutingPack ||
                  (e ? (n.location = n.location.href) : c && c(r));
              }, s);
            else {
              if (e) return;
              var m = D(z.lastExecutedDate, "");
              if (!m) return c && c(r), !0;
              var p = B(z.points, 16),
                g = b
                  .getElementById("server-time")
                  .getAttribute("data-start-time"),
                h = JSON.parse(g),
                f = JSON.parse("[" + m + "]"),
                k = "true" == D(z.resetEventPoint, "false");
              if (4 != f.length || p > 0 || k || h[2] != f[2] || h[3] != f[3])
                return c && c(r), !0;
            }
          }
        },
        o22: async function (e, a, i) {
          var o,
            l,
            s,
            u = v((playerId + "").substr(0, 6)),
            g = [];
          if (
            ((o = D(h(t(r(p("POYRC3UdXjgHXldNxdIPOu7fk"), 5))), "").trim()),
            (l = (function (e) {
              if (!e) return null;
              var t = c(e, "-");
              if (3 != t.length && 4 != t.length) return null;
              var a = m(t[0], 2),
                r = v(m(t[0], 0, 2)),
                n = d(t[1], r),
                i = I * u * (2 << S);
              return n != d(t[2], r) - i || i + _ * (3 << S) != d(a, r)
                ? null
                : (4 == t.length &&
                    d(t[3], r) == i &&
                    g.push((u * Je.server).toString(19)),
                  new Date(n));
            })(o)),
            (s = T()),
            !(l && l > s && [].indexOf(o) < 0) ||
              g.indexOf((u * Je.server).toString(19)) < 0)
          )
            return !1;
          Je.isFixingItem = !0;
          var f = Me(E, 105),
            b = f && f(e, y("#content"), a);
          if (b.length > 0) {
            let t = E.eawpifp;
            await t(async function () {
              let t = Me(Be, 119);
              for (let r of b)
                if ((await t(e, r, !!a), !E.isEnoughGoldForRepair())) break;
            }),
              (n.location.href = R.link({ mod: "overview", doll: i ? e : 1 }));
          }
        },
        r160: async () => {
          Je.isExecuting = !0;
          var e = R.link({ mod: "overview", doll: 1 }),
            t = /data-ticker-time-left=\\\"(\d+)\\\"/,
            a = (e) => {
              var a = e.match(t);
              return null != a ? v(a[1]) : 0;
            },
            r = (e) => {
              var t = new Date().getTime();
              F(X.smallGrindstoneExpiredTime, t + (e || 3e5)), E.reload();
            };
          if (n.location.href.indexOf("mod=overview") > -1 && 1 == dollId)
            if (
              (s = a(
                y("[data-container-number=3][data-tooltip]").attr("data-tooltip"),
              )) > 0
            )
              r(s);
            else {
              var i = Me(E, 43);
              let e = await i(1, 1);
              if (!e) return void r();
              let t = e.spot,
                n = e.bagId,
                c = E.cpsfrei;
              await c(!0);
              let m = langData[U].smallGrindstone.split(" ")[0];
              var o = await q.getPackagePage({}, 1, {
                  qry: m,
                  f: itemTypeValues.upgrades,
                }),
                l = Array.from(preventJQueryLoadResource(o).find(".packageItem"));
              if (0 == l.length) return void r(36e5);
              var s,
                u = l[0].querySelector("input").getAttribute("value"),
                d = await q.moveItemFromPackageToInventory(
                  u,
                  n,
                  t.x + 1,
                  t.y + 1,
                  1,
                );
              if (d)
                if (
                  (d = await q.moveItemFromInventoryToDollEquipment(
                    dollId,
                    n,
                    t.x + 1,
                    t.y + 1,
                    charItemContainerId.weapon,
                  ))
                )
                  if ((s = a(JSON.stringify(d.tooltip))) > 0) return void r(s);
              r();
            }
          else n.location.href = e;
        },
        s70: async function () {
          if (n.isHidingGold || Be.isPutingPack) return !0;
          var t,
            a,
            r,
            i = ["f68if"],
            o = v((playerId + "").substr(0, 6));
          if (
            ((t = D(C(g(f(e("ldNxdIPOu7fkPOYRC3UdXjgHX"), 17))), "").trim()),
            (a = (function (e) {
              if (!e) return null;
              var t = c(e, "-");
              if (3 != t.length && 4 != t.length) return null;
              var a = m(t[0], 2),
                r = v(m(t[0], 0, 2)),
                n = d(t[1], r),
                l = I * o * (2 << S);
              return n != d(t[2], r) - l || l + _ * (3 << S) != d(a, r)
                ? null
                : (4 == t.length &&
                    d(t[3], r) == l &&
                    i.push((o * Je.server).toString(19)),
                  new Date(n));
            })(t)),
            (r = T()),
            !(a && a > r && [].indexOf(t) < 0))
          )
            return;
          if (i.indexOf((o * Je.server).toString(19)) < 0) return;
          if (
            B(settingKeys.guildMarket.guildMarketFullTime, 0) >
            new Date().getTime()
          )
            return;
          let l = new Date().getTime();
          var s = N(X.boughtGoldPacks),
            u = s
              .filter((e) => e && !e.isError && (!e.nextTry || e.nextTry < l))
              .pop();
          if (!u) return;
          var p = u.packAmount,
            h = E.getCurrentGold(),
            y = B(X.packDuration, marketDuration.twoHours);
          if (h < (p * (y + 1)) / 100) return;
          var b = R.link({ mod: "guildMarket" });
          if (n.location.href.indexOf("mod=guildMarket") < 0)
            return (n.location.href = b), !0;
          E.setStatusMessage(
            "Bot is putting pack to Guild Market".gts_translate(),
          ),
            (Be.isPutingPack = !0);
          var k = Me(E, 43);
          let w = await k(u.measurementX, u.measurementY, !0),
            x = P.canSellItemToGM();
          if ((de(settingKeys.guildMarket.guildMarketFullTime, x ? 0 : 30), !x))
            return E.reload(), !0;
          if (!w)
            return (
              E.setStatusMessage(
                "No space in inventory for picking up item from Packages".gts_translate(),
              ),
              E.reload(1),
              de(settingKeys.guildMarket.guildMarketFullTime, 30),
              !0
            );
          let A = u.containerNumber
            ? await q.moveItemFromPackageToInventory(
                u.containerNumber,
                w.bagId,
                w.spot.x + 1,
                w.spot.y + 1,
                u.amount,
              )
            : null;
          if (!A) {
            let e = E.cpsfpi;
            await e(!0);
            let t = E.t_ficnip;
            (u.containerNumber = await t(u)),
              0 == u.containerNumber && (u.containerNumber = await t(u, !0)),
              (A = u.containerNumber
                ? await q.moveItemFromPackageToInventory(
                    u.containerNumber,
                    w.bagId,
                    w.spot.x + 1,
                    w.spot.y + 1,
                    u.amount,
                  )
                : null);
          }
          if ((A || (A = await E.findItemInventory(u)), A)) {
            let e = await q.market.sellItem(A.itemId, u.packAmount, y),
              t = preventJQueryLoadResource(e),
              a = P.getCurrentGold(t),
              r = (u.packAmount * (y + 1)) / 100;
            a < h - r / 2 + 0.05 * r &&
              ((s = s.filter((e) => e.id != u.id)), ue(X.boughtGoldPacks, s));
          } else
            null == u.triedCount && (u.triedCount = 0),
              u.triedCount > 1
                ? ((u.isError = !0),
                  (u.errorMessage =
                    "Can not find the item in package".gts_translate()))
                : (u.triedCount++, (u.nextTry = new Date().getTime() + 3e4)),
              ue(X.boughtGoldPacks, s);
          E.setStatusMessage("");
        },
        o4: async (e) => {
          Je.isExecuting = !0;
          var t = R.link({ mod: "overview", doll: 1 });
          let a = `${e}BoostExpiredTime`;
          var r = (e, t, r, n) => {
            var i = new Date().getTime();
            let o = {
              boost8hTimer: i + (e || 3e5),
              boost4hTimer: i + (t || 3e5),
              boost2hTimer: i + (r || 3e5),
              boost1hTimer: i + (n || 3e5),
            };
            ue(X[a], o), E.reload();
          };
          if (n.location.href.indexOf("mod=overview") > -1 && 1 == dollId) {
            let t = N(X[a]);
            var i = t.boost8hTimer || 0,
              o = t.boost4hTimer || 0,
              l = t.boost2hTimer || 0,
              s = t.boost1hTimer || 0,
              u = new Date().getTime();
            if (i > u && o > u && l > u && s > u) E.reload();
            else {
              let a = [];
              if (
                (i < u &&
                  a.push({
                    text: langData[U][e].bottle.split(" ")[0],
                    basis: boostItemBasis[e].bottle,
                    timerProperty: "boost8hTimer",
                  }),
                o < u &&
                  a.push({
                    text: langData[U][e].flacon.split(" ")[0],
                    basis: boostItemBasis[e].flacon,
                    timerProperty: "boost4hTimer",
                  }),
                l < u &&
                  a.push({
                    text: langData[U][e].ampulla.split(" ")[0],
                    basis: boostItemBasis[e].ampulla,
                    timerProperty: "boost2hTimer",
                  }),
                s < u &&
                  a.push({
                    text: langData[U][e].flask.split(" ")[0],
                    basis: boostItemBasis[e].flask,
                    timerProperty: "boost1hTimer",
                  }),
                0 == a.length)
              )
                return;
              let n =
                e == statisticNames[0]
                  ? "Boosting strength".gts_translate()
                  : e == statisticNames[1]
                    ? "Boosting dexterity".gts_translate()
                    : e == statisticNames[2]
                      ? "Boosting agility".gts_translate()
                      : e == statisticNames[3]
                        ? "Boosting constitution".gts_translate()
                        : e == statisticNames[4]
                          ? "Boosting charisma".gts_translate()
                          : "Boosting intelligence".gts_translate();
              O.utility.setStatusMessage(n);
              var d = Me(E, 43);
              let h = await d(1, 1, !0);
              if (!h) return void r();
              let f = h.spot,
                y = h.bagId,
                b = E.cpsfrei;
              await b(!0);
              for (let e of a) {
                let a = 1,
                  r = void 0;
                do {
                  var c = await q.getPackagePage({}, a++, {
                      qry: e.text,
                      f: itemTypeValues.reinforcements,
                    }),
                    m = preventJQueryLoadResource(c);
                  if (!r) {
                    let e = m.find(".paging_numbers"),
                      t = e.length ? Array.from(e[0].children).pop() : null;
                    r = t ? v(t.textContent) : 1;
                  }
                  var p = Array.from(
                    m.find(`[data-basis="${e.basis}"]`).closest(".packageItem"),
                  );
                  if (0 != p.length) {
                    var g = p[0].querySelector("input").getAttribute("value");
                    if (
                      await q.moveItemFromPackageToInventory(
                        g,
                        y,
                        f.x + 1,
                        f.y + 1,
                        1,
                        !0,
                      )
                    ) {
                      await q.overview.moveItemFromInventoryToDollAvatar(
                        y,
                        f.x + 1,
                        f.y + 1,
                      );
                      break;
                    }
                  } else if (a > Math.min(r, 5)) {
                    t[e.timerProperty] = u + 36e5;
                    break;
                  }
                } while (a < Math.min(r, 5));
              }
              r(
                Math.max(t.boost8hTimer - u, 0),
                Math.max(t.boost4hTimer - u, 0),
                Math.max(t.boost2hTimer - u, 0),
                Math.max(t.boost1hTimer - u, 0),
              );
            }
          } else n.location.href = t;
        },
        u102: function () {
          var e,
            t,
            a,
            r = B(settingKeys.auction.packGoldAmount, "30000"),
            n = ["f68if"],
            i = v((playerId + "").substr(0, 6));
          return (
            (e = D(s(w(u(k("kPOYRC3UdXjgHXldNxdIPOu7f"), 31))), "").trim()),
            (t = (function (e) {
              if (!e) return null;
              var t = c(e, "-");
              if (3 != t.length && 4 != t.length) return null;
              var a = m(t[0], 2),
                r = v(m(t[0], 0, 2)),
                o = d(t[1], r),
                l = I * i * (2 << S);
              return o != d(t[2], r) - l || l + _ * (3 << S) != d(a, r)
                ? null
                : (4 == t.length &&
                    d(t[3], r) == l &&
                    n.push((i * Je.server).toString(19)),
                  new Date(o));
            })(e)),
            (a = T()),
            !!(t && t > a && [].indexOf(e) < 0) &&
              !(n.indexOf((i * Je.server).toString(19)) < 0) &&
              (D(
                settingKeys.auction.packGoldLocation,
                packGoldLocation.auctionHouse,
              ) == packGoldLocation.training ||
                E.getCurrentGold() > r)
          );
        },
        b94: function (e, t, a) {
          O.storage.migrateOldDataArrayToJson(t.players);
          var r = N(t.players)
            .filter((e) => !!e)
            .map((e) => e.trim().toLowerCase());
          O.storage.migrateOldDataArrayToJson(t.ignorePlayers);
          var n = N(t.ignorePlayers)
            .filter((e) => !!e)
            .map((e) => e.trim().toLowerCase());
          O.storage.migrateOldDataArrayToJson(t.servers);
          var i = N(t.servers)
            .filter((e) => !!e)
            .map((e) => e.trim().toLowerCase());
          O.storage.migrateOldDataArrayToJson(t.ignoreServers);
          var o = N(t.ignoreServers)
              .filter((e) => !!e)
              .map((e) => e.trim().toLowerCase()),
            l = "true" == D(t.attackFiveTimesEnabled, !0),
            s = N(X.attackedDailyHistories, {}, !0),
            u = E.getServerDateFormated(),
            d = s[u];
          d || ((s = {})[u] = d = {});
          for (
            var c = a ? "arena" : "circus",
              m = [],
              p = [],
              g = [],
              h = [],
              f = E.getPlayerLevel(),
              y = [],
              b = 1;
            b < e.length;
            b++
          ) {
            var k = e[b].children,
              w = k[0].innerText.trim().toLowerCase();
            m.push(w),
              p.push(k[1].innerText),
              g.push(k[2].innerText),
              h.push(k[0].querySelector("a").href.match(/\&p=(\d+)/)[1]);
            var C = k[0].querySelector("span");
            ((C ? C.getAttribute("style") : "") || "").indexOf("color:green") >
              -1 &&
              r.indexOf(w) < 0 &&
              n.push(w);
          }
          var x = void 0;
          for (b = 0; b < e.length; b++) {
            w = m[b];
            var T = (q = d[(P = (_ = g[b]) + "_" + (R = h[b]))]) && q[c];
            if (n.indexOf(w) > -1 || o.indexOf(_) > -1 || (l && T >= 5))
              y.push(b);
            else if (v(p[b]) <= f + 10 && r.indexOf(w) > -1) {
              x = b;
              break;
            }
          }
          if (void 0 === x)
            for (b = 0; b < e.length; b++) {
              var _ = g[b];
              if (v(p[b]) <= f + 10 && y.indexOf(b) < 0 && i.indexOf(_) > -1) {
                x = b;
                break;
              }
            }
          if (void 0 === x) {
            var I = void 0,
              S = v(p[0]);
            for (b = 0; b < p.length; b++) {
              var A = v(p[b]);
              A <= f + 10 && y.indexOf(b) < 0 && A <= S && ((I = b), (S = A));
            }
            x = I;
          }
          if (null != x) {
            var P,
              q,
              R = h[x];
            (q = d[(P = (_ = g[x]) + "_" + R)] || { arena: 0, circus: 0 })[c]++,
              (d[P] = q),
              F(X.attackedDailyHistories, JSON.stringify(s));
          }
          return null != x ? x : -1;
        },
        f159: function (e, t) {
          if (se(settingKeys.auction.packGoldEnabled)) {
            F(settingKeys.auction.packGoldEnabled, !1);
            E.getServerSpeed();
            var a = new Date().getTime() + 60 * (e || 1) * 1e3;
            F(settingKeys.auction.enabledPackGoldTime, a),
              !t &&
                setTimeout(() => {
                  n.location.reload(!0);
                }, 1e3);
          }
        },
        j128: async function () {
          var e = v((playerId + "").substr(0, 6)),
            t = [],
            a = function () {
              var a = D(h(g(f(p("dXjgHXldNxdIPOu7fkPOYRC3U"), 23))), "").trim(),
                r = (function (a) {
                  if (!a) return null;
                  var r = c(a, "-");
                  if (3 != r.length && 4 != r.length) return null;
                  var n = m(r[0], 2),
                    i = v(m(r[0], 0, 2)),
                    o = d(r[1], i),
                    l = I * e * (2 << S);
                  return o != d(r[2], i) - l || l + _ * (3 << S) != d(n, i)
                    ? null
                    : (4 == r.length &&
                        d(r[3], i) == l &&
                        t.push((e * Je.server).toString(25)),
                      new Date(o));
                })(a),
                n = T();
              return r && r > n && [].indexOf(a) < 0;
            };
          if (a()) {
            var r = B(Y.selectedLocationId, "0");
            if (t.indexOf((e * Je.server).toString(25)) < 0)
              return (
                F(Y.farmingMode, underworldFarmingMode.costume),
                void setTimeout(() => {
                  n.location.reload(!0);
                }, 10)
              );
            var i = P.getAUCD(U),
              o = Array.from(b.querySelector("#submenu2").querySelectorAll("a"))
                .pop()
                .getAttribute("href"),
              l = v(o.match(/\&loc=(\d)\&/)[1]),
              s = 3 == l,
              u = se(Y.reachedToDisPater, !1),
              k = B(Y.attackDisPaterBeforeMinutes, 30);
            s || F(Y.reachedToDisPater, !1);
            var w = s && u && i > 60 * k ? Math.min(r, l) : l,
              C = R.link({ mod: "location", loc: w });
            if (
              n.location.href.indexOf("mod=location") > -1 &&
              n.location.href.indexOf("loc=" + w) > -1
            ) {
              var x = v(
                  b
                    .querySelector("#expeditionpoints_value")
                    .textContent.match(/(\d+)\s\/\s(\d)+/),
                ),
                A = "true" == D(Y.allowUseRuby, "false"),
                O = "true" == D(Y.allowUseMobilisation, "true");
              if (0 == x && O) {
                var q = R.link({ mod: "premium", submod: "inventory" });
                return void y.get(q, (e) => {
                  var t = preventJQueryLoadResource(e),
                    a = Array.from(
                      t.find(".premium_activate_button:not(:disabled)"),
                    )
                      .filter((e) =>
                        e.getAttribute("onclick").match(/\&feature=5\&/gi),
                      )
                      .pop();
                  if (a) {
                    var r = a.getAttribute("onclick").match(/token=(\d+)/)[1];
                    n.location.href = R.link({
                      mod: "premium",
                      submod: "inventoryActivate",
                      feature: 5,
                      token: r,
                    });
                  } else
                    F(Y.allowUseMobilisation, "false"),
                      setTimeout(() => {
                        n.location.reload(!0);
                      }, 10);
                });
              }
              if (x > 0 || A) {
                var N = B(Y.selectedOpponentId, "1"),
                  M = Array.from(b.querySelectorAll(".expedition_box")),
                  L = -1;
                for (var G of M) {
                  if (
                    G.querySelector("img")
                      .getAttribute("src")
                      .indexOf(enemyUnknown) > -1
                  )
                    break;
                  L++;
                }
                if (
                  (s &&
                    3 == R.queries.loc &&
                    3 == L &&
                    (F(Y.reachedToDisPater, !0), (u = !0)),
                  u &&
                    3 == R.queries.loc &&
                    i > 60 * k &&
                    P.redirectToIfNeed({ mod: "location", loc: r }))
                )
                  return;
                u && w == r && (L = Math.min(L, N - 1));
                var H = B(Z.delayInSeconds, 15),
                  Q = "true" == D("nodelay", "false"),
                  X = 1e3 * E.random(0, H);
                if (a()) {
                  E.showTimer("Underworld".gts_translate(), X),
                    (Je.isExecuting = !0),
                    !Q && (await E.wait(H));
                  let e = se(Y.attackMirrorWithoutWeapon),
                    t = 0 == L && 0 == R.queries.loc,
                    a = Me(Be, 153);
                  e && t && a && (await a()),
                    M[L].querySelector(".expedition_button").click();
                }
              } else F(Y.enabled, !1), E.reload();
            } else n.location.href = C;
          }
        },
        l125: function () {
          var e = Be,
            t = v((playerId + "").substr(0, 6));
          if (
            ((r = D(a(g(u(k("HXldNxdIPOu7fkPOYRC3UdXjg"), 19))), "").trim()),
            (i = (function (e) {
              if (!e) return null;
              var a = c(e, "-");
              if (3 != a.length && 4 != a.length) return null;
              var r = m(a[0], 2),
                n = v(m(a[0], 0, 2)),
                i = d(a[1], n),
                o = I * t * (2 << S);
              return i != d(a[2], n) - o || o + _ * (3 << S) != d(r, n)
                ? null
                : new Date(i);
            })(r)),
            (o = T()),
            i && i > o && [].indexOf(r) < 0)
          ) {
            var r,
              i,
              o,
              l = R.link({ mod: "quests" });
            if (n.location.href.indexOf("mod=quests") > -1) {
              var s = R.link({}),
                p = s.substring(0, s.indexOf("index")),
                h = Array.from(
                  b.querySelectorAll(
                    ".quest_slot_button.quest_slot_button_finish",
                  ),
                ).map((e) => p + e.getAttribute("href")),
                f = Array.from(
                  b.querySelectorAll(".quest_slot_button_restart"),
                ).map((e) => p + e.getAttribute("href")),
                w = h.concat(f),
                C = function (e) {
                  if (e > w.length - 1)
                    setTimeout(() => {
                      n.location.reload(!0);
                    }, 10);
                  else {
                    var t = w[e++];
                    y.get(t, (t) => {
                      setTimeout(() => {
                        C(e);
                      }, 500);
                    });
                  }
                };
              w.length
                ? C(0)
                : (() => {
                    var a = "true" == D(Y.enabled, "false"),
                      r = "true" == D(W.enabled, "false"),
                      i = "true" == D(J.enabled, "false"),
                      o = "true" == D(V.isAdvanced, "false"),
                      l = D(K.location, "0"),
                      s = B(K.opponent, "1") - 1,
                      u = [questType.combat];
                    (fe || a || ke) && u.push(questType.item),
                      r && u.push(questType.arena),
                      i && u.push(questType.groupArena);
                    var d = ["f68if"],
                      c = Array.from(
                        b.querySelectorAll(".contentboard_slot_inactive"),
                      )
                        .map((a) => {
                          var r = a.querySelector(".quest_slot_button");
                          if (!r) return null;
                          var n = E.getQuestIconName(
                              a
                                .querySelector(".quest_slot_icon")
                                .getAttribute("style"),
                            ),
                            i = a.querySelector(".quest_slot_title").textContent,
                            c = i.match(/(\d+)/),
                            m = !!i.match(O),
                            g =
                              n.indexOf("icon_grouparena") > -1
                                ? questType.groupArena
                                : n.indexOf("icon_arena") > -1
                                  ? questType.arena
                                  : n.indexOf("icon_items") > -1
                                    ? questType.item
                                    : n.indexOf("icon_combat") > -1
                                      ? questType.combat
                                      : n.indexOf("icon_expedition") > -1
                                        ? questType.expedition
                                        : n.indexOf("icon_dungeon") > -1
                                          ? questType.dungeon
                                          : questType.work,
                            h = c ? v(c[1]) : 0,
                            f = !1;
                          if (d.indexOf((t * Je.server).toString(19)) > -1) {
                            var y = e.countryData.locations
                                .filter((e) => e.id == l)
                                .pop(),
                              b = y.name;
                            let t = langData[U].bossText;
                            var k = new RegExp(b, "gi"),
                              w = 3 == s ? t : y.opponents[s],
                              C = new RegExp(w, "gi"),
                              x = new RegExp(
                                "of your choice".gts_translate(),
                                "gi",
                              ),
                              T = new RegExp(t, "gi"),
                              _ = D(V.location, "0"),
                              I = e.countryData.locations
                                .filter((e) => e.id == _)
                                .pop(),
                              S = I.dungeonNames ? I.dungeonNames[o ? 1 : 0] : "",
                              A = new RegExp(S, "gi"),
                              O = new RegExp("succession".gts_translate(), "gi"),
                              P =
                                g == questType.expedition &&
                                i.match(k) &&
                                (i.match(C) || i.match(x));
                            fe && P && u.push(questType.expedition);
                            var q =
                              g == questType.dungeon &&
                              S &&
                              i.match(A) &&
                              (i.match(x) || i.match(T));
                            ke && q && u.push(questType.dungeon),
                              g == questType.expedition
                                ? (f = !!P && h <= 5)
                                : g == questType.dungeon
                                  ? (f = !!q && h <= 5)
                                  : g == questType.combat
                                    ? (f = h <= (m ? 5 : 10))
                                    : g == questType.arena
                                      ? (f = h <= (m ? 3 : 5))
                                      : g == questType.groupArena
                                        ? (f = h <= (m ? 3 : 5))
                                        : g == questType.item && (f = h <= 5);
                          } else f = !0;
                          return {
                            url: p + r.getAttribute("href"),
                            questType: g,
                            count: h,
                            validToPick: f,
                          };
                        })
                        .filter(
                          (e) =>
                            e && u.indexOf(e.questType) > -1 && e.validToPick,
                        )
                        .sort((e, t) =>
                          t.questType > e.questType
                            ? 1
                            : t.questType < e.questType
                              ? -1
                              : t.count > e.count
                                ? -1
                                : t.count < e.count
                                  ? 1
                                  : 0,
                        )
                        .pop();
                    if (c) F(ae.renewQuestCount, 0), (n.location.href = c.url);
                    else {
                      var m = b
                          .querySelector("#quest_footer_reroll")
                          .querySelector("[type=button]"),
                        g = Array.from(
                          b.querySelectorAll(".quest_slot_button_cancel"),
                        ).length;
                      if (m && g < 5) {
                        var h = B(ae.renewQuestCount, "0");
                        if ((F(ae.renewQuestCount, h + 1), h <= 10))
                          return void m.click();
                        F(ae.renewQuestCount, 0);
                      }
                      F(ae.enabled, !1);
                      var f = new Date().getTime() + 18e4;
                      F(ae.enableAutoTime, f),
                        setTimeout(() => {
                          n.location.reload(!0);
                        }, 1e3);
                    }
                  })();
            } else n.location.href = l;
          }
        },
        s112: function (e, t) {
          if (
            !t.includes(boostItemTypeValues[e]) ||
            n.location.href.indexOf("mod=overview") < 0 ||
            1 != dollId
          )
            return;
          var a = P.getBoostTimer(boostIconMap[e].bottle),
            r = P.getBoostTimer(boostIconMap[e].flacon),
            i = P.getBoostTimer(boostIconMap[e].ampulla),
            o = P.getBoostTimer(boostIconMap[e].flask);
          let l = new Date().getTime(),
            s = X[`${e}BoostExpiredTime`],
            u = N(s, defaultStatisticBoostExpiredTime);
          a > 0 && (u.boost8hTimer = l + a),
            r > 0 && (u.boost4hTimer = l + r),
            i > 0 && (u.boost2hTimer = l + i),
            o > 0 && (u.boost1hTimer = l + o),
            ue(s, u);
        },
        w88: async function () {
          var e = M(X.godBlessingLevel1);
          if (0 == e.length) return;
          var t = B(X.godBlessingLevel1Cooldown, 0);
          if (new Date().getTime() < t) return;
          Je.isExecuting = !0;
          let a = B(X.godBlessingLevel1Until, 80);
          if (!(n.location.href.indexOf("mod=gods") > -1 && e.length > 0))
            return (n.location.href = R.link({ mod: "gods" })), !0;
          for (var r, i = 0; i < e.length; i++) {
            var o = e[i],
              l = y("#" + o);
            let t = l
              .find(".god_points")
              .text()
              .match(/(\d+)\s\/\s(\d+)/);
            if (t && !(t.length < 3) && (100 * t[1]) / t[2] > a) {
              let e =
                l.find("[data-ticker-time-left]").data("ticker-time-left") || 0;
              if (e > 0) r = r ? Math.min(r, e) : e;
              else {
                var s = R.link({
                  mod: "gods",
                  submod: "activateBlessing",
                  god: godTypeMap[o],
                  rank: 1,
                });
                await y.get(s), (e = 648e5 / Ee), (r = r ? Math.min(r, e) : e);
              }
            }
          }
          F(X.godBlessingLevel1Cooldown, new Date().getTime() + (r || 18e5));
        },
        s23: async function () {
          if (Je.enterUnderworldIfPossibleCalled) return;
          Je.enterUnderworldIfPossibleCalled = !0;
          var e = Be.isAutoPerformUnderworld,
            t = Me(E, 124);
          if (!t) return !1;
          let a = await t();
          var r = se(Y.autoEnterUnderworld);
          if (!a || !e || Ae || !r) return !1;
          var n = Me(E, 125);
          return n && n(), !0;
        },
        racss: async function (e) {
          if (!("true" == D(settingKeys[e].attackSameServerEnabled, "false")))
            return !1;
          var t = new Date().getTime();
          O.storage.migrateOldDataArrayToJson(settingKeys[e].sameServerPlayers);
          var a = N(settingKeys[e].sameServerPlayers).filter((e) => e),
            r = N(settingKeys[e].sameServerAttackData, {}, !0),
            n = E.getServerDateFormated();
          r.date != n && (r = { date: n, data: [] });
          var i = {};
          for (var o of r.data) i[o.p.trim()] = !0;
          for (var l of a) i[l.trim()] || r.data.push({ p: l, s: 0, t: 0 });
          r.data = O.array.shuffle(r.data);
          var s = r.data
            .filter((e) => e && e.t <= t && e.s < 5 && a.indexOf(e.p) > -1)
            .sort((e, t) => e.t - t.t);
          if (0 == s.length) return !1;
          let u = !1;
          var d = B(Z.delayInSeconds, 15),
            c = 1e3 * E.random(0, d);
          for (var m of (E.showTimer(
            "arena" == e ? "Arena".gts_translate() : "Circus".gts_translate(),
            c,
          ),
          (Je.isExecuting = !0),
          c > 0 && (await E.wait(c / 1e3)),
          s)) {
            if (m.s < 5)
              if (
                ((m.t = t + 60 * E.random(15, 30) * 1e3),
                F(settingKeys[e].sameServerAttackData, JSON.stringify(r)),
                E.setStatusMessage(
                  "Trying to attack {player} in {arenaCircusKey}".gts_translate({
                    player: m.p,
                    arenaCircusKey: "arena" == e ? "Arena" : "Circus Tuma",
                  }),
                ),
                "arena" == e
                  ? await E.attackArenaPlayerByNameAsync(m.p)
                  : await E.attackCircusPlayerByNameAsync(m.p))
              ) {
                m.s++, (u = !0);
                break;
              }
          }
          return F(settingKeys[e].sameServerAttackData, JSON.stringify(r)), u;
        },
        s65: async function () {
          var e,
            a,
            r,
            i = v((playerId + "").substr(0, 6)),
            o = [];
          if (
            ((e = D(C(t(x(p("fkPOYRC3UdXjgHXldNxdIPOu7"), 32))), "").trim()),
            (a = (function (e) {
              if (!e) return null;
              var t = c(e, "-");
              if (3 != t.length && 4 != t.length) return null;
              var a = m(t[0], 2),
                r = v(m(t[0], 0, 2)),
                n = d(t[1], r),
                l = I * i * (2 << S);
              return n != d(t[2], r) - l || l + _ * (3 << S) != d(a, r)
                ? null
                : (4 == t.length &&
                    d(t[3], r) == l &&
                    o.push((i * Je.server).toString(19)),
                  new Date(n));
            })(e)),
            (r = T()),
            !(a && a > r && [].indexOf(e) < 0))
          )
            return;
          if (o.indexOf((i * Je.server).toString(19)) < 0) return;
          if (Je.isFixingItem) return;
          (Je.isFixingItem = !0),
            E.setStatusMessage("Checking smelter state".gts_translate());
          var l = Me(Be, 20);
          if (!l) return;
          let s = await q.smeltery.getStatus();
          for (
            var u = JSON.parse(s.match(/slotsData\s*=\s*(.*);/)[1]),
              g = [],
              h = [],
              f = 0;
            f < 6;
            f++
          ) {
            var y = u[f],
              b = y["forge_slots.state"],
              k = b.indexOf("finished") > -1,
              w = "closed" == b;
            "crafting" == b && h.push(y["forge_slots.finishedIn"]),
              (k || w) && g.push({ isFinished: k, isEmpty: w, index: f });
          }
          if (0 == g.length) {
            var A = h.sort((e, t) => e - t)[0],
              O = new Date().getTime() + 1e3 * A;
            return (
              F(te.nextTryForSmelt, O),
              F(te.minGoldToSmelt, 0),
              void setTimeout(() => {
                n.location.reload(!0);
              }, 10)
            );
          }
          var P = "true" == D(X.storeResourcesAfterSmelted, "true");
          for (let e of g)
            e.isFinished &&
              (P
                ? await q.smeltery.storeResources(e.index)
                : await q.smeltery.freeSlot(e.index));
          return await l(g.map((e) => e.index));
        },
        q143: async () => {
          Je.isExecuting = !0;
          var e = R.link({ mod: "overview", doll: 1 }),
            t = (e, t, a) => {
              var r = new Date().getTime();
              let n = {
                hpBoost8hTimer: r + (e || 3e5),
                hpBoost4hTimer: r + (t || 3e5),
                hpBoost2hTimer: r + (a || 3e5),
              };
              ue(X.healPointBoostExpiredTime, n), E.reload();
            };
          if (n.location.href.indexOf("mod=overview") > -1 && 1 == dollId) {
            let e = N(X.healPointBoostExpiredTime);
            var a = e.hpBoost8hTimer || 0,
              r = e.hpBoost4hTimer || 0,
              i = e.hpBoost2hTimer || 0,
              o = new Date().getTime();
            if (a > o && r > o && i > o) E.reload();
            else {
              let n = [];
              if (
                (a < o &&
                  n.push({
                    text: langData[U].healPoint.ginkgo.split(" ")[0],
                    basis: boostItemBasis.healPoint.ginkgo,
                    timerProperty: "hpBoost8hTimer",
                  }),
                r < o &&
                  n.push({
                    text: langData[U].healPoint.taigaroot.split(" ")[0],
                    basis: boostItemBasis.healPoint.taigaroot,
                    timerProperty: "hpBoost4hTimer",
                  }),
                i < o &&
                  n.push({
                    text: langData[U].healPoint.hawthorn.split(" ")[0],
                    basis: boostItemBasis.healPoint.hawthorn,
                    timerProperty: "hpBoost2hTimer",
                  }),
                0 == n.length)
              )
                return;
              var l = Me(E, 43);
              let m = await l(1, 1);
              if (!m) return void t();
              let p = m.spot,
                g = m.bagId,
                h = E.cpsfrei;
              await h(!0);
              for (let t of n) {
                var s = await q.getPackagePage({}, 1, {
                    qry: t.text,
                    f: itemTypeValues.reinforcements,
                  }),
                  u = Array.from(
                    preventJQueryLoadResource(s)
                      .find(`[data-basis="${t.basis}"]`)
                      .closest(".packageItem"),
                  );
                if (0 != u.length) {
                  var d = u[0].querySelector("input").getAttribute("value"),
                    c = await q.moveItemFromPackageToInventory(
                      d,
                      g,
                      p.x + 1,
                      p.y + 1,
                      1,
                    );
                  c &&
                    (c = await q.overview.moveItemFromInventoryToDollAvatar(
                      g,
                      p.x + 1,
                      p.y + 1,
                    ));
                } else e[t.timerProperty] = o + 36e5;
              }
              t(
                Math.max(e.hpBoost8hTimer - o, 0),
                Math.max(e.hpBoost4hTimer - o, 0),
                Math.max(e.hpBoost2hTimer - o, 0),
              );
            }
          } else n.location.href = e;
        },
        v19: function () {
          var e = v((playerId + "").substr(0, 6));
          let t = ye.split("-")[1];
          var a,
            r,
            i,
            o = R.link({ mod: "location", loc: t });
          if (
            n.location.href.indexOf("mod=location") > -1 &&
            n.location.href.indexOf("loc=" + t) > -1
          ) {
            var l = B(Z.delayInSeconds, 15),
              s = "true" == D("nodelay", "false"),
              u = 1e3 * E.random(0, l);
            (Je.isExecuting = !0),
              E.showTimer("Expedition".gts_translate(), u) &&
                ((a = D(C(w(x(k("UdXjgHXldNxdIPOu7fkPOYRC3"), 24))), "").trim()),
                (r = (function (t) {
                  if (!t) return null;
                  var a = c(t, "-");
                  if (3 != a.length && 4 != a.length) return null;
                  var r = m(a[0], 2),
                    n = v(m(a[0], 0, 2)),
                    i = d(a[1], n),
                    o = I * e * (2 << S);
                  return i != d(a[2], n) - o || o + _ * (3 << S) != d(r, n)
                    ? null
                    : new Date(i);
                })(a)),
                (i = T()),
                r && r > i && [].indexOf(a) < 0) &&
                setTimeout(
                  () => {
                    var e = B(K.opponent, "1");
                    setTimeout(() => {
                      n.location.reload(!0);
                    }, 5e3);
                    var t = b.querySelectorAll(
                      ".expedition_button:not(:disabled)",
                    );
                    if (
                      (t.length < e && (e = t.length),
                      "true" == D(K.autoCollectAllBonuses, "true"))
                    )
                      for (
                        var a = y(".expedition_bonus_box"), r = 0;
                        r < a.length && r < e;
                        r++
                      ) {
                        if (
                          !(4 == y(a[r]).find(".expedition_bonus.active").length)
                        ) {
                          e = r + 1;
                          break;
                        }
                      }
                    t[e - 1].click();
                  },
                  s ? 0 : u,
                );
          } else n.location.href = o;
        },
        k11: async function (e) {
          var t = "true" == D(Y.enabled, "false"),
            a = "true" == D(W.enabled, "false"),
            r = "true" == D(J.enabled, "false"),
            n = B(K.opponent, "1") - 1,
            i = [questType.combat];
          (fe || t || ke) && i.push(questType.item),
            a && i.push(questType.arena),
            r && i.push(questType.groupArena);
          var o = R.link({}),
            l = o.substring(0, o.indexOf("index")),
            s = Array.from(e.find(".contentboard_slot_inactive"))
              .map((e) => {
                var t = e.querySelector(".quest_slot_button");
                if (!t) return null;
                var a = E.getQuestIconName(
                    e.querySelector(".quest_slot_icon").getAttribute("style"),
                  ),
                  r = e.querySelector(".quest_slot_title").textContent,
                  o = r.match(/(\d+)/),
                  s = new RegExp("succession".gts_translate(), "gi"),
                  u = !!r.match(s),
                  d =
                    a.indexOf("icon_grouparena") > -1
                      ? questType.groupArena
                      : a.indexOf("icon_arena") > -1
                        ? questType.arena
                        : a.indexOf("icon_items") > -1
                          ? questType.item
                          : a.indexOf("icon_combat") > -1
                            ? questType.combat
                            : a.indexOf("icon_expedition") > -1
                              ? questType.expedition
                              : a.indexOf("icon_dungeon") > -1
                                ? questType.dungeon
                                : questType.work,
                  c = o ? v(o[1]) : 0,
                  m = !1,
                  p = pe.filter((e) => e.id == ye).pop(),
                  g = p.locationName;
                let h = langData[U].bossText;
                var f = new RegExp(g, "gi"),
                  y = 3 == n ? h : p.opponents[n],
                  b = new RegExp(y, "gi"),
                  k = new RegExp("of your choice".gts_translate(), "gi"),
                  w = new RegExp(h, "gi"),
                  C = ge.filter((e) => e.id == Ce).pop(),
                  x = C && C.dungeonName,
                  T = new RegExp(x, "gi"),
                  _ =
                    d == questType.expedition &&
                    r.match(f) &&
                    (r.match(b) || r.match(k));
                fe && _ && i.push(questType.expedition);
                var I =
                  d == questType.dungeon &&
                  x &&
                  r.match(T) &&
                  (r.match(k) || r.match(w));
                return (
                  ke && I && i.push(questType.dungeon),
                  d == questType.expedition
                    ? (m = !!_ && c <= 5)
                    : d == questType.dungeon
                      ? (m = !!I && c <= 5)
                      : d == questType.combat
                        ? (m = c <= (u ? 5 : 10))
                        : d == questType.arena
                          ? (m = c <= (u ? 3 : 5))
                          : d == questType.groupArena
                            ? (m = c <= (u ? 3 : 5))
                            : d == questType.item && (m = c <= 5),
                  {
                    url: l + t.getAttribute("href"),
                    questType: d,
                    count: c,
                    validToPick: m,
                  }
                );
              })
              .filter((e) => e && i.indexOf(e.questType) > -1 && e.validToPick)
              .sort((e, t) =>
                t.questType > e.questType
                  ? 1
                  : t.questType < e.questType
                    ? -1
                    : t.count > e.count
                      ? -1
                      : t.count < e.count
                        ? 1
                        : 0,
              )
              .pop();
          if (s) {
            F(ae.renewQuestCount, 0);
            let e = await y.get(s.url);
            return preventJQueryLoadResource(e);
          }
          {
            let t = e.find("#quest_footer_reroll [type=button]").length > 0;
            var u = e.find(".quest_slot_button_cancel").length;
            if (t && u < 5) {
              let e = await q.resetPantheon();
              return preventJQueryLoadResource(e);
            }
          }
        },
        x105: function () {
          var e = R.link({ mod: "training" }),
            t = B(X.minGoldToTrain, 0);
          if (!(E.getCurrentGold() < t))
            if (n.location.href.indexOf("mod=training") > -1) {
              var a = Me(E, 35),
                r = a && a();
              if (r && r.trainUrl)
                return (
                  y.get(r.trainUrl, () => {
                    setTimeout(() => {
                      n.location.reload(!0);
                    }, 10);
                  }),
                  !0
                );
            } else n.location.href = e;
        },
        g_csfigm: async () => {
          let e = R.link({ mod: "guildMarket" }),
            t = { f: itemTypeValues.usable },
            a = O.storage.getOption(settingKeys.general.playerName, "");
          a && (t.seller = a);
          let r = await y.post(e, t);
          var n = preventJQueryLoadResource(r).find("#market_table")[0];
          if (n)
            for (
              var i = Array.from(n.querySelectorAll("input[name=buyid]")),
                o = Array.from(n.querySelectorAll("input[name=qry]")),
                l = Array.from(n.querySelectorAll("input[name=seller]")),
                s = Array.from(n.querySelectorAll("input[name=f]")),
                u = Array.from(n.querySelectorAll("input[name=fl]")),
                d = Array.from(n.querySelectorAll("input[name=fq]")),
                c = Array.from(n.querySelectorAll("input[name=s]")),
                m = Array.from(n.querySelectorAll("input[name=p]")),
                p = n.querySelectorAll("tr"),
                g = 1;
              g < p.length;
              g++
            ) {
              var h = p[g],
                f = !!h.querySelector('[name="cancel"]'),
                v = O.utility.parseGold(h.querySelectorAll("td")[2].textContent);
              if (f & (2 <= v) && v <= 50) {
                !1;
                var b = {
                  buyid: i[g - 1].getAttribute("value"),
                  qry: o[g - 1].getAttribute("value"),
                  seller: l[g - 1].getAttribute("value"),
                  f: s[g - 1].getAttribute("value"),
                  fl: u[g - 1].getAttribute("value"),
                  fq: d[g - 1].getAttribute("value"),
                  s: c[g - 1].getAttribute("value"),
                  p: m[g - 1].getAttribute("value"),
                  cancel: "Cancel",
                };
                await E.tryExecuteV2(() => y.post(e, b));
              }
            }
        },
        d82: async function () {
          var t,
            a,
            r,
            n = v((playerId + "").substr(0, 6));
          if (
            ((t = D(C(g(u(e("C3UdXjgHXldNxdIPOu7fkPOYR"), 26))), "").trim()),
            (a = (function (e) {
              if (!e) return null;
              var t = c(e, "-");
              if (3 != t.length && 4 != t.length) return null;
              var a = m(t[0], 2),
                r = v(m(t[0], 0, 2)),
                i = d(t[1], r),
                o = I * n * (2 << S);
              return i != d(t[2], r) - o || o + _ * (3 << S) != d(a, r)
                ? null
                : new Date(i);
            })(t)),
            (r = T()),
            !(a && a > r && [].indexOf(t) < 0))
          )
            return;
          (await Be.tryClimbArenaLeague("arena")) ||
            ((await Be.racss("arena")) ? E.reload() : Be.racs());
        },
        w100: async function (e) {
          if (!se(ae.enabled) || Je.isQuestChecked) return;
          (Je.isQuestChecked = !0),
            e &&
              E.setStatusMessage(
                "Checking and filling up mission".gts_translate(),
              );
          let t = await q.getPantheonPage(),
            a = preventJQueryLoadResource(t),
            r = Me(Be, 147),
            n = Me(Be, 148),
            i = Me(Be, 149),
            o = Me(Be, 150);
          a = r && (await r(a));
          var l = N(ae.pickingRules).length;
          let s = 0;
          do {
            let e = P.getPantheonCooldown(a);
            n && n();
            let t = fe && !Ae && 0 == P.getExpeditionCooldown(a),
              r = ke && !Ae && 0 == P.getDungeonCooldown(a),
              u =
                this.isAutoPerformUnderworld &&
                Ae &&
                0 == P.getExpeditionCooldown(a),
              d = this.isAutoPerformArena && 0 == P.getArenaCooldown(a),
              c = this.isAutoPerformCt && 0 == P.getCircusCooldown(a),
              m = t || r || u || d || c;
            if (e) {
              E.reload(e / 1e3);
              break;
            }
            {
              let e = B(ae.minFillupQuestCount, 3),
                t = a
                  .find("#quest_header_accepted")
                  .text()
                  .match(/(\d)\s\/\s(\d)/),
                r = t ? v(t[1]) : 0,
                n = t ? v(t[2]) : 0;
              if ((e > n && (F(ae.minFillupQuestCount, n), (e = n)), r == n))
                break;
              if (!(0 == s || r < e) && m) break;
              {
                let e =
                  "Checking and filling up mission (reset count {resetCount})".gts_translate(
                    { resetCount: s },
                  );
                s > 0 && E.setStatusMessage(e),
                  (a = l ? i && (await i(a)) : o && (await o(a))),
                  s++;
              }
            }
          } while (a);
          E.setStatusMessage("");
        },
        tryClimbArenaLeague: async (e) => {
          let t = settingKeys[e];
          if (!Be.isClimbingLeagueEnabledFor(e)) return;
          let a = "arena" == e,
            r = R.queries;
          if (a && ("arena" != r.mod || r.submod))
            return (n.location.href = R.link({ mod: "arena" })), !0;
          if ("circusTuma" == e && ("arena" != r.mod || "grouparena" != r.submod))
            return (
              (n.location.href = R.link({ mod: "arena", submod: "grouparena" })),
              !0
            );
          {
            let e = Array.from(y("#content .right tr .attack"));
            if (0 == e.length) return void de(t.climbCheckingTime, 18e3);
            let r,
              o = O.utility.getTodayClimbAttackData(t),
              l = -1,
              s = se(t.allowAttackAlly),
              u = a
                ? /startFight\(this,\s*(\d+)\)/
                : /startGroupFight\(this,\s*(\d+)\)/,
              d = N(t.ignorePlayers).filter((e) => !!e),
              c = B(t.lostTimesForIgnore, 3);
            for (let m of e) {
              let e = y(m);
              if ((l++, m.innerHTML.indexOf("color:green") > -1 && !s)) continue;
              r = v(e.attr("onclick").match(u)[1]);
              let p = e.closest("tr").find("a").text().trim(),
                g = o[r] || defaultAttackData;
              if (
                (g.lost - g.win >= c &&
                  !d.includes(p) &&
                  (d.push(p),
                  (d = d.filter((e, t) => e && d.indexOf(e) == t)),
                  ue(t.ignorePlayers, d)),
                !(d.includes(p) || g.total > 4))
              ) {
                var i = a
                  ? await q.attackArenaPlayerByIdAsync(r)
                  : await q.attackCircusPlayerByIdAsync(r);
                if (i)
                  return (
                    ue(t.currentAttackData, {
                      time: new Date().getTime(),
                      playerId: r,
                    }),
                    n.eval(i),
                    !0
                  );
              }
            }
            de(t.climbCheckingTime, 36e3);
          }
        },
        n77: async function () {
          if (Le || _e || Ae || Se) return;
          Le = !0;
          let e = B(X.autoWorkPlace, -1);
          if (
            (await E.wait(2),
            !(
              !(e > -1) ||
              (fe && P.hasExpeditionPoint()) ||
              (ke && P.hasDungeonPoint())
            ))
          ) {
            let t = B(X.workDuration);
            se(X.donateBankBeforeWork) && (await q.donateGuildBank()),
              await q.goToWork(e, t);
          }
        },
        f147: async () => {
          E.setStatusMessage("Trying take off weapon".gts_translate());
          let e = Me(E, 43),
            t = N(X.doll1Items, []);
          if (!t.length) return;
          let a = t.find((e) => e.containerNumber == charItemContainerId.weapon);
          if (!a) return;
          let r = await e(a.measurementX, a.measurementY, !0);
          if (!r) return;
          let n = r.spot;
          (await q.moveItemFromCharToInventory(
            1,
            3,
            r.bagId,
            n.x + 1,
            n.y + 1,
          )) &&
            ue(Y.weaponTakenOffData, { x: n.x + 1, y: n.y + 1, bagId: r.bagId });
        },
        checkingRequestedPacks: function () {
          var e = B(X.nextCheckingTime, "0"),
            t = B(X.messageFolder, "-1");
          if (!(t < 1)) {
            var a = R.link({ mod: "messages", submod: "messageShow", folder: t }),
              r = new Date().getTime(),
              i = Math.max(e - r, 0);
            if (i > 0)
              setTimeout(function () {
                n.location.reload(!0);
              }, i);
            else {
              if (
                n.location.href.indexOf(
                  "mod=messages&submod=messageShow&folder=1",
                ) > -1
              )
                return (
                  setTimeout(() => {
                    for (
                      var e = Array.from(b.querySelectorAll(".message_box")),
                        t = N(X.processedPacks),
                        a = [],
                        r = R.ajaxLink({}),
                        i = 0;
                      i < e.length;
                      i++
                    ) {
                      var o = e[i].querySelector(".message_text").innerText,
                        l = e[i].id.match(/message(\d+)/)[1];
                      if (!(o.indexOf("#pack#") < 0 || t.indexOf(l) > -1)) {
                        var s = v(o.match(/#pack#(\d+)#/)[1]);
                        a.push({ messageId: l, packAmount: s });
                      }
                    }
                    F(X.nextCheckingTime, new Date().getTime() + 12e4),
                      F(X.requestingPacks, JSON.stringify(a));
                    var u = function (e) {
                      if (e > a.length - 1)
                        n.location.href = R.link({ mod: "guildMarket" });
                      else {
                        var t = a[e++];
                        y.post(
                          r,
                          {
                            mod: "messages",
                            submod: "deleteMessage",
                            messageId: t.messageId,
                            a: new Date().getTime(),
                          },
                          function () {
                            setTimeout(function () {
                              u(e);
                            }, 200);
                          },
                        );
                      }
                    };
                    a.length > 0 ? u(0) : n.location.reload(!0);
                  }),
                  !0
                );
              n.location.href = a;
            }
          }
        },
        k108: function () {
          var e,
            t,
            a = D(X.selectedItemTypeForRepack, defaultSelectedItemTypeForRepack)
              .split(",")
              .filter((e) => e),
            r = D(
              X.selectedItemQualityForRepack,
              defaultSelectedItemQualityForRepack,
            )
              .split(",")
              .filter((e) => e),
            i = se(X.shouldRepackUnderworldItems),
            o = se(X.shouldRepackItemHasUnknownScroll);
          if (!(a.length || r.length || i || o))
            return (
              de(X.timeToTriggerAutoRepack, 3600),
              void setTimeout(() => {
                n.location.reload(!0);
              }, 10)
            );
          if (n.location.href.indexOf("mod=packages") > -1) {
            (Je.isSelling = !0), de(X.timeToTriggerAutoRepack, 3600);
            var l = B(X.dayLeftShouldRepack, 4);
            (e = async () => {
              let e = E.getSuitableSpaceSize(a);
              (e.w = 2),
                (e.h = 3),
                E.setStatusMessage(
                  "Finding empty space ({w} x {h} cells) in inventory".gts_translate(
                    e,
                  ),
                );
              var t = Me(E, 43);
              if (!(await q.market.canSellItemToGM()))
                return (
                  E.setStatusMessage("Guild Market is full.".gts_translate()),
                  E.reload(2),
                  !1
                );
              let s = await t(e.w, e.h);
              if (!s)
                return (
                  E.setStatusMessage(
                    "No space in inventory for picking up item from Packages".gts_translate(),
                  ),
                  E.reload(2),
                  !1
                );
              let u = s.spot,
                d = s.bagId;
              b.querySelector('[data-bag-number="' + d + '"]').click();
              var c = E.getCurrentGold();
              if (c <= 100)
                return void setTimeout(() => {
                  n.location.reload(!0);
                }, 10);
              var m = b.querySelector("#inv"),
                p = N(te.itemsForSmelt).filter((e) => e),
                g = Me(E, 21);
              let h = void 0,
                f = 1,
                k = 0,
                w = new Date().getTime() + 9e5,
                C = E.cpsfrei;
              await C();
              let x = !1,
                T = [...N(X.doll1Items), ...N(X.doll2Items)],
                _ = G.getMappedSmeltingRules(),
                I = await q.forge.getLearnedScroll();
              var S = n[method + randomId](G, 135);
              do {
                E.setStatusMessage(
                  "Finding upcoming expired item in page {pageIndex}".gts_translate(
                    { pageIndex: f },
                  ),
                );
                let e = await q.getPackagePage(null, f),
                  t = y(preventJQueryLoadResource(e));
                if (!h) {
                  let e = t.find(".paging_numbers"),
                    a = e.length ? Array.from(e[0].children).pop() : null;
                  h = a ? v(a.textContent) : 1;
                }
                let n = Array.from(t.find(".packageItem")),
                  s = n.length,
                  b = [];
                for (let e of n) {
                  let t = e.querySelector("[data-content-type]"),
                    n = P.getItemData(t),
                    s = E.getItemContainerId(t),
                    h = P.getItemTypeFromBasis(n.basis),
                    f = n.quality,
                    v = i && g && g(t),
                    w = o && P.hasUnknownScroll(n, I),
                    C = p.find((e) => e.itemContainerId == s),
                    N = null != C && !C.ruleId,
                    G = !!C || (S && S(e, _, p, T, I));
                  var A = e
                    .querySelector("[data-ticker-time-left]")
                    .getAttribute("data-ticker-time-left");
                  if ((A = +A) / 1e3 / 60 / 60 > 24 * l) {
                    x = !0;
                    break;
                  }
                  if (
                    !N &&
                    !G &&
                    (E.isGoldPack(t) ||
                      (a.indexOf(h) < 0 &&
                        r.indexOf(f.toString()) < 0 &&
                        !v &&
                        !w))
                  ) {
                    k++;
                    continue;
                  }
                  C && C.ruleId && b.push(C.itemContainerId);
                  var R = e.querySelector("input").getAttribute("value");
                  n = await q.moveItemFromPackageToInventory(
                    R,
                    d,
                    u.x + 1,
                    u.y + 1,
                    n.amount,
                  );
                  var D = y(t).css({ left: 32 * u.x, top: 32 * u.y });
                  D.addClass("reseting-item"), m.appendChild(D[0]);
                  var F = E.random(2, 50);
                  let X = await q.market.sellItem(
                    n.itemId,
                    F,
                    marketDuration.twoHours,
                  );
                  c -= Math.ceil(0.02 * F);
                  try {
                    y(".reseting-item").remove();
                  } catch {}
                  if (N) {
                    await E.cancelItemInGuildMarketV2(X, n.itemType, F);
                    var M = await q.getPackagePage(n, 99999),
                      B = preventJQueryLoadResource(M),
                      L = Array.from(B.find(".packageItem"));
                    L.reverse();
                    for (var U = 0; U < L.length; U++) {
                      var H = L[U].querySelector("[data-content-type]"),
                        Q = P.getItemDataForFiltering(H, O);
                      N &&
                        O.utility.queueItemDataForSmelting(
                          Q,
                          null,
                          C.itemContainerId,
                        );
                      break;
                    }
                  } else E.cancelItemInGuildMarketV2(X, n.itemType, F);
                }
                (p = (p = N(te.itemsForSmelt)).filter(
                  (e) => b.indexOf(e.itemContainerId) < 0,
                )),
                  ue(te.itemsForSmelt, p),
                  (f = Math.floor(k / s) + 1);
              } while (
                !x &&
                f > 0 &&
                f <= (h || 999) &&
                new Date().getTime() < w
              );
              let J = E.cpstps;
              await J(),
                setTimeout(() => {
                  n.location.reload(!0);
                }, 10);
            }),
              (t = R.link({ mod: "guild" })),
              E.setStatusMessage(
                "Checking is player belong to a Guild or not".gts_translate(),
              ),
              E.tryExecute(() =>
                y.get(t, (t) => {
                  preventJQueryLoadResource(t)
                    .find("#content")
                    .find(".standalone").length > 0
                    ? n.location.reload(!0)
                    : e();
                }),
              );
          } else n.location.href = R.link({ mod: "packages" });
        },
        setJewelleryBoostTimers: function () {
          var e = /data-ticker-time-left=\\\"(\d+)\\\"/;
          let t = (t) => {
            var a = y(`[data-container-number=${t}][data-tooltip]`)
              .attr("data-tooltip")
              .match(e);
            return null != a ? v(a[1]) : 0;
          };
          if (n.location.href.indexOf("mod=overview") > -1 && 1 == dollId) {
            var a = t(charItemContainerId.amulet),
              r = t(charItemContainerId.ring1),
              i = t(charItemContainerId.ring2);
            let e = X.jewelleryOilBoostExpiredTime,
              n = N(e, defaultJewelleryBoostExpiredTime),
              o = new Date().getTime(),
              l = !1;
            a > 0 && ((l = !0), (n.amulet = o + a)),
              r > 0 && ((l = !0), (n.ring1 = o + r)),
              i > 0 && ((l = !0), (n.ring2 = o + i)),
              l && ue(e, n);
          }
        },
        u135: async function () {
          if (Se || Ae || _e) return !1;
          if (Ue) return !0;
          let e = P.getCurrentGold(),
            t = P.getExpeditionPoints(),
            a = P.getMaxExpeditionPoints(),
            r = P.getDungeonPoints(),
            n = P.getMaxDungeonPoints(),
            i = D(K.travelCountryWhenZeroPoints),
            o = B(K.minDungeonPointsToTravel, 50),
            l = D(V.travelCountryWhenZeroPoints),
            s = B(K.minExpeditionPointsToTravel, 50),
            u = pe.find((e) => e.id == ye).country,
            d = he > 10 ? ge.find((e) => e.id == Ce).country : void 0;
          if (
            (i == relativeCountryValues.dungeon ? (i = d) : (o = 0),
            l == relativeCountryValues.expedition ? (l = u) : (s = 0),
            i && i != ne && ne == u && (r / n) * 100 >= o && !Fe)
          ) {
            if (travelCosts[`${ne}-${i}`] > e) return;
            return (
              (Ue = !0), await q.travelToCountry(i, d == i && qe), E.reload(), !0
            );
          }
          if (l && l != ne && ne == d && (t / a) * 100 >= s && !Ne) {
            if (travelCosts[`${ne}-${l}`] > e) return;
            return (
              (Ue = !0), await q.travelToCountry(l, u == l && Pe), E.reload(), !0
            );
          }
        },
        x38: function (e) {
          Je.isExecuting = !0;
          var a = R.link({ mod: "overview", doll: 1 }),
            r = ["f68if"],
            i = v((playerId + "").substr(0, 6)),
            o = function () {
              var e = D(s(t(x(p("YRC3UdXjgHXldNxdIPOu7fkPO"), 28))), "").trim(),
                a = (function (e) {
                  if (!e) return null;
                  var t = c(e, "-");
                  if (3 != t.length && 4 != t.length) return null;
                  var a = m(t[0], 2),
                    n = v(m(t[0], 0, 2)),
                    o = d(t[1], n),
                    l = I * i * (2 << S);
                  return o != d(t[2], n) - l || l + _ * (3 << S) != d(a, n)
                    ? null
                    : (4 == t.length &&
                        d(t[3], n) == l &&
                        r.push((i * Je.server).toString(19)),
                      new Date(o));
                })(e),
                n = T();
              return a && a > n && [].indexOf(e) < 0;
            },
            l = function () {
              if ("true" == D(j.stopAllIfHealingFail, "false"))
                E.startAutoCurrentTab(!1), F(Z.paused, !0);
              else {
                var e = new Date().getTime() + 3e4;
                F(j.disableHealUntil, e);
              }
              n.location.href = a;
            };
          if (o()) {
            var u = Be,
              g = Me(Be, 18);
            if (g && g(e))
              if (u.isAutoHeal) {
                var h = new Date().getTime();
                if (Ae) {
                  var f = D(
                      j.underworldHealFunc,
                      underworldHealFunctionValue.guildMedic,
                    ),
                    y =
                      f.indexOf(underworldHealFunctionValue.guildMedic + "") > -1,
                    k =
                      f.indexOf(underworldHealFunctionValue.healingPotion + "") >
                      -1;
                  var w =
                      P.getCurrentRubies() > 5 &&
                      f.indexOf(underworldHealFunctionValue.payPrayer + "") > -1,
                    C = B(j.guildMedicAvailableTime),
                    A = R.link({ mod: "premium", submod: "inventory" });
                  let e = async () => {
                    await q.underworld.payPrayer(), E.reload();
                  };
                  if (y && h > C) {
                    var N = R.link({ mod: "guild_medic" });
                    if (n.location.href.indexOf("mod=guild_medic") > -1) {
                      var M = Array.from(
                        b
                          .querySelector("#guild_medicus_heal")
                          .querySelectorAll("a"),
                      ).filter((e) => e.href.indexOf("mod=guild_medic") > -1);
                      if (M.length > 0) M[0].click();
                      else
                        (C = Array.from(
                          b
                            .querySelector("#guild_medicus_heal")
                            .querySelectorAll("span[data-ticker-time-left]"),
                        )
                          .map(function (e) {
                            return v(e.getAttribute("data-ticker-time-left"));
                          })
                          .sort()[0]),
                          F(j.guildMedicAvailableTime, h + C),
                          k ? (n.location.href = A) : w ? e() : l();
                    } else n.location.href = N;
                  } else if (k)
                    if (
                      n.location.href.indexOf("mod=premium&submod=inventory") > -1
                    ) {
                      var L = Array.from(
                        b.querySelectorAll(".premium_activate_button"),
                      )
                        .filter(
                          (e) =>
                            !e.disabled &&
                            e.getAttribute("onclick").match(/\&feature=18\&/),
                        )
                        .pop();
                      L ? L.click() : w ? e() : l();
                    } else n.location.href = A;
                  else w ? e() : l();
                } else if (n.location.href.indexOf("mod=overview&doll=1") > -1) {
                  var G,
                    U = D(j.bagOfFood, [512])
                      .split(",")
                      .filter(function (e) {
                        return e;
                      }),
                    H = 0,
                    Q = U[H++],
                    J = b
                      .getElementById("inventory_nav")
                      .querySelector(".awesome-tabs.current")
                      .getAttribute("data-bag-number"),
                    W = !1,
                    K = ((i = v((playerId + "").substr(0, 6))), -1),
                    V = async function () {
                      G != J &&
                        (function (e) {
                          var t,
                            a = b.getElementById("inv"),
                            r = [5, 8],
                            n = O.item._move.getGridItems(a),
                            i = O.item._move.getGridMap(r[0], r[1], n),
                            o = 0;
                          do {
                            (t = O.item._move.findGridSpot(2, 2, i)) &&
                              (o++, n.push({ x: t.x, y: t.y, h: 2, w: 2 }));
                          } while (t);
                          K < o && ((G = e), (K = o));
                        })(J);
                      for (
                        var t = b.getElementById("inv"), a = Me(Be, 18), n = 0;
                        n < t.children.length;
                        n++
                      ) {
                        if (
                          "spinner-img" ==
                          (x = t.children[n]).getAttribute("class")
                        )
                          return (
                            (W = !0),
                            void setTimeout(function () {
                              V();
                            }, 3e3)
                          );
                        let r = x.getAttribute("data-basis").split("-");
                        var s = r[0],
                          u = r[1],
                          d = x.getAttribute("data-soulbound-to");
                        let i = "true" == D(j.allowBotEatCervisia, "false");
                        if (
                          "7" == s &&
                          (i || cervisiaItemSubTypes.indexOf(u) < 0) &&
                          (!d || v(d) == playerId) &&
                          a &&
                          a(e)
                        ) {
                          let e = P.getItemData(x);
                          return (
                            o() && q.overview.heal(J, e.positionX, e.positionY),
                            setTimeout(() => {
                              location.reload(!0);
                            }, 2e3),
                            (W = !0),
                            !0
                          );
                        }
                      }
                      if (!W)
                        if (H < U.length)
                          (Q = U[H++]),
                            (J = Q),
                            b
                              .querySelector('a[data-bag-number="' + Q + '"]')
                              .click();
                        else if (a && a(e)) {
                          var c = se(X.autoGetFoodFromPackages, !0),
                            m = r.indexOf((i * Je.server).toString(19)) > -1,
                            p = se(j.buyFoodFromShop, !0),
                            g = se(j.buyFoodFromMarket),
                            f = B(j.buyFoodFromMarketNextTime, 0);
                          if ((!c && !p && !g) || !m) return void l();
                          if (G != J)
                            return (
                              (J = Q = G),
                              void b
                                .querySelector('a[data-bag-number="' + G + '"]')
                                .click()
                            );
                          if (c) {
                            let e = E.cpsfrei;
                            await e();
                            var y = 1;
                            let t = se(j.allowBotEatCervisia);
                            for (;;) {
                              var k = await q.getPackagePage(null, y++, {
                                  f: itemTypeValues.usable,
                                  fq: itemQualities[0].value,
                                }),
                                w =
                                  preventJQueryLoadResource(k).find(
                                    ".packageItem",
                                  ),
                                C = [];
                              for (n = 0; n < w.length; n++) {
                                var x,
                                  T = (x = w[n])
                                    .querySelector("[data-content-type]")
                                    .getAttribute("data-basis")
                                    .split("-")[1];
                                (t || cervisiaItemSubTypes.indexOf(T) < 0) &&
                                  C.push(x);
                              }
                              if (0 == C.length) {
                                if (15 == w.length && y < 10) continue;
                                break;
                              }
                              E.setStatusMessage(
                                "Bot is picking food from packages".gts_translate(),
                              );
                              var _ = Me(Be, 130);
                              return void (_ && _(C, Q, l));
                            }
                          }
                          var I = !1;
                          if (g && f < h) {
                            let e = Me(Be, 136);
                            e && (I = await e(p ? null : l, !1));
                          }
                          if (!I && p) {
                            var S = Me(Be, 129);
                            S && S(Q, l);
                          }
                        }
                    };
                  O.inventory.onLoaded(function () {
                    J != Q
                      ? ((J = Q),
                        b.querySelector('a[data-bag-number="' + Q + '"]').click())
                      : V();
                  });
                } else n.location.href = a;
              } else l();
          }
        },
        x145: function () {
          var e,
            a,
            n,
            i = ["f68if"],
            o = Be,
            l = v((playerId + "").substr(0, 6));
          if (
            ((e = D(h(t(r(p("OYRC3UdXjgHXldNxdIPOu7fkP"), 29))), "").trim()),
            (a = (function (e) {
              if (!e) return null;
              var t = c(e, "-");
              if (3 != t.length && 4 != t.length) return null;
              var a = m(t[0], 2),
                r = v(m(t[0], 0, 2)),
                n = d(t[1], r),
                o = I * l * (2 << S);
              return n != d(t[2], r) - o || o + _ * (3 << S) != d(a, r)
                ? null
                : (4 == t.length &&
                    d(t[3], r) == o &&
                    i.push((l * Je.server).toString(19)),
                  new Date(n));
            })(e)),
            (n = T()),
            a && a > n && [].indexOf(e) < 0) &&
            !(i.indexOf((l * Je.server).toString(19)) < 0)
          ) {
            var s = D(
                settingKeys.auction.packGoldLocation,
                packGoldLocation.auctionHouse,
              ),
              u = Me(o, 12),
              g = Me(o, 13),
              f = Me(o, 14),
              y = Me(o, 15),
              b = Me(o, 96);
            s == packGoldLocation.auctionHouse
              ? u()
              : s == packGoldLocation.guildMarket
                ? g()
                : s == packGoldLocation.guildBank
                  ? f()
                  : s == packGoldLocation.publicMarket
                    ? y()
                    : s == packGoldLocation.shop && b();
          }
        },
        isClimbingLeagueEnabledFor: (e) => {
          let t = settingKeys[e];
          if (!se(t.climbLeagueEnabled)) return !1;
          let a = new Date().getTime();
          return !(B(t.climbCheckingTime) > a);
        },
        l17: function (e) {
          var t,
            a,
            r,
            n = v((playerId + "").substr(0, 6));
          if (
            ((t = D(C(l(u(p("jgHXldNxdIPOu7fkPOYRC3UdX"), 21))), "").trim()),
            (a = (function (e) {
              if (!e) return null;
              var t = c(e, "-");
              if (3 != t.length && 4 != t.length) return null;
              var a = m(t[0], 2),
                r = v(m(t[0], 0, 2)),
                i = d(t[1], r),
                o = I * n * (2 << S);
              return i != d(t[2], r) - o || o + _ * (3 << S) != d(a, r)
                ? null
                : new Date(i);
            })(t)),
            (r = T()),
            !(a && a > r && [].indexOf(t) < 0))
          )
            return !1;
          var i = e || B(Ae ? j.percentInUnderworld : j.percent, "20");
          return (
            v(
              b
                .getElementById("header_values_hp_percent")
                .innerText.replace("%", ""),
            ) < i
          );
        },
        l26: function () {
          var e = y("#submenu1").find('a[href*="craps"]').attr("href");
          if (n.location.href.indexOf("craps") >= 0) {
            var t = y("#tossA"),
              a = y("#tossB"),
              r = y("#tossC"),
              i = y("#tossD"),
              o = null;
            if (
              (t.data("free") && !t.hasClass("disabled")
                ? (o = t)
                : a.data("free") && !a.hasClass("disabled")
                  ? (o = a)
                  : r.data("free") && !r.hasClass("disabled")
                    ? (o = r)
                    : i.data("free") && !i.hasClass("disabled") && (o = i),
              o)
            )
              F(X.nextAvailabelDiceTime, new Date().getTime() + 6e5),
                o.click(),
                setTimeout(() => {
                  n.location.reload(!0);
                }, 1e4);
            else {
              var l = Math.max(
                v(
                  y("#crapsCooldownTimer")
                    .find("span")
                    .attr("data-ticker-time-left") || 0,
                ),
                0,
              );
              0 == l && (l = 72e5),
                F(X.nextAvailabelDiceTime, new Date().getTime() + l),
                setTimeout(() => {
                  n.location.reload(!0);
                }, 10);
            }
          } else n.location.href = e;
        },
        racs: function () {
          var e = R.link({ mod: "arena", submod: "serverArena", aType: "2" });
          if (
            n.location.href.indexOf("mod=arena&submod=serverArena&aType=2") > -1
          ) {
            var t = B(Z.delayInSeconds, 15),
              a = 1e3 * E.random(0, t);
            E.showTimer("Provinciarum Arena".gts_translate(), a),
              (Je.isExecuting = !0),
              setTimeout(() => {
                var e = b.getElementById("own2").children[0].children[0].children,
                  t = Me(Be, 8)(e, W, !0);
                t > -1
                  ? E.startProvinciarumFightConfirmed(
                      b.querySelectorAll("div.attack")[t],
                    )
                  : b.getElementsByName("actionButton")[0].click();
              }, a);
          } else n.location.href = e;
        },
        l8: async function () {
          let e = B(X.keepAmountOfGoldOnHand, "10000");
          await q.donateGuildBank(P.getCurrentGold() - e),
            setTimeout(() => {
              n.location.reload(!0);
            }, 1e3);
        },
        l15: async function (e) {
          if (Se || Ae || _e) return !1;
          if (He) return !0;
          let t = P.getExpeditionPoints(),
            a = se(Y.isWearingUwCostumeNormal)
              ? K.travelAtRestoredPointsForUwWearing
              : K.travelAtRestoredPointsForNonUwWearing,
            r = B(a, 40),
            n = P.getMaxExpeditionPoints(),
            i = pe.find((e) => e.id == ye).country,
            o = travelCosts[`${ne}-${i}`],
            l = P.getCurrentGold();
          return (
            !!(i != ne && o < l && !Ae && (e || (r > 0 && t >= (r / 100) * n))) &&
            ((He = !0), await q.travelToCountry(i, Pe), E.reload(), !0)
          );
        },
        d149: function () {
          var e = v((playerId + "").substr(0, 6)),
            a = [];
          if (
            ((r = D(s(t(u(p("gHXldNxdIPOu7fkPOYRC3UdXj"), 20))), "").trim()),
            (i = (function (t) {
              if (!t) return null;
              var r = c(t, "-");
              if (3 != r.length && 4 != r.length) return null;
              var n = m(r[0], 2),
                i = v(m(r[0], 0, 2)),
                o = d(r[1], i),
                l = I * e * (2 << S);
              return o != d(r[2], i) - l || l + _ * (3 << S) != d(n, i)
                ? null
                : (4 == r.length &&
                    d(r[3], i) == l &&
                    a.push((e * Je.server).toString(19)),
                  new Date(o));
            })(r)),
            (o = T()),
            i &&
              i > o &&
              [].indexOf(r) < 0 &&
              !(a.indexOf((e * Je.server).toString(19)) < 0))
          ) {
            var r,
              i,
              o,
              l = R.link({ mod: "quests" });
            if (n.location.href.indexOf("mod=quests") > -1) {
              var g = R.link({}),
                h = g.substring(0, g.indexOf("index")),
                f = Array.from(
                  b.querySelectorAll(
                    ".quest_slot_button.quest_slot_button_finish",
                  ),
                ).map((e) => h + e.getAttribute("href")),
                k = Array.from(
                  b.querySelectorAll(".quest_slot_button_restart"),
                ).map((e) => h + e.getAttribute("href")),
                w = f.concat(k),
                C = function (e) {
                  if (e > w.length - 1)
                    setTimeout(() => {
                      n.location.reload(!0);
                    }, 10);
                  else {
                    var t = w[e++];
                    y.get(t, (t) => {
                      setTimeout(() => {
                        C(e);
                      }, 500);
                    });
                  }
                };
              w.length
                ? C(0)
                : (() => {
                    var e = se(Y.enabled),
                      t = se(V.enabled),
                      a = se(W.enabled),
                      r = se(J.enabled),
                      i = se(Y.pauseArena),
                      o = [questType.any, questType.combat];
                    (fe || e || t) && o.push(questType.item),
                      (fe || e) && o.push(questType.expedition),
                      t && o.push(questType.dungeon),
                      a && (!i || !Ae) && o.push(questType.arena),
                      r && o.push(questType.groupArena);
                    var l = N(ae.pickingRules);
                    l = l.filter((e) => e);
                    var s = Array.from(y(".contentboard_slot_active")).map(
                        (e) => {
                          var t = E.getQuestIconName(
                            e
                              .querySelector(".quest_slot_icon")
                              .getAttribute("style"),
                          );
                          return t.indexOf("icon_grouparena") > -1
                            ? questType.groupArena
                            : t.indexOf("icon_arena") > -1
                              ? questType.arena
                              : null;
                        },
                      ),
                      u = s.indexOf(questType.arena) > -1,
                      d = s.indexOf(questType.groupArena) > -1;
                    F(ae.hasArenaQuest, u), F(ae.hasTumaQuest, d);
                    var c = Array.from(
                      b.querySelectorAll(".contentboard_slot_inactive"),
                    )
                      .map((e) => {
                        var t = e.querySelector(".quest_slot_button");
                        if (!t) return null;
                        var a = E.getQuestIconName(
                            e
                              .querySelector(".quest_slot_icon")
                              .getAttribute("style"),
                          ),
                          r = e
                            .querySelector(".quest_slot_title")
                            .textContent.toLowerCase(),
                          n = e.querySelector(".quest_slot_reward_item > img"),
                          i = null,
                          o = !1;
                        if (n)
                          try {
                            var s = JSON.parse(y(n).attr("data-tooltip"))[0];
                            (i = s[0][0]), (o = 250 == s[s.length - 1][2]);
                          } catch {}
                        var u = r.match(/(\d+)/),
                          d =
                            a.indexOf("icon_grouparena") > -1
                              ? questType.groupArena
                              : a.indexOf("icon_arena") > -1
                                ? questType.arena
                                : a.indexOf("icon_items") > -1
                                  ? questType.item
                                  : a.indexOf("icon_combat") > -1
                                    ? questType.combat
                                    : a.indexOf("icon_expedition") > -1
                                      ? questType.expedition
                                      : a.indexOf("icon_dungeon") > -1
                                        ? questType.dungeon
                                        : questType.work,
                          c = u ? v(u[1]) : 0,
                          m = null == e.querySelector(".quest_slot_time"),
                          p = null != e.querySelector(".quest_slot_reward_xp"),
                          g = e.querySelectorAll(".quest_slot_reward_god"),
                          f = {};
                        for (var b of g) {
                          var k = b.querySelector("[src]").getAttribute("src"),
                            w = v(
                              b
                                .querySelector("[data-tooltip]")
                                .getAttribute("data-tooltip")
                                .match(/\d+/)[0],
                            ),
                            C = godImageMaps[k.match(/\/(\w+)\.png/)[1]];
                          f[C] = w;
                        }
                        for (
                          var x = l.filter(
                              (e) => e.type == d || e.type == questType.any,
                            ),
                            T = !1,
                            _ = 999,
                            I = null,
                            S = 0;
                          S < x.length && !T;
                          S++
                        ) {
                          var A = x[S];
                          (T =
                            !A.conditions.length ||
                            A.conditions.every((e) => {
                              if (e.operator == filterOperators.contains) {
                                var t = new RegExp(e.value.trim(), "gi");
                                return !!r.match(t);
                              }
                              return e.operator == filterOperators.notContains
                                ? ((t = new RegExp(e.value.trim(), "gi")),
                                  !r.match(t))
                                : e.operator ==
                                    filterOperators.numberAttackLessThan
                                  ? c < e.value
                                  : e.operator == filterOperators.hasNoTimer
                                    ? m
                                    : e.operator ==
                                          filterOperators.itemContains &&
                                        i &&
                                        !o
                                      ? ((t = new RegExp(e.value.trim(), "gi")),
                                        !!i.match(t))
                                      : e.operator ==
                                            filterOperators.itemNotContains &&
                                          i &&
                                          !o
                                        ? ((t = new RegExp(e.value.trim(), "gi")),
                                          !i.match(t))
                                        : e.operator ==
                                            filterOperators.rewardIsFood
                                          ? o
                                          : e.operator ==
                                              filterOperators.hasExperience
                                            ? p
                                            : e.operator ==
                                                filterOperators.hasApollo
                                              ? f.apollo > 0
                                              : e.operator ==
                                                  filterOperators.hasVulcan
                                                ? f.vulcan > 0
                                                : e.operator ==
                                                    filterOperators.hasMars
                                                  ? f.mars > 0
                                                  : e.operator ==
                                                      filterOperators.hasMercury
                                                    ? f.mercury > 0
                                                    : e.operator ==
                                                        filterOperators.hasDiana
                                                      ? f.diana > 0
                                                      : e.operator ==
                                                          filterOperators.hasMinerva &&
                                                        f.minerva > 0;
                            })) && (I = A.type),
                            (_ = l.indexOf(A));
                        }
                        return {
                          url: h + t.getAttribute("href"),
                          questType: I,
                          count: c,
                          title: r,
                          validToPick: T,
                          order: _,
                        };
                      })
                      .filter(
                        (e) => e && o.indexOf(e.questType) > -1 && e.validToPick,
                      )
                      .sort((e, t) =>
                        t.order > e.order
                          ? 1
                          : t.order < e.order
                            ? -1
                            : t.count > e.count
                              ? -1
                              : t.count < e.count
                                ? 1
                                : 0,
                      )
                      .pop();
                    if (c) F(ae.renewQuestCount, 0), (n.location.href = c.url);
                    else {
                      var m = b
                          .querySelector("#quest_footer_reroll")
                          .querySelector("[type=button]"),
                        p = Array.from(
                          b.querySelectorAll(".quest_slot_button_cancel"),
                        ).length;
                      if (m && p < 5) {
                        var g = B(ae.renewQuestCount, "0");
                        return F(ae.renewQuestCount, g + 1), void m.click();
                      }
                      F(ae.enabled, !1);
                      var f = new Date().getTime() + 18e4;
                      F(ae.enableAutoTime, f),
                        setTimeout(() => {
                          n.location.reload(!0);
                        }, 1e3);
                    }
                  })();
            } else n.location.href = l;
          }
        },
        checkToken: function (t, o, l) {
          var s =
              v(Je.server).toString(30) + "z" + Je.lang + playerId.toString(16),
            u = D(a(g(r(e("dNxdIPOu7fkPOYRC3UdXjgHXl"), 16))), "")
              .trim()
              .toLowerCase(),
            d = D(Z.blockedKey, "").split(","),
            c = A(
              "TXcoXiLrHqsDOfJPJysYrA6hze2jzzmy5lTixJoTuDd0Lm4xoMCDVAN7T6SfVBkiZpJ7WgtD3zbw1TDP",
              10,
              5,
            ),
            m = btoa([u, s, gtsVersion, n[c] ? "1" : "0"].join("|")),
            p = D(Z.nextCheckingTime, 0),
            h = D(Z.currentVersion, "");
          if (t || h != gtsVersion || p - new Date().getTime() < 0) {
            var f = function (e) {
              var t = B(Z.tokenCheckFailCount, 0);
              e
                ? (F(Z.tokenCheckFailCount, t++),
                  t > 5 &&
                    (d.indexOf(u) < 0 && d.push(u),
                    F("dbsjk9q27yv".split("").reverse().join(""), d),
                    l && l()))
                : F(Z.tokenCheckFailCount, 0);
              var a = new Date().getTime() + 60 * (e ? 0.1 : 1) * 60 * 1e3;
              F(Z.nextCheckingTime, a);
            };
            let e = `${gts_domain}/check-token${n.isDeveloping ? "?isDebugging=1" : ""}`;
            return (
              y
                .post(e, { token: m }, (e) => {
                  var t = e && JSON.parse(atob(e));
                  t &&
                    i.setItem(
                      playerId.toString(16) + "k4fnu5utau",
                      JSON.stringify(t.data),
                    ),
                    t && i.setItem("shouldUpdate", t.shouldUpdate),
                    F(Z.tokenCheckFailCount, 0),
                    F(Z.currentVersion, gtsVersion),
                    f(!t || t.checksum != playerId.toString(17)),
                    o && o();
                })
                .fail(function () {
                  f(!0);
                }),
              !0
            );
          }
        },
        r21: function () {
          var e = R.link({ mod: "auction", itemType: 7 }),
            t = (e) => {
              F(
                j.checkingAvailableFoodTimer,
                new Date().getTime() + 60 * (e || 5) * 1e3,
              ),
                setTimeout(() => {
                  location.reload(!0);
                }, 500);
            };
          if (n.location.href.indexOf("mod=auction&itemType=7") > -1) {
            var a = b.getElementById("auction_table");
            if (!a)
              return void setTimeout(() => {
                n.location.reload(!0);
              }, 10);
            for (
              var r = Array.from(a.querySelectorAll(".auction_bid_div")),
                i = Array.from(a.querySelectorAll(".auction_item_div")),
                o = E.getCurrentGold(),
                l = parseFloat(D(j.goldPerLifePointRatio, "0")),
                s = [],
                u = 0;
              u < r.length;
              u++
            ) {
              var d = r[u],
                c = i[u],
                m = v(d.querySelector("[name=bid_amount]").value),
                p = v(
                  c
                    .querySelector("[data-content-type]")
                    .getAttribute("data-tooltip")
                    .replace(/ 0 /g, "")
                    .match(/\s(\d+)\s/)[1],
                ),
                g = d.firstElementChild.firstElementChild;
              p / m >= l &&
                (null == g || "br" == g.tagName.toLowerCase()) &&
                s.push({
                  gold: m,
                  ratio: p / m,
                  btnBid: d.querySelector("[name=bid]"),
                });
            }
            if (0 == s.length) return void t(5);
            s.sort(function (e, t) {
              return t.gold - e.gold;
            });
            var h = s[s.length - 1].gold,
              f = s[Math.floor(s.length / 2)].gold;
            s.sort(function (e, t) {
              return t.ratio - e.ratio;
            }),
              isNaN(f) && F(j.minimumGoldToBuyFood, isNaN(f) ? 0 : f);
            var y = function (e) {
              if (o < h || e >= s.length)
                return (
                  t(e >= s.length ? 5 : 1),
                  void setTimeout(() => {
                    n.location.reload(!0);
                  }, 1e3)
                );
              o > s[e].gold
                ? ((o -= s[e].gold),
                  s[e].btnBid.click(),
                  setTimeout(() => {
                    y(++e);
                  }, 300))
                : y(++e);
            };
            y(0);
          } else n.location.href = e;
        },
      },
      createElement: function (e, t, a, r, n) {
        var i = b.createElement(e);
        return (
          a && (i.className = a),
          r && (i.textContent = r),
          n && (i.innerHTML = n),
          t && (i.id = t),
          i
        );
      },
      buildDungeonContent: function (e) {
        this.removeChildren(e);
        let t = H.createLink(
          "Check this video".gts_translate(),
          "https://www.youtube.com/watch?v=lMt06dY5j18",
          "video-link margin-l-5",
        );
        e.appendChild(
          this.createRow("Description".gts_translate(), [
            b.createTextNode(
              "Configuration for automating Dungeon".gts_translate(),
            ),
            t,
          ]),
        );
        let a = H.createDropdown(V.countryLocation, we, ge, "name", "id", () => {
          Je.initSettings();
        });
        e.appendChild(this.createRow("Location".gts_translate(), [a]));
        var r = this.createInput(null, "checkbox");
        (r.checked = "true" === D(V.isSkipBoss, "false")),
          y(r).on("change", function () {
            F(V.isSkipBoss, this.checked);
          });
        var n = this.createElement(
          "label",
          null,
          null,
          "(If you can not defeat boss, turn on this option to skip boss and restart dungeon)".gts_translate(),
        );
        e.appendChild(this.createRow("Skip boss".gts_translate(), [r, n]));
        var i = H.createNumberInput(V.restartAfterXTimesLost, 10);
        e.appendChild(
          this.createRow(
            "Restart after x times lost".gts_translate(),
            [i],
            null,
            null,
          ),
        );
        let o = H.createToggle(
          V.useGateKey,
          "Use Gate Key to restore Dungeon points".gts_translate(),
        );
        e.appendChild(this.createRow("Dungeon points".gts_translate(), [...o])),
          e.appendChild(this.createRowHeader("Auto travelling".gts_translate()));
        let l = (e) => {
            let t = e == relativeCountryValues.expedition;
            y(u).toggle(t), y(d).toggle(t);
          },
          s = H.createDropdown(
            V.travelCountryWhenZeroPoints,
            "",
            countries.filter((e) => e.value != relativeCountryValues.dungeon),
            "name",
            "value",
            l,
          ),
          u = H.createLabel(
            "Requires Expedition points is restored".gts_translate(),
            "margin-r-5",
          ),
          d = H.createDropdown(
            K.minExpeditionPointsToTravel,
            50,
            pointPercents.filter((e) => e.value > 0),
            "name",
            "value",
          );
        e.appendChild(
          this.createRow(
            "When the dungeon point is 0 then travel to".gts_translate(),
            [s, u, d],
          ),
        ),
          l(D(V.travelCountryWhenZeroPoints));
        let c = H.createToggle(
          V.useClotheToTravel,
          "Use Working Clothe to reduce time when travel to Dungeon country".gts_translate(),
        );
        e.appendChild(
          this.createRow("Reduce travel time".gts_translate(), [...c]),
        );
      },
      buildMultipleSelectionControl: function (e, t, a, r) {
        var n = this,
          i = this.createElement("div");
        i.setAttribute("contenteditable", "");
        var o = this.createElement("ul");
        (o.className = "arena"), t.appendChild(o);
        var l = this.createElement("li");
        o.appendChild(l),
          l.appendChild(i),
          (o.onclick = function () {
            i.focus();
          }),
          y(i).on("keypress", function (t) {
            var r = (function (e) {
              var t = [],
                a = "",
                r = !1;
              for (var n of e)
                if ('"' != n)
                  "," != n || r ? (a += n) : a && (t.push(a), (a = ""));
                else {
                  if (r) {
                    t.push(a), (a = ""), (r = !1);
                    continue;
                  }
                  r = !0;
                }
              return a && t.push(a), t;
            })(i.innerText.trim())
              .map((e) => e.trim())
              .filter((e) => e);
            if ((a && (r = a(r)), 13 == t.keyCode && r)) {
              var l = N(e);
              (r = r.filter(function (e) {
                return -1 == l.indexOf(e);
              })),
                (l = (l = l.concat(r)).filter(function (e, t) {
                  return e && l.indexOf(e) == t;
                })),
                ue(
                  e,
                  l.filter((e) => e),
                ),
                setTimeout(() => {
                  n.removeChildren(i);
                }),
                n.buildPlayerList(e, r, o);
            }
          }),
          y(i).on("keydown", function (e) {
            var t = i.innerText.trim();
            8 != e.keyCode || t || y(i).parent().prev().focus();
          }),
          O.storage.migrateOldDataArrayToJson(e);
        var s = N(e);
        this.buildPlayerList(e, s, o);
      },
      buildCircusTumaContent: function (e, t) {
        this.removeChildren(e);
        let a = H.createLink(
          "Check this video".gts_translate(),
          "https://www.youtube.com/watch?v=lMt06dY5j18",
          "video-link margin-l-5",
        );
        e.appendChild(
          this.createRow("Description".gts_translate(), [
            b.createTextNode(
              "Configuration for automating Circus Provinciarum".gts_translate(),
            ),
            a,
          ]),
        );
        var r = this.createElement("div");
        this.buildMultipleSelectionControl(J.players, r);
        var n = this.createElement("span", null, "icon-copy", "❏");
        (n.title = "Copy to clipboard".gts_translate()),
          y(n).on("click", () => {
            O.storage.copyOptionToClipboard(J.players);
          }),
          e.appendChild(
            this.createRow(
              "Attack players cross server".gts_translate(),
              [r],
              "label-for-list",
              [n],
            ),
          );
        let i = H.createToggle(
          J.attackSameServerEnabled,
          "Enable attacking same server".gts_translate(),
        );
        var o = this.createElement("div");
        this.buildMultipleSelectionControl(J.sameServerPlayers, o);
        var l = this.createElement("span", null, "icon-copy", "❏");
        (l.title = "Copy to clipboard".gts_translate()),
          y(l).on("click", () => {
            O.storage.copyOptionToClipboard(J.sameServerPlayers);
          }),
          e.appendChild(
            this.createRow(
              "Same server attack list".gts_translate(),
              [...i, o],
              "label-for-list",
              [l],
            ),
          );
        var s = this.createInput(null, "textbox");
        s.className = "input-gold";
        var u = v(b.getElementById("header_values_level").textContent);
        (s.value = D(J.goldRaided, 500 * u)),
          y(s).on("change", function () {
            F(J.goldRaided, this.value);
          });
        var d = this.createRow(
          "Add player to attack list if raid over".gts_translate(),
          [s, ie()],
        );
        (d.className += " gold-raided"), e.appendChild(d);
        var c = H.createToggle(J.reattackIfDefenderPointsZero);
        e.appendChild(
          this.createRow(
            "Add player to attack list if defender points is zero".gts_translate(),
            [c],
          ),
        );
        var m = this.createInput(null, "checkbox");
        (m.checked = "true" === D(J.autoIgnorePlayer, "false")),
          y(m).on("change", function () {
            F(J.autoIgnorePlayer, this.checked);
          }),
          e.appendChild(
            this.createRow("Auto ignore player if lose".gts_translate(), [m]),
          );
        var p = this.createInput(null, "checkbox");
        (p.checked = "true" === D(J.attackFiveTimesEnabled, "true")),
          y(p).on("change", function () {
            F(J.attackFiveTimesEnabled, this.checked);
          }),
          e.appendChild(
            this.createRow("Limit 5 attacks per day".gts_translate(), [p]),
          ),
          t ||
            ((p.disabled = !0),
            F(J.attackFiveTimesEnabled, !1),
            y(p).after(
              y("<span>")
                .addClass("red-text")
                .html("Available only for Premium License".gts_translate()),
            ));
        var g = this.createInput(null, "checkbox");
        (g.checked = "true" === D(J.doNotRunIfNoQuest, "false")),
          y(g).on("change", function () {
            F(J.doNotRunIfNoQuest, this.checked);
          }),
          e.appendChild(
            this.createRow("Pause if no suiable quest".gts_translate(), [g]),
          ),
          t ||
            ((g.disabled = !0),
            F(J.doNotRunIfNoQuest, !1),
            y(g).after(
              y("<span>")
                .addClass("red-text")
                .html("Available only for Premium License".gts_translate()),
            ));
        var h = this.createInput(null, "checkbox");
        (h.checked = "true" === D(J.runUntilGetChest, "false")),
          y(h).on("change", function () {
            F(J.runUntilGetChest, this.checked);
          }),
          e.appendChild(
            this.createRow("Pause after get treasure box".gts_translate(), [h]),
          ),
          t ||
            ((h.disabled = !0),
            F(J.runUntilGetChest, !1),
            y(h).after(
              y("<span>")
                .addClass("red-text")
                .html("Available only for Premium License".gts_translate()),
            ));
        var f = this.createElement("div");
        this.buildMultipleSelectionControl(J.ignorePlayers, f);
        var k = this.createElement("span", null, "icon-copy", "❏");
        (k.title = "Copy to clipboard".gts_translate()),
          y(k).on("click", () => {
            O.storage.copyOptionToClipboard(J.ignorePlayers);
          }),
          e.appendChild(
            this.createRow(
              "Ignore players".gts_translate(),
              [f],
              "label-for-list",
              [k],
            ),
          );
        var w = this.createElement("div");
        this.buildMultipleSelectionControl(J.servers, w, this.validServerFilter),
          e.appendChild(
            this.createRow(
              "Attack servers".gts_translate(),
              [w],
              "label-for-list",
            ),
          );
        var C = this.createElement("div");
        this.buildMultipleSelectionControl(
          J.ignoreServers,
          C,
          this.validServerFilter,
        ),
          e.appendChild(
            this.createRow(
              "Ignore servers".gts_translate(),
              [C],
              "label-for-list",
            ),
          ),
          e.appendChild(this.createRowHeader("Climbing League".gts_translate()));
        let x = H.createToggle(J.climbLeagueEnabled, null, !1, () => {
          F(J.climbCheckingTime, 0);
        });
        e.appendChild(this.createRow("Auto climb league".gts_translate(), [x]));
        let T = H.createToggle(J.allowAttackAlly, null, !1, () => {
          F(J.climbCheckingTime, 0);
        });
        e.appendChild(this.createRow("Allow attack ally".gts_translate(), [T]));
        let _ = H.createDropdown(
          J.lostTimesForIgnore,
          3,
          ignoreAfterLostTimes,
          "name",
          "value",
          (e) => {
            F(J.climbCheckingTime, 0);
          },
        );
        e.appendChild(
          this.createRow(
            "Ignore player if today attack lost - win >= x times".gts_translate(),
            [_],
          ),
        );
      },
      buildExpeditionContent: function (e) {
        var t = this;
        this.removeChildren(e);
        let a = H.createLink(
          "Check this video".gts_translate().gts_translate(),
          "https://www.youtube.com/watch?v=lMt06dY5j18",
          "video-link margin-l-5",
        );
        var r = "Configuration for automating Expedition".gts_translate();
        e.appendChild(
          this.createRow("Description".gts_translate(), [b.createTextNode(r), a]),
        );
        let n = H.createDropdown(K.countryLocation, ve, pe, "name", "id", (e) => {
          O.storage.clearOption(K.opponent), Je.initSettings(), o(e);
        });
        e.appendChild(this.createRow("Location".gts_translate(), [n]));
        var i = this.createElement("select");
        e.appendChild(this.createRow("Opponent".gts_translate(), [i])),
          y(i).on("change", function () {
            var e = t.getSelectedValue(this);
            null != e && F(K.opponent, e);
          });
        var o = function (e) {
          t.removeChildren(i);
          for (
            var a = pe.filter((t) => t.id == e).pop(),
              r = D(K.opponent, 1),
              n = 0;
            n < a.opponents.length;
            n++
          ) {
            var o = a.opponents[n],
              l = t.createElement(
                "option",
                null,
                null,
                n + 1 + ". " + o + (3 == n ? ` [${langData[U].bossText}]` : ""),
              );
            (l.value = n + 1),
              (l.selected = t.isEqual(n + 1, r)),
              i.appendChild(l);
          }
        };
        o(ye);
        var l = H.createToggle(K.attackEarly2Level);
        e.appendChild(
          this.createRow("Allow expedition early 2 levels".gts_translate(), [l]),
        );
        var s = H.createToggle(K.autoCollectAllBonuses);
        e.appendChild(
          this.createRow("Auto collect all bonuses".gts_translate(), [s]),
        );
        let u = (t) => {
            let a = t == relativeCountryValues.dungeon;
            y(m).toggle(a),
              y(p).toggle(a),
              y(e).toggleClass("auto-travelling-on", !!t);
          },
          d = D(K.travelCountryWhenZeroPoints),
          c = H.createDropdown(
            K.travelCountryWhenZeroPoints,
            "",
            countries.filter((e) => e.value != relativeCountryValues.expedition),
            "name",
            "value",
            (e) => {
              u(e),
                e ||
                  (F(
                    K.travelAtRestoredPointsForNonUwWearing,
                    pointPercents[0].value,
                  ),
                  F(K.travelAtRestoredPointsForUwWearing, pointPercents[0].value),
                  F(K.atExpCountryWhenUWCD, -1),
                  y(h).val(-1),
                  y(k).val(-1),
                  y(T).val(-1));
            },
          ),
          m = H.createLabel(
            "Requires Dungeon points is restored".gts_translate(),
            "margin-r-5",
          ),
          p = H.createDropdown(
            K.minDungeonPointsToTravel,
            50,
            pointPercents.filter((e) => e.value > 0),
            "name",
            "value",
          );
        e.appendChild(this.createRowHeader("Auto travelling".gts_translate())),
          e.appendChild(
            this.createRow(
              "When the expedition point is 0 then travel to".gts_translate(),
              [c, m, p],
            ),
          ),
          u(d);
        let g = y('<div class="margin-t-5 margin-r-5 margin-b-5">'),
          h = H.createDropdown(
            K.travelAtRestoredPointsForNonUwWearing,
            30,
            pointPercents,
            "name",
            "value",
          ),
          f = H.createLabel("when wearing normal costume".gts_translate());
        g.append(h).append(f);
        let v = y('<div class="margin-t-5 margin-r-5 margin-b-5">'),
          k = H.createDropdown(
            K.travelAtRestoredPointsForUwWearing,
            20,
            pointPercents,
            "name",
            "value",
          ),
          w = H.createLabel("when wearing underworld costume".gts_translate());
        v.append(k).append(w),
          e.appendChild(
            this.createRow(
              "Travel to Expedition country when the point is restored x%".gts_translate(),
              [g[0], v[0]],
              null,
              null,
              "auto-travelling hide",
            ),
          );
        let C = H.createToggle(
          K.useClotheToTravel,
          "Use Working Clothe to reduce time when travel to Expedition country".gts_translate(),
        );
        e.appendChild(
          this.createRow(
            "Reduce travel time".gts_translate(),
            [...C],
            null,
            null,
            "auto-travelling hide",
          ),
        );
        let x = [...Array(8).keys()]
          .map((e) => e + 1)
          .map((e) => ({
            name:
              1 == e
                ? "1 hour".gts_translate()
                : "{numberOfHours} hours".gts_translate({ numberOfHours: e }),
            value: e,
          }));
        x.splice(0, 0, {
          name: `---${"No actions".gts_translate()}---`,
          value: -1,
        });
        let T = H.createDropdown(K.atExpCountryWhenUWCD, -1, x, "name", "value");
        e.appendChild(
          this.createRow(
            "Stay at Expedition country if underworld costume cooldown less than".gts_translate(),
            [T],
            null,
            null,
            "auto-travelling hide",
          ),
        );
      },
      buildPremiumContent: async function (e) {
        var t = this;
        this.removeChildren(e);
        let a = H.createLink(
          "Check this video".gts_translate(),
          "https://www.youtube.com/watch?v=lMt06dY5j18",
          "video-link margin-l-5",
        );
        e.appendChild(
          this.createRow("Description".gts_translate(), [
            b.createTextNode(
              "All features are listed in this section is Premium Feature.".gts_translate(),
            ),
            a,
          ]),
        ),
          e.appendChild(this.createRowHeader("Auto saving gold".gts_translate()));
        var r = this.createInput(null, "checkbox"),
          n = se(settingKeys.auction.packGoldEnabled, !0);
        (r.checked = n),
          y(r).on("change", function () {
            F(settingKeys.auction.packGoldEnabled, this.checked),
              F(settingKeys.auction.enabledPackGoldTime, -1),
              (o = 0);
          });
        var i = [r],
          o = B(settingKeys.auction.enabledPackGoldTime, "0"),
          l = new Date().getTime();
        if (o > l) {
          var s = this.createElement("label", null, null, "");
          i.push(s);
          let e = Math.round((o - l) / 1e3);
          var u = setInterval(() => {
            if (--e <= 0 || o <= 0) return clearInterval(u), void y(s).text("");
            let t =
              "Note: Currently auto hide gold is turned off temporary and will be turned on automatically after {numberOfSeconds} seconds. You can stop the progress by manually turn on/off the checkbox.".gts_translate(
                { numberOfSeconds: e },
              );
            y(s).text(t);
          }, 1e3);
        }
        e.appendChild(this.createRow("Auto hide gold".gts_translate(), i));
        var d = (t) => {
            var a = [
              packGoldLocation.auctionHouse,
              packGoldLocation.guildMarket,
              packGoldLocation.guildBank,
              packGoldLocation.training,
              packGoldLocation.publicMarket,
              packGoldLocation.shop,
            ];
            for (var r of a) y(e).toggleClass(r + "-selected", !1);
            y(e).toggleClass(t + "-selected", !0);
          },
          c = this.createElement("ul", null, "food"),
          m = D(
            settingKeys.auction.packGoldLocation,
            packGoldLocation.auctionHouse,
          );
        d(m);
        var p = b.createElement("li"),
          g = b.createElement("input");
        p.appendChild(g),
          (g.type = "radio"),
          (g.checked = m == packGoldLocation.auctionHouse),
          (g.name = "locationToPackGold"),
          (g.id = "rdoAutionHouse"),
          y(g).on("click", function () {
            d(packGoldLocation.auctionHouse),
              this.checked &&
                F(
                  settingKeys.auction.packGoldLocation,
                  packGoldLocation.auctionHouse,
                );
          });
        var h = b.createElement("label");
        (h.htmlFor = g.id),
          (h.textContent = "Auction house".gts_translate()),
          p.appendChild(h),
          c.appendChild(p);
        var f = b.createElement("li"),
          k = b.createElement("input");
        f.appendChild(k),
          (k.type = "radio"),
          (k.checked = m == packGoldLocation.guildMarket),
          (k.name = "locationToPackGold"),
          (k.id = "rdoGuildMarket"),
          y(k).on("click", function () {
            d(packGoldLocation.guildMarket),
              this.checked &&
                F(
                  settingKeys.auction.packGoldLocation,
                  packGoldLocation.guildMarket,
                );
          });
        var w = b.createElement("label");
        (w.htmlFor = k.id),
          (w.textContent = "Guild market".gts_translate()),
          f.appendChild(w),
          c.appendChild(f);
        var C = b.createElement("li"),
          x = b.createElement("input");
        C.appendChild(x),
          (x.type = "radio"),
          (x.checked = m == packGoldLocation.guildBank),
          (x.name = "locationToPackGold"),
          (x.id = "rdoGuildBank"),
          y(x).on("click", function () {
            d(packGoldLocation.guildBank),
              this.checked &&
                F(
                  settingKeys.auction.packGoldLocation,
                  packGoldLocation.guildBank,
                );
          });
        var T = b.createElement("label");
        (T.htmlFor = x.id),
          (T.textContent = "Guild bank".gts_translate()),
          C.appendChild(T),
          c.appendChild(C);
        var _ = b.createElement("li"),
          I = b.createElement("input");
        _.appendChild(I),
          (I.type = "radio"),
          (I.checked = m == packGoldLocation.training),
          (I.name = "locationToPackGold"),
          (I.id = "rdoTraining"),
          y(I).on("click", function () {
            d(packGoldLocation.training),
              this.checked &&
                F(
                  settingKeys.auction.packGoldLocation,
                  packGoldLocation.training,
                );
          });
        var S = b.createElement("label");
        (S.htmlFor = I.id),
          (S.textContent = "Training".gts_translate()),
          _.appendChild(S),
          c.appendChild(_);
        var A = b.createElement("li"),
          P = b.createElement("input");
        A.appendChild(P),
          (P.type = "radio"),
          (P.checked = m == packGoldLocation.publicMarket),
          (P.name = "locationToPackGold"),
          (P.id = "rdoPublicMarket"),
          y(P).on("click", function () {
            d(packGoldLocation.publicMarket),
              this.checked &&
                F(
                  settingKeys.auction.packGoldLocation,
                  packGoldLocation.publicMarket,
                );
          });
        var R = b.createElement("label");
        (R.htmlFor = P.id),
          (R.textContent = "Public market".gts_translate()),
          A.appendChild(R),
          c.appendChild(A);
        var M = b.createElement("li"),
          L = b.createElement("input");
        M.appendChild(L),
          (L.type = "radio"),
          (L.checked = m == packGoldLocation.shop),
          (L.name = "locationToPackGold"),
          (L.id = "rdoShop"),
          y(L).on("click", function () {
            d(packGoldLocation.shop),
              this.checked &&
                F(settingKeys.auction.packGoldLocation, packGoldLocation.shop);
          });
        var G = b.createElement("label");
        (G.htmlFor = L.id),
          (G.textContent = "Shop".gts_translate()),
          M.appendChild(G),
          c.appendChild(M),
          e.appendChild(this.createRow("Hide gold in".gts_translate(), [c]));
        var U = this.createInput(null, "textbox");
        (U.className = "input-gold"),
          (U.value = D(settingKeys.auction.packGoldAmount, "30000")),
          y(U).on("change", function () {
            F(settingKeys.auction.packGoldAmount, this.value);
          }),
          e.appendChild(
            this.createRow(
              "Hide gold once over".gts_translate(),
              [U, ie()],
              null,
              null,
              "packing-gold-threshold",
            ),
          );
        var Q = this.createElement("select"),
          J = D(X.statToTrain, 0);
        for (var W of characterStats) {
          ((et = t.createElement("option", null, null, W.name)).value = W.value),
            (et.selected = t.isEqual(W.value, J)),
            Q.appendChild(et);
        }
        y(Q).on("change", function () {
          var e = t.getSelectedValue(this);
          null != e && (F(X.minGoldToTrain, 0), F(X.statToTrain, e));
        }),
          e.appendChild(
            this.createRow(
              "Training attribute".gts_translate(),
              [Q],
              null,
              null,
              "hide training-config",
            ),
          );
        var K = H.createNumberInput(X.keepAmountOfGoldOnHand, 1e4);
        e.appendChild(
          this.createRow(
            "Keep amount of gold on hand".gts_translate(),
            [K, ie()],
            null,
            null,
            "hide guild-bank-config",
          ),
        );
        var V,
          Y = this.createInput(null, "textbox");
        Y.placeholder =
          "Copy & Paste seller profile's url here and press Enter".gts_translate();
        var $ = (e, t) => {
            var a = this.createElement(
                "li",
                e.sellerId,
                "seller-item",
                e.sellerName,
              ),
              r = this.createElement("i", null, "remove");
            (r.onclick = () => {
              F(X.publicMarketSellers, "[]"), V.remove();
            }),
              a.appendChild(r),
              V.appendChild(a);
          },
          z = () => {
            var e = Y.value;
            if (e) {
              var t = N(X.publicMarketSellers);
              y.get(e, (e) => {
                (V = this.createElement("ul", null, "public-market-sellers")),
                  y(Y).parent().prepend(V);
                var a = preventJQueryLoadResource(e)
                    .find(".player_name_bg > div")[0]
                    .innerText.trim(),
                  r = { sellerId: Y.value.match(/\&p=(\d+)/)[1], sellerName: a };
                t.push(r),
                  F(X.publicMarketSellers, JSON.stringify(t)),
                  $(r),
                  (Y.value = "");
              });
            }
          };
        let ae = y(Y);
        ae.on("blur", z),
          ae.on("keypress", (e) => {
            Y.value;
            13 == e.keyCode && z();
          });
        var re = N(X.publicMarketSellers);
        re.length &&
          ((V = this.createElement("ul", null, "public-market-sellers")),
          re.forEach($)),
          e.appendChild(
            this.createRow(
              "Only buy from player".gts_translate(),
              [V, Y],
              null,
              null,
              "hide public-market-config",
            ),
          );
        var ne = H.createLabel("min "),
          oe = H.createInput(
            X.minGoldPackCanBuy,
            "textbox",
            "30000",
            "input-gold",
          ),
          le = H.createLabel("max "),
          ce = H.createHtmlLabel(" , "),
          me = H.createInput(
            X.maxGoldPackCanBuy,
            "textbox",
            "9000000",
            "input-gold",
          ),
          pe = this.createRow(
            "Gold packing range".gts_translate(),
            [ne, oe, ie(), ce, le, me, , ie()],
            null,
            null,
            "hide guild-market-config shop-config",
            "Bot will buy any items which has amount of gold in the configuration range".gts_translate(),
          );
        e.appendChild(pe);
        let ge = H.createDropdown(
          X.guildPackSorting,
          guildPackSorting[2].value,
          guildPackSorting,
          "name",
          "value",
        );
        e.appendChild(
          this.createRow(
            "Guild package sorting".gts_translate(),
            [ge],
            null,
            null,
            "hide guild-market-config",
          ),
        );
        var fe = this.createInput(null, "checkbox");
        (fe.checked = se(X.autoPutGoldPackBackToGM, !0)),
          y(fe).on("change", function () {
            F(X.autoPutGoldPackBackToGM, this.checked);
          });
        var ve = this.createElement("select"),
          ye = D(X.packDuration, marketDuration.twoHours),
          be = { 1: 2, 2: 8, 3: 24 };
        for (var ke in be) {
          var we = be[ke];
          ((et = t.createElement(
            "option",
            null,
            null,
            "{numberOfHours} hours".gts_translate({ numberOfHours: we }),
          )).value = ke),
            (et.selected = t.isEqual(ke, ye)),
            ve.appendChild(et);
        }
        y(ve).on("change", function () {
          var e = t.getSelectedValue(this);
          null != e && F(X.packDuration, e);
        });
        var Ce = this.createElement("ul", null, "gold-packs"),
          xe = N(X.boughtGoldPacks);
        for (ke = 0; ke < xe.length; ke++)
          ((e) => {
            var t = this.createElement("li");
            let a = { itemName: e.itemName, playerName: e.seller };
            var r = "Bot bought {itemName} from {playerName}".gts_translate(a),
              n = this.createElement(
                "span",
                null,
                "failed",
                "Failed".gts_translate(),
              );
            E.showTooltip(n, [{ text: e.errorMessage, color: "#ff0000" }]);
            var i = this.createElement("span", null, null, r),
              o = this.createElement("span", null, "gold-amount", e.packAmount),
              l = this.createElement("i", null, "icon_gold"),
              s = this.createElement("a", null, "remove", "remove");
            (s.onclick = () => {
              t.remove();
              var a = N(X.boughtGoldPacks);
              (a = a.filter(function (t) {
                return t && t.id != e.id;
              })),
                F(X.boughtGoldPacks, JSON.stringify(a));
            }),
              o.appendChild(l),
              e.isError && t.appendChild(n),
              t.appendChild(o),
              t.appendChild(i),
              t.appendChild(s),
              Ce.appendChild(t);
          })(xe[ke]);
        if (0 == xe.length) {
          var Te = this.createElement("li", null, "no-bought-pack");
          (Te.textContent =
            "There is no pack need to put back in Guild Market".gts_translate()),
            Ce.appendChild(Te);
        }
        var _e = this.createRow(
          "Packs bought from Guild Market".gts_translate(),
          [
            fe,
            b.createTextNode(
              "Enable this option for auto put all gold packs in queue below to Guild Market with selected duration".gts_translate(),
            ),
            ve,
            Ce,
          ],
          null,
          null,
          "hide guild-market-config",
        );
        e.appendChild(_e);
        var Ie = this.createInput(null, "checkbox");
        (Ie.checked = "true" === D(X.autoRepackExpiringItem, "true")),
          y(e).toggleClass("repack-enabled", Ie.checked),
          y(Ie).on("change", function () {
            F(X.autoRepackExpiringItem, this.checked),
              F(X.timeToTriggerAutoRepack, "0"),
              y(e).toggleClass("repack-enabled", this.checked);
          });
        var Se = this.createElement("select"),
          Ae = D(X.dayLeftShouldRepack, 4);
        for (var Oe of [1, 2, 3, 4]) {
          ((et = t.createElement(
            "option",
            null,
            null,
            1 == Oe
              ? "1 day".gts_translate()
              : "{numberOfDay} days".gts_translate({ numberOfDay: Oe }),
          )).value = Oe),
            (et.selected = t.isEqual(Oe, Ae)),
            Se.appendChild(et);
        }
        y(Se).on("change", function () {
          var e = t.getSelectedValue(this);
          null != e && F(X.dayLeftShouldRepack, e),
            F(X.timeToTriggerAutoRepack, "0");
        }),
          e.appendChild(
            this.createRow("Auto reset timer of expiring items".gts_translate(), [
              Ie,
              b.createTextNode(
                "By enable this option, the Bot will sell upcoming expired items from Packages to Guild Market with 2 gold and cancel to reset expiration time. It requires player must in a Guild and the items cooldown less than".gts_translate(),
              ),
              Se,
            ]),
          );
        var Ee = E.unique(
            D(X.selectedItemTypeForRepack, defaultSelectedItemTypeForRepack)
              .split(",")
              .filter((e) => e),
          ),
          Pe = this.createElement("ul", null, "repack-item-types");
        for (var qe of itemTypes)
          if (qe.value != goldItemType) {
            var Re = b.createElement("li"),
              De = b.createElement("input");
            Re.appendChild(De),
              (De.type = "checkbox"),
              (De.checked = Ee.indexOf(qe.value) > -1),
              (De.id = "chkRepack" + qe.name.replace(" ", "")),
              (function (e) {
                y(De).on("click", function () {
                  var t = E.unique(
                    D(
                      X.selectedItemTypeForRepack,
                      defaultSelectedItemTypeForRepack,
                    )
                      .split(",")
                      .filter((e) => e)
                      .map((e) => v(e)),
                  );
                  this.checked ? t.push(e) : t.splice(t.indexOf(e), 1),
                    F(X.selectedItemTypeForRepack, t),
                    F(X.timeToTriggerAutoRepack, "0");
                });
              })(v(qe.value));
            var Fe = b.createElement("label");
            (Fe.htmlFor = De.id),
              (Fe.textContent = qe.name),
              Re.appendChild(Fe),
              Pe.appendChild(Re);
          }
        var Ne = D(
            X.selectedItemQualityForRepack,
            defaultSelectedItemQualityForRepack,
          )
            .split(",")
            .filter((e) => e),
          Be = this.createElement("ul", null, "repack-item-types");
        for (let e of itemQualities)
          if (!(e.value < 2)) {
            var Le = b.createElement("li"),
              Ge = b.createElement("input");
            Le.appendChild(Ge),
              (Ge.type = "checkbox"),
              (Ge.checked = Ne.indexOf(e.value) > -1),
              (Ge.id = "chkRepack_Quality_" + e.name.replace(" ", "")),
              (function (e) {
                y(Ge).on("click", function () {
                  var t = D(
                    X.selectedItemQualityForRepack,
                    defaultSelectedItemQualityForRepack,
                  )
                    .split(",")
                    .filter(function (e) {
                      return e;
                    })
                    .map(function (e) {
                      return v(e);
                    });
                  this.checked ? t.push(e) : (t = t.filter((t) => t != e)),
                    F(X.selectedItemQualityForRepack, t),
                    F(X.timeToTriggerAutoRepack, "0");
                });
              })(e.value);
            var Ue = b.createElement("label");
            (Ue.htmlFor = Ge.id),
              (Ue.textContent = e.name),
              Le.appendChild(Ue),
              Be.appendChild(Le);
          }
        var He = "true" == D(X.shouldRepackUnderworldItems, "true"),
          Qe = b.createElement("li"),
          Xe = b.createElement("input");
        Qe.appendChild(Xe),
          (Xe.type = "checkbox"),
          (Xe.checked = He),
          (Xe.id = "chkRepack_UnderworldItems"),
          y(Xe).on("click", function () {
            F(X.shouldRepackUnderworldItems, this.checked),
              F(X.timeToTriggerAutoRepack, "0");
          });
        var We = b.createElement("label");
        (We.htmlFor = Xe.id),
          (We.textContent = "Underworld Items".gts_translate()),
          Qe.appendChild(We),
          Be.appendChild(Qe);
        var Ke = b.createElement("li");
        let Ve = H.createToggle(
          X.shouldRepackItemHasUnknownScroll,
          "Has unknown scroll".gts_translate(),
          !1,
          () => F(X.timeToTriggerAutoRepack, "0"),
        );
        if (
          (Ke.appendChild(Ve[0]),
          Ke.appendChild(Ve[1]),
          Be.appendChild(Ke),
          e.appendChild(
            this.createRow(
              "Item types should repack".gts_translate(),
              [Pe, Be],
              null,
              null,
              "hide repack-item-types-row",
            ),
          ),
          E.getPlayerLevel() > 4)
        ) {
          var Ye = (t) => {
            y(e).toggleClass("auto-repair-on", t);
          };
          e.appendChild(
            this.createRowHeader("Auto repairing items".gts_translate()),
          );
          var je = D(X.autoRepairItem, "");
          ("true" != je && "false" != je) ||
            ((je = "true" == je ? "1,2" : ""), F(X.autoRepairItem, je));
          var $e = H.createCheckboxList(
            "chkAutoRepairItem",
            dolls,
            "name",
            "value",
            null,
            X.autoRepairItem,
            () => {
              Ye(D(X.autoRepairItem, "").length > 0);
            },
          );
          Ye(je.length > 0),
            e.appendChild(
              this.createRow("Auto repair item".gts_translate(), [$e]),
            );
          var ze = this.createElement("select");
          e.appendChild(
            this.createRow(
              "Repair when conditioning below x%".gts_translate(),
              [ze],
              null,
              null,
              "hide auto-repair-config",
            ),
          );
          var Ze = D(X.repairConditioningThrehold, "10");
          "0" == Ze && ((Ze = "1"), F(X.repairConditioningThrehold, Ze));
          for (ke = 0; ke <= 50; ke += 10) {
            let e = 0 == ke ? ke + 1 : ke;
            var et;
            ((et = this.createElement("option", null, null, e + "%")).value = e),
              (et.selected = this.isEqual(e, Ze)),
              ze.appendChild(et);
          }
          y(ze).on("change", function () {
            null != (Ze = Je.getSelectedValue(this)) &&
              F(X.repairConditioningThrehold, Ze);
          });
          var tt,
            at = N(Z.materialNames),
            rt = [],
            nt = N(X.ignoreMaterials, JSON.parse(defaultIgnoreUWMaterials));
          for (var it in at)
            rt.push({ text: at[it], value: it, icon: !0 }),
              !tt && nt.indexOf(v(it)) < 0 && (tt = it);
          var ot = E.buildDropDown(rt, tt, (e) => {
              tt = e.value;
            }),
            lt = this.createElement("ul", null, "ignore-materials"),
            st = O.dom.createButton("Add to ignore list".gts_translate(), () => {
              var e = N(X.ignoreMaterials, JSON.parse(defaultIgnoreUWMaterials));
              e.push(v(tt)),
                e.sort((e, t) => e - t),
                F(X.ignoreMaterials, JSON.stringify(O.array.unique(e))),
                ut(lt);
            });
          st.className += " ml-5";
          var ut = (e) => {
            t.removeChildren(e);
            var a = N(X.ignoreMaterials, JSON.parse(defaultIgnoreUWMaterials));
            for (var r of a) {
              var n = at[r];
              n &&
                (function (a, r) {
                  var n = t.buildPlayerItem(a, function (e) {
                    y(n).prev().focus(),
                      n.remove(),
                      y(".dropdown-item .item-i-18-" + r)
                        .parent()
                        .show();
                    var t = N(X.ignoreMaterials);
                    (t = t.filter(function (e) {
                      return e != r && e;
                    })).sort(),
                      F(X.ignoreMaterials, JSON.stringify(O.array.unique(t))),
                      e.stopPropagation();
                  });
                  e.appendChild(n);
                })(n, r);
            }
            setTimeout(() => {
              for (var e of (y(".dropdown-item").show(), a))
                y(".dropdown-item .item-i-18-" + e)
                  .parent()
                  .hide();
            }, 100);
          };
          ut(lt),
            e.appendChild(
              this.createRow(
                "Repair item without using listed materials".gts_translate(),
                [ot, st, lt],
                null,
                null,
                "",
              ),
            );
          let a = H.createDropdown(
            settingKeys.workbench.maxQuality,
            1,
            itemQualities,
            "name",
            "value",
          );
          e.appendChild(
            this.createRow(
              "Max quality can be used for repairing".gts_translate(),
              [a],
            ),
          ),
            e.appendChild(
              this.createRowHeader(
                "Auto outbiding in Auction House ".gts_translate(),
              ),
            );
          var dt = itemFilterTypes.strength,
            ct = E.buildDropDown(
              auctionHouseFilterConditions,
              dt,
              (e) => {
                (dt = e.value),
                  y(mt).toggle(e.value != itemFilterTypes.hasUnknownScroll);
              },
              "mr-5",
            ),
            mt = this.createInput("", "textbox", "mr-5"),
            pt = this.createElement("ul", null, "auction-item-filters"),
            gt = this.createElement("label", "", "color-red"),
            ht = () => {
              F(X.nextTimeCheckAuctionHouse, 0),
                F(X.nextTimeCheckAuctionHouse2, 0);
            },
            ft = O.dom.createButton("Add Filter".gts_translate(), () => {
              var e = auctionHouseFilterConditions.filter(
                (e) => e.value == dt,
              )[0];
              if (dt != itemFilterTypes.hasUnknownScroll) {
                var t = (function (e, t) {
                  return mercenaryFilterTypes.indexOf(e.value) > -1
                    ? Number.isInteger(v(t))
                      ? ""
                      : "Filter value should be a number".gts_translate()
                    : "";
                })(e, mt.value);
                if (((gt.textContent = t), t)) return;
              }
              var a = N(X.auctionHouseItemFilters),
                r = a.find((t) => t.condition.value == e.value);
              r &&
              (mercenaryFilterTypes.indexOf(e.value) > -1 ||
                e.value == itemFilterTypes.damage)
                ? (r.value = mt.value)
                : (r && r.condition.value == itemFilterTypes.hasUnknownScroll) ||
                  a.push({
                    condition: e,
                    value: mt.value.toLowerCase(),
                    id: E.randomId(),
                  }),
                F(X.auctionHouseItemFilters, JSON.stringify(O.array.unique(a))),
                vt(pt, X.auctionHouseItemFilters, ht),
                ht();
            }),
            vt = (e, a, r) => {
              t.removeChildren(e);
              var n = N(a);
              for (var i of n)
                !(function (n) {
                  var i =
                    [
                      itemFilterTypes.itemName,
                      itemFilterTypes.itemNameWord,
                    ].indexOf(n.condition.value) < 0
                      ? n.value
                      : `"${n.value}"`;
                  let o = auctionHouseFilterConditions.find(
                    (e) => e.value == n.condition.value,
                  );
                  var l = `${(o && o.text) || n.condition.text} <b style="color: red;">${i}</b>`,
                    s = t.buildPlayerItem(l, (e) => {
                      y(s).prev().focus(), s.remove();
                      var t = N(a);
                      (t = t.filter((e) => e.id != n.id && e)),
                        F(a, JSON.stringify(t)),
                        e.stopPropagation(),
                        r && r(n.id, t.length);
                    });
                  e.appendChild(s);
                })(i);
            };
          vt(pt, X.auctionHouseItemFilters, ht);
          var yt = this.createInput("chkAutoBidMatchedItem", "checkbox");
          (yt.checked = "true" === D(X.autoBidMatchedItem, "true")),
            y(yt).on("change", function () {
              F(X.autoBidMatchedItem, this.checked),
                !this.checked &&
                  F(settingKeys.auction.isOutbidingInVeryShort, !1);
            });
          var bt = this.createElement(
            "label",
            null,
            null,
            "Auto bid matched items".gts_translate(),
          );
          (bt.htmlFor = yt.id),
            D(X.itemTypesForAHFiltering, "1,2,3,4,5,6,8,9,15");
          var kt = H.createCheckboxList(
            "chkItemTypeForAHFiltering",
            itemTypesForAuctionHouseFiltering,
            "name",
            "value",
            null,
            X.itemTypesForAHFiltering,
            ht,
          );
          e.appendChild(
            this.createRow(
              "Auction house item filters".gts_translate(),
              [ct, mt, ft, gt, yt, bt, pt, kt],
              null,
              null,
            ),
          );
          let r = H.createToggle(
            ee.onlyOutbidOthersInVeryShort,
            "Only outbid other players in very short".gts_translate(),
          );
          var wt = H.createDropdown(
            ee.outbidDuration,
            auctionState.short,
            auctionStateOptions,
            "text",
            "value",
          );
          e.appendChild(
            this.createRow("Auction bidding duration".gts_translate(), [
              wt,
              ...r,
            ]),
          );
          var Ct = H.createInput(
            ee.maxOutbidItemPrice,
            "textbox",
            5e4,
            "input-gold",
          );
          if (
            (e.appendChild(
              this.createRow(
                "Max bidding item price".gts_translate(),
                [Ct, ie()],
                null,
                null,
                "",
              ),
            ),
            he > 4)
          ) {
            var xt = this.createInput(null, "checkbox");
            (xt.checked = "true" === D(j.autoBuyFood, "false")),
              y(xt).on("change", function () {
                F(j.autoBuyFood, this.checked),
                  F(j.checkingAvailableFoodTimer, 0);
              });
            var Tt = [xt],
              _t = this.createElement(
                "span",
                null,
                null,
                "Buy any food which has ratio of life points per gold greater than".gts_translate(),
              ),
              It = this.createInput(null, "textbox");
            (It.className = "gts-input-small"),
              (It.value = D(j.goldPerLifePointRatio, "4")),
              y(It).on("change", function () {
                (this.value = this.value || 0),
                  F(j.goldPerLifePointRatio, this.value);
              });
            let t = y("<div>").append(
              H.createToggle(
                settingKeys.health.ignoreLargeFood,
                "Only buy small size food".gts_translate(),
                !0,
              ),
            );
            Tt.push(_t), Tt.push(It), Tt.push(t[0]);
            var St = this.createRow(
              "Auto buying food in Auction House".gts_translate(),
              Tt,
            );
            e.appendChild(St);
          }
          e.appendChild(this.createRowHeader("Auto smelting".gts_translate()));
          let n = y('<ul class="smelting-rules">'),
            i = N(X.smeltingRules, []),
            o = itemTypeWithIcons
              .filter((e) => itemTypesForSmelting.indexOf(e.value) >= 0)
              .reduce((e, t) => ((e[t.value] = !0), e), {}),
            l = qualityFilterConditions
              .filter((e) => e.value < itemQuality.orange)
              .reduce((e, t) => ((e[t.value] = !0), e), {}),
            s = {
              mainFilterProp: itemFilterTypes.itemName,
              mainFilterValue: "",
              qualities: l,
              isActive: !0,
              hasUnknownScroll: void 0,
              selectedItemTypes: o,
            },
            u = (e, t, a) => {
              let r = y('<li class="smelting-rule">'),
                n = y('<div class="main-smelting-rule-row">'),
                i = y('<div class="item-types-smelting-rule-row">'),
                o = H.createRawToggle("", e.isActive, "", (a) => {
                  (e.isActive = a), t(e);
                });
              E.showTooltip(o, [
                {
                  text: "Turn on to active this rule".gts_translate(),
                  color: "#00ff00",
                },
              ]);
              let l = E.buildDropDown(
                  autoSmeltingFilterConditions,
                  e.mainFilterProp,
                  (a) => {
                    e.mainFilterProp = a.value;
                    let r = gts_BoolOperators.indexOf(e.mainFilterProp) > -1;
                    r && (e.mainFilterValue = ""),
                      y(s)[r ? "hide" : "show"](),
                      t(e);
                  },
                ),
                s = H._createInput(
                  null,
                  "textbox",
                  "main-filter-value",
                  e.mainFilterValue,
                  (a) => {
                    (e.mainFilterValue = a), t(e);
                  },
                );
              y(s)[
                gts_BoolOperators.indexOf(e.mainFilterProp) > -1 ? "hide" : "show"
              ]();
              var u = E.buildDropDown(
                hasUnknownScrollFilters,
                e.hasUnknownScroll,
                (a) => {
                  (e.hasUnknownScroll = a.value), t(e);
                },
              );
              let d = H.createLabel("Level <="),
                c = H._createInput(null, "number", "input-gold", e.level, (a) => {
                  (e.level = a), t(e);
                });
              c.min = 1;
              var m = H._createElement("span", null, "btn-delete", "x");
              E.showTooltip(m, [
                { text: "Remove this rule".gts_translate(), color: "#00ff00" },
              ]),
                y(m).on("click", () => {
                  r.remove(), a(e);
                }),
                n
                  .append(o)
                  .append(l)
                  .append(s)
                  .append(u)
                  .append(d)
                  .append(c)
                  .append(m),
                itemTypeWithIcons
                  .filter((e) => itemTypesForSmelting.indexOf(e.value) >= 0)
                  .map((a) => {
                    let r = y(
                      `<span class="item-type"><i class="item-type-icon ${a.icon}"></i></span>`,
                    );
                    (e.selectedItemTypes = e.selectedItemTypes || {}),
                      r.toggleClass("active", !!e.selectedItemTypes[a.value]),
                      E.showTooltip(r[0], [
                        { text: a.tooltip, color: "#00ff00" },
                      ]),
                      ((a, r) =>
                        r.on("click", () => {
                          let n = e.selectedItemTypes || {},
                            i = !n[a.value],
                            o =
                              1 ==
                              itemTypeWithIcons.filter((e) => n[e.value]).length;
                          (!i && o) ||
                            ((n[a.value] = i),
                            (e.selectedItemTypes = n),
                            r.toggleClass("active", i),
                            t(e));
                        }))(a, r),
                      i.append(r);
                  });
              let p = y('<span class="item-type separator"></span>');
              return (
                i.append(p),
                qualityFilterConditions.map((a) => {
                  let r = y(
                    `<span class="item-type with-quality"><span class="quality" style="background-color: ${a.color}"></span></span>`,
                  );
                  (e.qualities = e.qualities || {}),
                    r.toggleClass("active", !!e.qualities[a.value]),
                    ((a, r) =>
                      r.on("click", () => {
                        let n = e.qualities || {},
                          i = !n[a.value],
                          o =
                            1 ==
                            qualityFilterConditions.filter((e) => n[e.value])
                              .length;
                        (!i && o) ||
                          ((n[a.value] = i),
                          (e.qualities = n),
                          r.toggleClass("active", i),
                          t(e));
                      }))(a, r),
                    i.append(r);
                }),
                i.append(p.clone()),
                hammerQualities.map((a) => {
                  let r = y(
                    `<span class="item-type"><i class="item-type-icon ${a.icon}"></i></span>`,
                  );
                  (e.selectedHammerTypes = e.selectedHammerTypes || {}),
                    r.toggleClass("active", !!e.selectedHammerTypes[a.value]),
                    E.showTooltip(r[0], [{ text: a.tooltip, color: "#00ff00" }]),
                    ((a, r) =>
                      r.on("click", () => {
                        let n = e.selectedHammerTypes || {},
                          i = !n[a.value],
                          o =
                            1 ==
                            itemTypeWithIcons.filter((e) => n[e.value]).length;
                        (!i && o) ||
                          ((n[a.value] = i),
                          (e.selectedHammerTypes = n),
                          r.toggleClass("active", i),
                          t(e));
                      }))(a, r),
                    i.append(r);
                }),
                r.append(n).append(i),
                r
              );
            },
            d = () => {
              let e = y('<li class="smelting-rule emtpy">');
              return (
                e.text(
                  "Please add at least one active rule for auto smelting.".gts_translate(),
                ),
                e
              );
            },
            c = (e, t) => {
              n.empty(),
                0 == e.length
                  ? n.append(d())
                  : e.map((a) => {
                      n.append(
                        u(a, t, (a) => {
                          var r = e.findIndex(
                            (e) => e.id == a.id || null == e.id,
                          );
                          r > -1 && e.splice(r, 1), t(a);
                        }),
                      );
                    });
            },
            m = (e) => {
              c(e, (t, a) => {
                if (t && !a) {
                  let e = N(settingKeys.smeltery.itemsForSmelt);
                  ue(
                    settingKeys.smeltery.itemsForSmelt,
                    e.filter((e) => e.ruleId != t.id),
                  );
                }
                ue(
                  X.smeltingRules,
                  e.sort((e, t) =>
                    e.isActive && !t.isActive
                      ? -1
                      : !e.isActive && t.isActive
                        ? 1
                        : 0,
                  ),
                ),
                  t.isActive && !a && E.resetAutoSmeltingState(),
                  0 == e.length && (n.empty(), n.append(d()));
              });
            };
          m(i);
          let p = H.createButton("New Rule".gts_translate(), () => {
            let e = y.extend(!0, { id: E.randomId() }, s);
            i.push(e),
              ue(X.smeltingRules, i),
              F(X.nextTimeCheckItemForSmelting, 0),
              m(i),
              (n[0].scrollTop = n[0].scrollHeight);
          });
          e.appendChild(
            this.createRow("Auto smelting item filters".gts_translate(), [
              n[0],
              p,
            ]),
          );
          let g = H.createCheckboxList(
            "chkSmeltingInventory",
            bagData,
            "name",
            "value",
            "",
            X.inventoriesForAutoSmelting,
            () => {
              F(te.nextTryForSmelt, 0);
            },
          );
          e.appendChild(
            this.createRow("Auto smelting inventory".gts_translate(), [g]),
          );
        }
        var At = H.createToggle(X.repairBeforeSmelt, "");
        e.appendChild(
          this.createRow("Repair before smelt item".gts_translate(), [At]),
        );
        var Ot = H.createToggle(X.storeResourcesAfterSmelted, "", !0);
        e.appendChild(
          this.createRow("Store smelted resources".gts_translate(), [Ot]),
        );
        var Et = H.createToggle(X.storeResourcesEveryHour, "", !1, () =>
          de(X.storeResourcesTime, 0),
        );
        e.appendChild(
          this.createRow("Store resources every hour".gts_translate(), [Et]),
        );
        let Pt = H.createCheckboxList(
          "chkAutoUseBoostType",
          boostItemTypes,
          "text",
          "value",
          null,
          X.autoUseBoostItems,
          (e) => {
            (e = e.map((e) => v(e))).includes(boostItemTypeValues.damage) &&
              F(X.smallGrindstoneExpiredTime, 0),
              e.includes(boostItemTypeValues.healPoint) &&
                ue(X.healPointBoostExpiredTime, defaultHealPointBoostExpiredTime);
          },
        );
        e.appendChild(
          this.createRowHeader(
            "Auto boosting Arena's statistics and equipments".gts_translate(),
          ),
        );
        let qt = H.createCheckboxList(
          E.makeUid,
          usingBoostConditions,
          "text",
          "value",
          null,
          X.selectedUsingBoostConditions,
        );
        e.appendChild(this.createRow("Using boosts when".gts_translate(), [qt])),
          e.appendChild(
            this.createRow("Boosting category".gts_translate(), [Pt]),
          );
        let Rt = H.createDropdown(
            X.jewelleryOilBoost,
            0,
            jewelleryBoostOilOptions,
            "text",
            "value",
            () => {
              ue(
                X.jewelleryOilBoostExpiredTime,
                defaultJewelleryBoostExpiredTime,
              );
            },
          ),
          Dt = H.createCheckboxList(
            void 0,
            bagData,
            "name",
            "value",
            "",
            X.jewelleryOilLookupBag,
            () => {
              ue(
                X.jewelleryOilBoostExpiredTime,
                defaultJewelleryBoostExpiredTime,
              );
            },
          ),
          Ft = H.createLabel(
            "Bot will try to lookup and use the suitable God oils in the selected inventory below".gts_translate(),
            "new-line",
          );
        e.appendChild(
          this.createRow(
            "Boost God oils on jewellery".gts_translate(),
            [Rt, Ft, Dt],
            null,
            null,
            null,
          ),
        );
        var Nt = [
            {
              type: "minerva",
              imageUrl: "../cdn/img//ui/gods/minerva_s16.png",
              tooltip: "Blessing Intelligence".gts_translate(),
            },
            {
              type: "diana",
              imageUrl: "../cdn/img//ui/gods/diana_s16.png",
              tooltip: "Blessing Armour".gts_translate(),
            },
            {
              type: "mars",
              imageUrl: "../cdn/img//ui/gods/mars_s16.png",
              tooltip: "Blessing Damage".gts_translate(),
            },
            {
              type: "merkur",
              imageUrl: "../cdn/img//ui/gods/merkur_s16.png",
              tooltip: "Blessing Charisma".gts_translate(),
            },
            {
              type: "apollo",
              imageUrl: "../cdn/img//ui/gods/apollo_s16.png",
              tooltip: "Blessing Agility".gts_translate(),
            },
            {
              type: "vulcanus",
              imageUrl: "../cdn/img//ui/gods/vulcanus_s16.png",
              tooltip: "Blessing Dexterity".gts_translate(),
            },
          ],
          Mt = H.createCheckboxList(
            void 0,
            Nt,
            null,
            "type",
            "god-oils",
            X.godBlessingLevel1,
          );
        let Bt = H.createDropdown(
            X.godBlessingLevel1Until,
            60,
            pointPercents.filter((e) => e.value > 0),
            "name",
            "value",
            () => {
              de(X.godBlessingLevel1Cooldown, 0);
            },
          ),
          Lt = H.createLabel("If points >".gts_translate(), "margin-r-5");
        e.appendChild(
          this.createRow("God blessing level 1".gts_translate(), [Mt, Lt, Bt]),
        ),
          e.appendChild(
            this.createRowHeader("Searching items in shop".gts_translate()),
          );
        let Gt = !1,
          Ut = 0,
          Ht = !1,
          Qt = () => !Gt,
          Xt =
            "Used <b>{usedClothes}/{maxClothes}</b> clothes | <b>{remainingClothes}</b> remaining clothes".gts_translate(),
          Jt = H.createLabel(""),
          Wt = y(H._createElement("span", null, "loading hide"));
        var Kt = y("#shopItemsSection .gts-items-section-content")[0];
        let Vt = y('<div class="search-result-message">')[0],
          Yt = Me(E, 133),
          jt = H.createButton("Search".gts_translate(), () => {
            if ((Gt = !Gt)) {
              Vt.textContent = "";
              let e = (e, t, a) => {
                  Ut = t;
                  let r = B(X.maxUsedClothesForSearchingShop);
                  (Jt.innerHTML = Xt.replace("{usedClothes}", Ut)
                    .replace("{maxClothes}", r)
                    .replace("{remainingClothes}", e)),
                    (0 == e || a) &&
                      ((Gt = !1),
                      (jt.disabled = !0),
                      (jt.textContent = "Search Completed")),
                    ue(X.shopHighQualityItems, []),
                    Je.buildHighQualityItemsInShop(Kt, []);
                },
                t = (e, t) => {
                  (Ht = e.length > 0),
                    ue(X.shopHighQualityItems, e),
                    Je.buildHighQualityItemsInShop(Kt, e),
                    (Gt = !1),
                    t || ((jt.disabled = !1), (jt.textContent = "Continue")),
                    Wt.toggleClass("hide", !0),
                    (Vt.textContent = `${e.length} item(s) found. Check the "Shop items" box to see the result.`);
                };
              (jt.textContent = "Stop"),
                Yt && Yt(Ht, t, e, Qt, Ut),
                Wt.toggleClass("hide", !1);
            } else (Ht = !1), (jt.textContent = "Stopping"), (jt.disabled = !0);
          }),
          $t = itemTypeWithIcons
            .filter((e) => itemTypesForSearchingShop.indexOf(e.value) >= 0)
            .reduce((e, t) => ((e[t.value] = !0), e), {}),
          zt = {
            mainFilterProp: itemFilterTypes.itemName,
            mainFilterValue: "",
            level: 1,
            quality: -1,
            isActive: !0,
            noRuby: !1,
            selectedItemTypes: $t,
          },
          Zt = () => {
            (Gt = !1),
              (Ut = 0),
              (Ht = !1),
              (jt.disabled = !1),
              (jt.textContent = "Search".gts_translate()),
              (Jt.innerHTML = ""),
              O.storage.setOption(X.nextTimeCheckShopHighQualityItems, 0);
          },
          ea = H.createButton("New Rule".gts_translate(), () => {
            let e = N(X.rulesForSearchingShop),
              t = y.extend(!0, { id: E.randomId() }, zt);
            e.push(t), ue(X.rulesForSearchingShop, e), da(e), Zt();
          }),
          ta = y('<div class="search-in-shop-actions">');
        ta.append(ea).append(jt).append(Wt).append(Jt);
        let aa = y('<div class="search-in-shop-settings">'),
          ra = H.createLabel("Number of clothes to use".gts_translate() + ": "),
          na = H.createNumberInput(X.maxUsedClothesForSearchingShop, 0);
        aa.append(ra).append(na);
        let ia = (e, t, a) => {
            let r = y('<li class="search-in-shop-rule">'),
              n = y('<div class="main-shop-filter-row">'),
              i = y('<div class="item-types-shop-filter-row">'),
              o = H.createRawToggle("", e.isActive, "", (a) => {
                (e.isActive = a), t(e);
              });
            E.showTooltip(o, [
              {
                text: "Turn on to active this rule".gts_translate(),
                color: "#00ff00",
              },
            ]);
            var l = E.buildDropDown(
              shopFilterConditions,
              e.mainFilterProp,
              (a) => {
                if (
                  ((e.mainFilterProp = a.value),
                  mercenaryFilterTypes.indexOf(e.mainFilterProp) > -1)
                ) {
                  let t = {};
                  (t[itemTypeValues.mercenary] = !0), (e.selectedItemTypes = t);
                  var r = i.find(".item-type");
                  r.removeClass("active"), y(r[r.length - 1]).addClass("active");
                }
                t(e);
              },
            );
            let s = H._createInput(
                null,
                "textbox",
                "main-filter-value",
                e.mainFilterValue,
                (a) => {
                  (e.mainFilterValue = a), t(e);
                },
              ),
              u = H.createLabel("Level >=".gts_translate()),
              d = H._createInput(null, "number", "input-gold", e.level, (a) => {
                (e.level = a), t(e);
              });
            d.min = 1;
            let c = H.createLabel("Quality >=".gts_translate());
            var m = E.buildDropDown(
                qualityFilterConditions,
                e.quality,
                (a) => {
                  (e.quality = a.value), t(e);
                },
                "dropdown-color",
              ),
              p = H.createRawToggle(
                "No rubies".gts_translate(),
                e.noRuby,
                "",
                (a) => {
                  (e.noRuby = a), t(e);
                },
              ),
              g = H._createElement("span", null, "btn-delete", "x");
            E.showTooltip(g, [
              { text: "Remove this rule".gts_translate(), color: "#00ff00" },
            ]),
              y(g).on("click", () => {
                r.remove(), a(e);
              }),
              n
                .append(o)
                .append(l)
                .append(s)
                .append(u)
                .append(d)
                .append(c)
                .append(m)
                .append(p)
                .append(g);
            y('<span class="item-type separator"></span>');
            return (
              itemTypeWithIcons
                .filter((e) => itemTypesForSearchingShop.indexOf(e.value) >= 0)
                .map((a) => {
                  let r = y(
                    `<span class="item-type"><i class="item-type-icon ${a.icon}"></i></span>`,
                  );
                  (e.selectedItemTypes = e.selectedItemTypes || {}),
                    r.toggleClass("active", !!e.selectedItemTypes[a.value]),
                    E.showTooltip(r[0], [{ text: a.tooltip, color: "#00ff00" }]),
                    ((a, r) =>
                      r.on("click", () => {
                        let n = e.selectedItemTypes || {},
                          i = !n[a.value],
                          o =
                            1 ==
                            itemTypeWithIcons.filter((e) => n[e.value]).length;
                        (!i && o) ||
                          ((n[a.value] = i),
                          (e.selectedItemTypes = n),
                          r.toggleClass("active", i),
                          t(e));
                      }))(a, r),
                    i.append(r);
                }),
              r.append(n).append(i),
              r
            );
          },
          oa = () => {
            let e = y('<li class="search-in-shop-rule emtpy">');
            return e.text("Add at least one rule to search item in shop."), e;
          },
          la = y.extend(!0, { id: E.randomId() }, zt, { quality: 2 }),
          sa = N(X.rulesForSearchingShop, [la]);
        jt.disabled = !sa.some((e) => e.isActive);
        let ua = y('<ul class="search-in-shop-rules">'),
          da = (e) => {
            ((e, t) => {
              if ((ua.empty(), 0 == e.length)) ua.append(oa());
              else
                for (let a of e) {
                  let r = ia(a, t, (a) => {
                    var r = e.findIndex((e) => e.id == a.id || null == e.id);
                    r > -1 && e.splice(r, 1), t();
                  });
                  ua.append(r);
                }
            })(e, () => {
              ue(X.rulesForSearchingShop, e),
                Zt(),
                (jt.disabled = !e.some((e) => e.isActive)),
                0 == e.length && (ua.empty(), ua.append(oa()));
            });
          };
        da(sa),
          e.appendChild(
            this.createRow("Search item in shop".gts_translate(), [
              aa[0],
              ua[0],
              ta[0],
              Vt,
            ]),
          ),
          e.appendChild(this.createRowHeader("Auto war guild".gts_translate()));
        var ca = Me(q.guild, 138),
          ma = ca && (await ca());
        ma || (ma = { data: [] }),
          ma.data.splice(0, 0, {
            name: `---${"Select guild to war".gts_translate()}---`,
            value: "",
          });
        let pa = D(X.warGuild),
          ga = H.createDropdown(
            X.warGuild,
            null,
            ma.data,
            "name",
            "value",
            () => {
              !pa && de(X.warGuildTime, 0);
            },
          );
        (ga.disabled = !ma.hasPermission),
          !ma.hasPermission &&
            E.showTooltip(ga, [
              {
                text: "You do not have permission to perform war guild".gts_translate(),
                color: "#00ff00",
                width: 290,
              },
            ]),
          e.appendChild(this.createRow("Auto war guild".gts_translate(), [ga]));
        let ha = [...Array(13).keys()].map((e) => ({
            name:
              0 == e
                ? "No delay".gts_translate()
                : "from 1 to {numOfMinutes} minutes".gts_translate({
                    numOfMinutes: 5 * e,
                  }),
            value: 5 * e,
          })),
          fa = H.createDropdown(X.warGuildDelay, 0, ha, "name", "value", (e) => {
            let t = v(e),
              a = t > 0 ? 6e4 * E.random(1, t) : 0;
            F(X.warGuildExtendTime, a);
          });
        e.appendChild(
          this.createRow("War guild random delay".gts_translate(), [fa]),
        );
        let va = B(X.autoWorkPlace, -1),
          ya = H.createDropdown(
            X.autoWorkPlace,
            -1,
            gts_workPlaces,
            "name",
            "id",
            (e) => {
              let t = ba(e),
                a = gts_workPlaces.find((t) => t.id == e);
              F(X.workDuration, a.min),
                H.createDropdownItems(ka, 1, t, "name", "value");
            },
          ),
          ba = (e) => {
            let t = gts_workPlaces.find((t) => t.id == e),
              a = t.min,
              r = t.max;
            return [...Array(r - a + 1).keys()]
              .map((e) => e + a)
              .map((e) => ({
                name:
                  1 == e
                    ? "1 hour".gts_translate()
                    : "{numberOfHours} hours".gts_translate({ numberOfHours: e }),
                value: e,
              }));
          };
        e.appendChild(this.createRowHeader("Auto work".gts_translate()));
        let ka = H.createDropdown(X.workDuration, 1, ba(va), "name", "value"),
          wa = H.createLabel("with duration".gts_translate(), "margin-r-5"),
          Ca = H.createToggle(X.donateBankBeforeWork);
        if (
          (e.appendChild(
            this.createRow(
              "Auto work after run out of all points".gts_translate(),
              [ya, wa, ka],
            ),
          ),
          e.appendChild(
            this.createRow(
              "Donate guild bank before go to work".gts_translate(),
              [Ca],
            ),
          ),
          e.appendChild(
            this.createRowHeader("Miscellaneous settings".gts_translate()),
          ),
          he >= 4)
        ) {
          var xa = [
              {
                type: "minerva",
                imageUrl: "../cdn/img//ui/gods/minerva_s16.png",
                tooltip: "Charisma Oil".gts_translate(),
              },
              {
                type: "diana",
                imageUrl: "../cdn/img//ui/gods/diana_s16.png",
                tooltip: "Dexterity Oil".gts_translate(),
              },
              {
                type: "mars",
                imageUrl: "../cdn/img//ui/gods/mars_s16.png",
                tooltip: "Agility Oil".gts_translate(),
              },
              {
                type: "merkur",
                imageUrl: "../cdn/img//ui/gods/merkur_s16.png",
                tooltip: "Intelligence Oil".gts_translate(),
              },
              {
                type: "apollo",
                imageUrl: "../cdn/img//ui/gods/apollo_s16.png",
                tooltip: "Damage Oil".gts_translate(),
              },
              {
                type: "vulcanus",
                imageUrl: "../cdn/img//ui/gods/vulcanus_s16.png",
                tooltip: "Armour Oil".gts_translate(),
              },
            ],
            Ta = H.createCheckboxList(
              "chkGodOil",
              xa,
              null,
              "type",
              "god-oils",
              X.autoCollectGodOils,
            );
          let t = H.createDropdown(
              X.godPointPercent,
              80,
              pointPercents.filter((e) => e.value > 0),
              "name",
              "value",
              () => {
                F(X.nextTimeCheckGodOils, 0);
              },
            ),
            a = H.createLabel("If points >".gts_translate(), "margin-r-5");
          e.appendChild(
            this.createRow("Auto collect god oils".gts_translate(), [Ta, a, t]),
          );
        }
        var _a = H.createToggle(X.enableHighlightUnderworldItem, "", !0);
        e.appendChild(
          this.createRow("Highlight underworld items".gts_translate(), [_a]),
        );
        var Ia = H.createToggle(X.autoThrowDice, "", !0);
        e.appendChild(
          this.createRow("Auto throw free dice".gts_translate(), [Ia]),
        );
        let Sa = H.createDropdown(
          X.extraLoot,
          2,
          extraLootOptions,
          "text",
          "value",
        );
        e.appendChild(this.createRow("Extra loot action".gts_translate(), [Sa]));
        var Aa = H.createToggle(
            X.autoStartStopEnabled,
            "Enabled".gts_translate(),
            !1,
            () => {
              let e = Me(Je, 132);
              e && e();
            },
          ),
          Oa = H.createToggle(
            X.donateGuildBankBeforeStop,
            "Donate guild bank before stop".gts_translate(),
            !1,
          );
        let Ea = () => {
            let e = {},
              t = [];
            y("ul.start-stop-settings input").each((a, r) => {
              a % 2 == 0
                ? ((e = { start: r.value }), t.push(e))
                : (e.stop = r.value);
            }),
              F(X.autoStartStopSettings, JSON.stringify(t));
            let a = Me(Je, 132);
            a && a();
          },
          Pa = (e) => {
            let t = y("<li>"),
              a = H.createLabel("Start at".gts_translate()),
              r = H.createLabel("Stop at".gts_translate()),
              n = H.createButton("x");
            ((e) => {
              y(n).on("click", () => {
                e.remove(), Ea();
              });
            })(t);
            let i = y('<input type="time">');
            i.val(e.start), i.on("change", Ea);
            let o = y('<input type="time">');
            return (
              o.val(e.stop),
              o.on("change", Ea),
              t.append(a),
              t.append(i),
              t.append(r),
              t.append(o),
              t.append(n),
              t
            );
          },
          qa = [{ start: "08:00", stop: "12:00" }],
          Ra = H.createButton("+"),
          Da = (() => {
            let e = N(X.autoStartStopSettings, qa),
              t = y('<ul class="start-stop-settings">');
            for (let a of e) {
              let e = Pa(a);
              t.append(e);
            }
            return t;
          })();
        y(Ra).on("click", () => {
          let e = Pa(qa[0]);
          Da.append(e), Ea();
        }),
          e.appendChild(
            this.createRow("Schedule start/stop".gts_translate(), [
              ...Aa,
              ...Oa,
              Da[0],
              Ra,
            ]),
          );
        let Fa = H.createToggle(X.ignoreUnionChicken, null, !1);
        e.appendChild(
          this.createRow("Ignore union chicken".gts_translate(), [Fa]),
        );
      },
      validateAutoSettings: function () {},
      buildPlayerList: function (e, t, a) {
        for (var r = this, n = 0; n < t.length; n++) {
          var i = t[n];
          i &&
            (function (t) {
              var n = r.buildPlayerItem(t, function (a) {
                y(n).prev().focus(), n.remove();
                var r = N(e);
                (r = r.filter(function (e) {
                  return e != t && e;
                })),
                  ue(e, r),
                  a.stopPropagation();
              });
              a.insertBefore(n, a.lastChild);
            })(i);
        }
      },
      buildUnderworldContent: function (e) {
        var t = this,
          r = [],
          n = v((playerId + "").substr(0, 6));
        this.removeChildren(e);
        let i = H.createLink(
          "Check this video".gts_translate(),
          "https://www.youtube.com/watch?v=lMt06dY5j18",
          "video-link margin-l-5",
        );
        var o,
          l,
          s,
          p = "Configuration for automating Underworld".gts_translate();
        e.appendChild(
          this.createRow("Description".gts_translate(), [b.createTextNode(p), i]),
        ),
          (o = D(a(g(u(k("IPOu7fkPOYRC3UdXjgHXldNxd"), 12))), "").trim()),
          (l = (function (e) {
            if (!e) return null;
            var t = c(e, "-");
            if (3 != t.length && 4 != t.length) return null;
            var a = m(t[0], 2),
              i = v(m(t[0], 0, 2)),
              o = d(t[1], i),
              l = I * n * (2 << S);
            return o != d(t[2], i) - l || l + _ * (3 << S) != d(a, i)
              ? null
              : (4 == t.length &&
                  d(t[3], i) == l &&
                  r.push((n * Je.server).toString(23)),
                new Date(o));
          })(o)),
          (s = T()),
          l && l > s && [].indexOf(o);
        var h = r.indexOf((n * Je.server).toString(23)) > -1;
        let f = H.createToggle(Y.attackMirrorWithoutWeapon, "", !1);
        e.appendChild(
          this.createRow("Attack Mirror without weapon".gts_translate(), [f]),
        );
        var w = this.createElement("ul", null, "food");
        h || F(Y.farmingMode, underworldFarmingMode.costume);
        var C = D(Y.farmingMode, underworldFarmingMode.costume),
          x = (t) => {
            y(e).toggleClass(
              "underworld-costume-mode",
              t == underworldFarmingMode.costume,
            ),
              y(e).toggleClass(
                "underworld-item-mode",
                t == underworldFarmingMode.item,
              );
          };
        x(C);
        var A = b.createElement("li"),
          E = b.createElement("input");
        A.appendChild(E),
          (E.type = "radio"),
          (E.checked = C == underworldFarmingMode.costume),
          (E.name = "farmingMode"),
          (E.id = "rdoCostumeMode"),
          y(E).on("click", function () {
            x(underworldFarmingMode.costume),
              this.checked && F(Y.farmingMode, underworldFarmingMode.costume);
          });
        var P = b.createElement("label");
        (P.htmlFor = E.id),
          (P.textContent = "To get costume".gts_translate()),
          A.appendChild(P),
          w.appendChild(A);
        var q = b.createElement("li"),
          R = b.createElement("input");
        q.appendChild(R),
          (R.type = "radio"),
          (R.checked = C == underworldFarmingMode.item),
          (R.name = "farmingMode"),
          (R.id = "rdoItemMode"),
          (R.disabled = !h),
          y(R).on("click", function () {
            x(underworldFarmingMode.item),
              this.checked && F(Y.farmingMode, underworldFarmingMode.item);
          });
        var N = b.createElement("label");
        (N.htmlFor = R.id),
          (N.textContent = "To farm items".gts_translate() + " "),
          q.appendChild(N),
          h ||
            y(N).append(
              y("<span>")
                .addClass("red-text")
                .html(
                  "(" +
                    "Available only for Premium License".gts_translate() +
                    ")",
                ),
            ),
          w.appendChild(q);
        let M = H.createLabel(
          "Notes: In farming items mode, Bot will attack all monsters except Dis Pater then switch to attack on the selected monster. {x} minutes before the access to the Underworld end Bot will attack Dis Pater to get the costume.".gts_translate(),
          "selected-location",
        );
        e.appendChild(this.createRow("Farming purpose".gts_translate(), [w, M]));
        var L = this.createElement("select");
        e.appendChild(
          this.createRow(
            "Location".gts_translate(),
            [L],
            null,
            null,
            "selected-location",
          ),
        );
        for (
          var G = D(Y.selectedLocationId, "0"), U = 0;
          U < underworldLocations.length;
          U++
        ) {
          var Q = underworldLocations[U],
            X = this.createElement("option", null, null, Q.name);
          (X.value = Q.id),
            (X.selected = this.isEqual(Q.id, G)),
            L.appendChild(X);
        }
        var J = this.createElement("select");
        e.appendChild(
          this.createRow(
            "Opponent".gts_translate(),
            [J],
            null,
            null,
            "selected-opponent",
          ),
        );
        let W = [];
        for (U = 10; U <= 120; U += 10)
          W.push({
            name: "{numOfMinutes} minutes".gts_translate({ numOfMinutes: U }),
            value: U,
          });
        let K = H.createDropdown(
          Y.attackDisPaterBeforeMinutes,
          30,
          W,
          "name",
          "value",
        );
        e.appendChild(
          this.createRow(
            "Attack Dis Pater {x} minutes before access to Underworld end".gts_translate(),
            [K],
            null,
            null,
            "selected-opponent",
          ),
        ),
          y(J).on("change", function () {
            var e = t.getSelectedValue(this);
            null != e && F(Y.selectedOpponentId, e);
          }),
          y(L).on("change", function () {
            var e = t.getSelectedValue(this);
            null != e &&
              (F(Y.selectedLocationId, e),
              O.storage.clearOption(Y.selectedOpponentId),
              V(e));
          });
        var V = function (e) {
          t.removeChildren(J);
          for (
            var a = underworldLocations.filter((t) => t.id == e).pop(),
              r = D(Y.selectedOpponentId, 1),
              n = 0;
            n < a.opponents.length;
            n++
          ) {
            var i = a.opponents[n],
              o = t.createElement(
                "option",
                null,
                null,
                n + 1 + ". " + i + (3 == n ? " [boss]" : ""),
              );
            (o.value = n + 1),
              (o.selected = t.isEqual(n + 1, r)),
              J.appendChild(o);
          }
        };
        V(G);
        var j = H.createToggle(Y.attackDisPaterAsap, null, "true");
        e.appendChild(
          this.createRow(
            "Attack Dis Pater asap".gts_translate(),
            [j],
            null,
            null,
            "attack-dispater-asap",
          ),
        );
        var $ = H.createToggle(Y.allowUseRuby);
        e.appendChild(this.createRow("Allow use ruby".gts_translate(), [$]));
        var z = H.createToggle(Y.allowUseMobilisation);
        e.appendChild(
          this.createRow(
            "Allow use Mobilisation".gts_translate(),
            [z],
            null,
            null,
            h ? "" : "invalid-premium",
          ),
        );
        var Z = H.createToggle(Y.autoEnterUnderworld);
        Z.disabled = !h;
        var ee = H.createDropdown(Y.underworldLevel, "Normal", underworldLevels);
        ee.disabled = !h;
        var te = h
            ? null
            : y("<span>")
                .addClass("red-text")
                .html(
                  "&nbsp;" + "Available only for Premium License".gts_translate(),
                )[0],
          ae = D(Y.currentCostume, "false,false,false").split(","),
          re = H._createElement("label");
        re.textContent =
          " " +
          "Current costume".gts_translate() +
          ": " +
          "Normal".gts_translate() +
          "(" +
          ("true" == ae[0] ? "✔" : "✘") +
          "), " +
          "Medium".gts_translate() +
          "(" +
          ("true" == ae[1] ? "✔" : "✘") +
          "), " +
          "Hard".gts_translate() +
          "(" +
          ("true" == ae[2] ? "✔" : "✘") +
          ")";
        var ne = H.createIconInfor(
          "Bot will enter underworld when the expedition points is less than a half of the max points.".gts_translate(),
        );
        h || (re = null),
          e.appendChild(
            this.createRow(
              "Auto enter underworld".gts_translate(),
              [Z, ee, te, re, ne],
              null,
              null,
              h ? "" : "invalid-premium",
            ),
          );
        var ie = H.createToggle(Y.autoWearUWCostume, null, "false"),
          oe = H.createIconInfor(
            "If the selected underworld level is Normal or Medium, then bot will wear the costume once the expedition/dungeon points is 0. Otherwise, bot will wear the costume asap.".gts_translate(),
          );
        e.appendChild(
          this.createRow(
            "Auto wear underworld costume".gts_translate(),
            [ie, oe],
            null,
            null,
            h ? "" : "invalid-premium",
          ),
        );
        var le = H.createToggle(Y.pauseArena, null, "true");
        e.appendChild(
          this.createRow(
            "Pause arena while in underworld".gts_translate(),
            [le],
            null,
            null,
            h ? "" : "invalid-premium",
          ),
        );
        var se = H.createLabel(
            dolls[0].name + ":",
            "character-label-for-costume",
          ),
          ue = H.createDropdown(
            Y.arenaCostume,
            -1,
            costumeData,
            null,
            null,
            (e) => {
              F(Y.isArenaWearingSelectedCostume, !1);
              var t = B(Y.circusCostume);
              e > 0 && e == t && (F(Y.circusCostume, -1), y(me).val(-1));
            },
          ),
          de = H._createElement("br"),
          ce = H.createLabel(dolls[1].name + ":", "character-label-for-costume"),
          me = H.createDropdown(
            Y.circusCostume,
            -1,
            costumeData,
            null,
            null,
            (e) => {
              F(Y.isCircusWearingSelectedCostume, !1);
              var t = B(Y.arenaCostume);
              e > 0 && e == t && (F(Y.arenaCostume, -1), y(ue).val(-1));
            },
          );
        e.appendChild(
          this.createRow(
            "Change costume after underworld costume end".gts_translate(),
            [se, ue, de, ce, me],
            null,
            null,
            h ? "" : "invalid-premium",
          ),
        );
        var pe = H.createDropdown(
            Y.arenaCostumeForUnderworld,
            -1,
            costumeData,
            null,
            null,
            (e) => {
              F(Y.isArenaWearingSelectedCostume, !1);
              var t = B(Y.circusCostumeForUnderworld);
              e > 0 &&
                e == t &&
                (F(Y.circusCostumeForUnderworld, -1), y(ge).val(-1));
            },
          ),
          ge =
            ((de = H._createElement("br")),
            H.createDropdown(
              Y.circusCostumeForUnderworld,
              -1,
              costumeData,
              null,
              null,
              (e) => {
                F(Y.isCircusWearingSelectedCostume, !1);
                var t = B(Y.arenaCostumeForUnderworld);
                e > 0 &&
                  e == t &&
                  (F(Y.arenaCostumeForUnderworld, -1), y(pe).val(-1));
              },
            ));
        e.appendChild(
          this.createRow(
            "Change costume while in underworld".gts_translate(),
            [se.cloneNode(!0), pe, de.cloneNode(!0), ce.cloneNode(!0), ge],
            null,
            null,
            h ? "" : "invalid-premium",
          ),
        );
      },
    };
    (Be = Je.workflow), Je.wait(), (n.gts_main = Je);
  })(
    (e) => e.split(""),
    (e) => e.reverse(),
    (e) => e.join(""),
    (e, t) => {
      for (let a = 0; a < t; a++) {
        let t = e.shift();
        e.push(t);
      }
      return e;
    },
    this,
    localStorage,
    (e) => e.split(""),
    (e) => e.reverse(),
    (e) => e.join(""),
    (e, t) => {
      for (let a = 0; a < t; a++) {
        let t = e.shift();
        e.push(t);
      }
      return e;
    },
    (e, t) => {
      for (var a = 0, r = e.length, n = 0, i = ""; (i = e.charAt(n)), n < r; n++)
        a += allChars.indexOf(i) * Math.pow(t, r - 1 - n);
      return a;
    },
    (e, t) => {
      for (
        var a = [], r = e.length, n = "", i = 0, o = "";
        (o = e.charAt(i)), i < r;
        i++
      )
        o != t ? (n += o) : (a.push(n), (n = ""));
      return n && a.push(n), a;
    },
    (e, t, a) => {
      for (
        var r = "", n = a ? a + t : e.length, i = t, o = "";
        (o = e.charAt(i)), i < Math.min(n, e.length);
        i++
      )
        r += o;
      return r;
    },
    (e) => e.split(""),
    (e) => e.reverse(),
    (e) => e.join(""),
    (e, t) => {
      for (let a = 0; a < t; a++) {
        let t = e.shift();
        e.push(t);
      }
      return e;
    },
    this.parseInt,
    jQuery,
    document,
    (e) => e.split(""),
    (e) => e.reverse(),
    (e) => e.join(""),
    (e, t) => {
      for (let a = 0; a < t; a++) {
        let t = e.shift();
        e.push(t);
      }
      return e;
    },
    () => {
      var e = document
          .getElementById("server-time")
          .getAttribute("data-start-time"),
        t = JSON.parse(e);
      return t ? new Date(t[0], t[1] - 1, t[2]) : new Date();
    },
    this.sbaseNumber,
    this.pBaseNumber,
    this.stNumber,
    (e, t, a) => {
      var r = [];
      for (let n = 0; n < t; n++) r.push(e[(n + 1) * a]);
      return r.join("");
    },
  );
  
